<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">nb _pl _r qtrk GetRadialZLUTSize nb _pl _r w qtrk cfg width h qtrk cfg height offset w h nb gain w h nb RandomFill offset w h nb f RandomFill gain w h nb f qtrk SetPixelCalibrationImages offset gain offset gain N trk GetResultCount std::vector&lt;vector3f&gt; results N i i N i LocalizationResult j trk FetchResults j results j job frame j pos results QTrkSettings cfg cfg width cfg height cfg gauss2D_iterations LocMode_t lt LT_Gaussian2D TrackerType qtrk cfg std::vector&lt;float*&gt; images srand qtrk SetRadialZLUT useGC EnableGainCorrection qtrk dbgprintf NumImages std::vector&lt;float&gt; truepos NumImages n n NumImages n t1 GetPreciseTime xp cfg width rand_uniform&lt;float&gt; yp cfg height rand_uniform&lt;float&gt; truepos n xp truepos n yp image cfg width cfg height images push_back image ImageData img image cfg width cfg height GenerateGaussianSpotImage img vector2f xp yp cfg gauss2D_sigma ApplyPoissonNoise img f FloatToJPEGFile SPrintf n c_str image cfg width cfg height dbgprintf NumImages JobsPerImg tstart GetPreciseTime qtrk SetLocalizationMode lt n n NumImages n k k JobsPerImg k LocalizationJob job n qtrk ScheduleLocalization uchar images n cfg width QTrkFloat job qtrk Flush total NumImages JobsPerImg rc qtrk GetResultCount displayrc rc qtrk GetResultCount displayrc rc displayrc JobsPerImg dbgprintf displayrc total displayrc Sleep rc total tend GetPreciseTime rc NumImages JobsPerImg errX errY std::vector&lt;vector3f&gt; results NumImages rc LocalizationResult result qtrk FetchResults result iid result job frame x fabs truepos iid result pos x y fabs truepos iid result pos y results result job frame result pos errX x errY y rc dbgprintf total tend tstart qtrk cfg numThreads dbgprintf errX total errY total DeleteAllElems images results std::vector&lt;T&gt; r N i i N i r i b a i float N a r std::vector&lt;T&gt; r N T a_ log a T b_ log b i i N i r i exp b_ a_ i N a_ r meanErr vector3f i i v size i meanErr v i truepos i meanErr f v size vector3f r uint i i v size i vector3f d v i truepos i meanErr r d d stdev sqrt r v size i i size i d i std::max f mean rand_normal&lt;float&gt; std_deviation QTrkComputedConfig cfg qtrk cfg ImageData img ImageData::alloc cfg width cfg height qtrk SetRadialZLUT zplanes qtrk BeginLUT buildLUTFlags i i zplanes i vector2f pos cfg width cfg height GenerateImageFromLUT img lut qtrk cfg zlut_minradius qtrk cfg zlut_maxradius vector3f pos x pos y i zplanes lut h img normalize i zplanes jpgfile WriteJPEGFile SPrintf jpgfile c_str img qtrk BuildLUT img data img w QTrkFloat i pos qtrk FinalizeLUT newlut ImageData::alloc cfg zlut_radialsteps zplanes qtrk GetRadialZLUT newlut data newlut normalize img free jpgfile zlut_result zplanes cfg zlut_radialsteps qtrk GetRadialZLUT zlut_result FloatToJPEGFile jpgfile zlut_result cfg zlut_radialsteps zplanes zlut_result QTrkComputedConfig cc cfg nsmp int ceil lut w cc zlut_radialsteps resized ImageData::alloc cc zlut_radialsteps lut h c ALLOCA_ARRAY cc zlut_radialsteps y y lut h y i i cc zlut_radialsteps i c i x x lut w x pos x float lut w cc zlut_radialsteps frac pos pos p int pos v lut at x y c p frac resized at p y frac v p cc zlut_radialsteps c p frac resized at p y frac v x x cc zlut_radialsteps x resized at x y c x std::vector&lt;vector3f&gt; results truepos ImageData lut ReadJPEGFile lutfile ImageData img ImageData::alloc cfg width cfg height ImageData rescaledLUT ImageData rescaledBuffer TrkType trk cfg pRescaledLUT rescaledLUT pRescaledLUT rescaledLUT data rescaledLUT ImageData::alloc cfg width cfg height ResampleLUT trk lut lut h rescaledLUT SPrintf name c_str locMode LT_FourierLUT BUILDLUT_FOURIER rescaledBuffer ImageData::alloc cfg width cfg height rescaledLUT rescaledBuffer ResampleLUT trk lut lut h rescaledLUT SPrintf name c_str locMode LT_FourierLUT BUILDLUT_FOURIER useGC EnableGainCorrection trk srand trk SetLocalizationMode locMode i i N i vector3f pos cfg width samplePosRange x rand_uniform&lt;float&gt; f cfg height samplePosRange y rand_uniform&lt;float&gt; f zpos samplePosRange z rand_uniform&lt;float&gt; f GenerateImageFromLUT img rescaledLUT trk cfg zlut_minradius trk cfg zlut_maxradius vector3f pos x pos y pos z noiseFactor ApplyPoissonNoise img noiseFactor truepos push_back pos LocalizationJob job i trk ScheduleImageData img job dbgprintf N WaitForFinish trk N results resize trk GetResultCount uint i i results size i LocalizationResult r trk FetchResults r results r job frame r pos tend GetPreciseTime img free lut free RunTrackerResults r r output results r truepos truepos pRescaledLUT rescaledBuffer free r QueuedTracker TrkType NImg N std::vector&lt;vector3f&gt; results truepos NImg std::vector&lt;ImageData&gt; imgs NImg QueuedTracker trk QueuedCPUTracker cfg ImageData resizedLUT ResampleLUT trk lut lut h resizedLUT buildLUTFlags buildLUTFlags BUILDLUT_BIASCORRECT trk ComputeZBiasCorrection lut h std::vector&lt;Matrix3X3&gt; fishers NImg parallel_for NImg i imgs i ImageData::alloc cfg width cfg height vector3f pos centerpos range vector3f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f GenerateImageFromLUT imgs i resizedLUT trk cfg zlut_minradius trk cfg zlut_maxradius vector3f pos x pos y pos z SampleFisherMatrix fm MaxPixelValue fishers i fm Compute pos vector3f f resizedLUT cfg width cfg height trk cfg zlut_minradius trk cfg zlut_maxradius imgs i normalize MaxPixelValue ApplyPoissonNoise imgs i MaxPixelValue i WriteJPEGFile name imgs i truepos i pos Matrix3X3 fisher i i NImg i fisher fishers i flags LT_LocalizeZ LT_NormalizeProfile extraFlags cfg qi_iterations flags LT_QI trk SetLocalizationMode LocMode_t flags tstart GetPreciseTime i i N i LocalizationJob job i trk ScheduleLocalization uchar imgs i NImg data cfg width QTrkFloat job WaitForFinish trk N tend GetPreciseTime results resize trk GetResultCount uint i i results size i LocalizationResult r trk FetchResults r results r job frame r pos i i NImg i imgs i free SpeedAccResult r r Compute results index truepos index r speed N tend tstart fisher f NImg r crlb sqrt fisher Inverse diag resizedLUT free trk r nNoiseLevels gainStDevScale f nDriftSteps nDriftSteps driftDistance ImageData lut ReadJPEGFile lutfile ImageData img ImageData::alloc QTrkSettings cfg cfg width img w cfg height img h TrackerType trk cfg nBeads zlutMinR zlutMaxR cfg width ResampleLUT trk lut zlutMinR zlutMaxR offset nBeads cfg width cfg height gain nBeads cfg width cfg height useCalib saveImgs info nNoiseLevels trk SetLocalizationMode LocMode_t LT_QI LT_LocalizeZ LT_NormalizeProfile nl nl nNoiseLevels nl offset_stdev info nl nl f gain_stdev info nl nl gainStDevScale srand RandomFill offset nBeads cfg width cfg height offset_stdev RandomFill gain nBeads cfg width cfg height gain_stdev useCalib trk SetPixelCalibrationImages offset gain std::string dirname SPrintf nl saveImgs _mkdir dirname c_str dx driftDistance nDriftSteps d d nDriftSteps d GenerateImageFromLUT img lut zlutMinR zlutMaxR vector3f img w dx d img h img normalize useCalib i i cfg width cfg height i img i gain i ApplyPoissonNoise img i i cfg width cfg height i img i offset i ApplyPoissonNoise img saveImgs d FloatToJPEGFile SPrintf dirname c_str nl d c_str img data img w img h d FloatToJPEGFile SPrintf nl c_str img data img w img h d std::max nDriftSteps dbgprintf d LocalizationJob job d d trk ScheduleLocalization uchar img data img w QTrkFloat job trk Flush trk IsIdle nResults trk GetResultCount dbgprintf nl nResults results FetchResults trk WriteTrace SPrintf dirname c_str results results size WriteImageAsCSV info nNoiseLevels img free lut free gain offset info t0 GetPreciseTime qtrk Flush displayrc rc rc qtrk GetResultCount N displayrc rc displayrc rc displayrc std::max N dbgprintf displayrc N displayrc Threads::Sleep dbgprintf displayrc N t1 GetPreciseTime t1 t0 MeanStDevError truepos output meanErr stdev vector3f s uint i i results size i s results i truepos i s f results size bias s acc vector3f uint i i results size i vector3f d results i truepos i vector3f errMinusMeanErr d s acc errMinusMeanErr errMinusMeanErr acc sqrt acc results size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">ResampleLUT T qtrk ImageData lut zplanes ImageData newlut jpgfile uint buildLUTFlags QTrkComputedConfig cfg qtrk cfg ImageData img ImageData::alloc cfg width cfg height qtrk SetRadialZLUT zplanes qtrk BeginLUT buildLUTFlags i i zplanes i vector2f pos cfg width cfg height GenerateImageFromLUT img lut qtrk cfg zlut_minradius qtrk cfg zlut_maxradius vector3f pos x pos y i zplanes lut h img normalize i zplanes jpgfile WriteJPEGFile SPrintf jpgfile c_str img qtrk BuildLUT img data img w QTrkFloat i pos qtrk FinalizeLUT newlut ImageData::alloc cfg zlut_radialsteps zplanes qtrk GetRadialZLUT newlut data newlut normalize img free jpgfile zlut_result zplanes cfg zlut_radialsteps qtrk GetRadialZLUT zlut_result FloatToJPEGFile jpgfile zlut_result cfg zlut_radialsteps zplanes zlut_result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector3f&gt; FetchResults QueuedTracker trk N trk GetResultCount std::vector&lt;vector3f&gt; results N i i N i LocalizationResult j trk FetchResults j results j job frame j pos results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">RandomFill d size mean std_deviation i i size i d i std::max f mean rand_normal&lt;float&gt; std_deviation</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">TestCMOSNoiseInfluence lutfile nNoiseLevels gainStDevScale f nDriftSteps nDriftSteps driftDistance ImageData lut ReadJPEGFile lutfile ImageData img ImageData::alloc QTrkSettings cfg cfg width img w cfg height img h TrackerType trk cfg nBeads zlutMinR zlutMaxR cfg width ResampleLUT trk lut zlutMinR zlutMaxR offset nBeads cfg width cfg height gain nBeads cfg width cfg height useCalib saveImgs info nNoiseLevels trk SetLocalizationMode LocMode_t LT_QI LT_LocalizeZ LT_NormalizeProfile nl nl nNoiseLevels nl offset_stdev info nl nl f gain_stdev info nl nl gainStDevScale srand RandomFill offset nBeads cfg width cfg height offset_stdev RandomFill gain nBeads cfg width cfg height gain_stdev useCalib trk SetPixelCalibrationImages offset gain std::string dirname SPrintf nl saveImgs _mkdir dirname c_str dx driftDistance nDriftSteps d d nDriftSteps d GenerateImageFromLUT img lut zlutMinR zlutMaxR vector3f img w dx d img h img normalize useCalib i i cfg width cfg height i img i gain i ApplyPoissonNoise img i i cfg width cfg height i img i offset i ApplyPoissonNoise img saveImgs d FloatToJPEGFile SPrintf dirname c_str nl d c_str img data img w img h d FloatToJPEGFile SPrintf nl c_str img data img w img h d std::max nDriftSteps dbgprintf d LocalizationJob job d d trk ScheduleLocalization uchar img data img w QTrkFloat job trk Flush trk IsIdle nResults trk GetResultCount dbgprintf nl nResults results FetchResults trk WriteTrace SPrintf dirname c_str results results size WriteImageAsCSV info nNoiseLevels img free lut free gain offset info</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">EnableGainCorrection QueuedTracker qtrk nb _pl _r qtrk GetRadialZLUTSize nb _pl _r w qtrk cfg width h qtrk cfg height offset w h nb gain w h nb RandomFill offset w h nb f RandomFill gain w h nb f qtrk SetPixelCalibrationImages offset gain offset gain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector3f&gt; Gauss2DTest ifdef _DEBUG NumImages JobsPerImg NumImages JobsPerImg endif useGC QTrkSettings cfg cfg width cfg height cfg gauss2D_iterations LocMode_t lt LT_Gaussian2D TrackerType qtrk cfg std::vector&lt;float*&gt; images srand qtrk SetRadialZLUT useGC EnableGainCorrection qtrk dbgprintf NumImages std::vector&lt;float&gt; truepos NumImages n n NumImages n t1 GetPreciseTime xp cfg width rand_uniform&lt;float&gt; yp cfg height rand_uniform&lt;float&gt; truepos n xp truepos n yp image cfg width cfg height images push_back image ImageData img image cfg width cfg height GenerateGaussianSpotImage img vector2f xp yp cfg gauss2D_sigma ApplyPoissonNoise img f FloatToJPEGFile SPrintf n c_str image cfg width cfg height dbgprintf NumImages JobsPerImg tstart GetPreciseTime qtrk SetLocalizationMode lt n n NumImages n k k JobsPerImg k LocalizationJob job n qtrk ScheduleLocalization uchar images n cfg width QTrkFloat job qtrk Flush total NumImages JobsPerImg rc qtrk GetResultCount displayrc rc qtrk GetResultCount displayrc rc displayrc JobsPerImg dbgprintf displayrc total displayrc Sleep rc total tend GetPreciseTime rc NumImages JobsPerImg errX errY std::vector&lt;vector3f&gt; results NumImages rc LocalizationResult result qtrk FetchResults result iid result job frame x fabs truepos iid result pos x y fabs truepos iid result pos y results result job frame result pos errX x errY y rc dbgprintf total tend tstart qtrk cfg numThreads dbgprintf errX total errY total DeleteAllElems images results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">WaitForFinish QueuedTracker qtrk N t0 GetPreciseTime qtrk Flush displayrc rc rc qtrk GetResultCount N displayrc rc displayrc rc displayrc std::max N dbgprintf displayrc N displayrc Threads::Sleep dbgprintf displayrc N t1 GetPreciseTime t1 t0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">MeanStDevError std::vector&lt;vector3f&gt; truepos std::vector&lt;vector3f&gt; v vector3f meanErr vector3f stdev meanErr vector3f i i v size i meanErr v i truepos i meanErr f v size vector3f r uint i i v size i vector3f d v i truepos i meanErr r d d stdev sqrt r v size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">RunTrackerResults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector3f&gt; output</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector3f&gt; truepos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">vector3f meanErr stdev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">computeStats MeanStDevError truepos output meanErr stdev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">RunTrackerResults RunTracker lutfile QTrkSettings cfg useGC name LocMode_t locMode N ifdef _DEBUG endif noiseFactor zpos ImageData pRescaledLUT vector3f samplePosRange vector3f std::vector&lt;vector3f&gt; results truepos ImageData lut ReadJPEGFile lutfile ImageData img ImageData::alloc cfg width cfg height ImageData rescaledLUT ImageData rescaledBuffer TrkType trk cfg pRescaledLUT rescaledLUT pRescaledLUT rescaledLUT data rescaledLUT ImageData::alloc cfg width cfg height ResampleLUT trk lut lut h rescaledLUT SPrintf name c_str locMode LT_FourierLUT BUILDLUT_FOURIER rescaledBuffer ImageData::alloc cfg width cfg height rescaledLUT rescaledBuffer ResampleLUT trk lut lut h rescaledLUT SPrintf name c_str locMode LT_FourierLUT BUILDLUT_FOURIER useGC EnableGainCorrection trk srand trk SetLocalizationMode locMode i i N i vector3f pos cfg width samplePosRange x rand_uniform&lt;float&gt; f cfg height samplePosRange y rand_uniform&lt;float&gt; f zpos samplePosRange z rand_uniform&lt;float&gt; f GenerateImageFromLUT img rescaledLUT trk cfg zlut_minradius trk cfg zlut_maxradius vector3f pos x pos y pos z noiseFactor ApplyPoissonNoise img noiseFactor truepos push_back pos LocalizationJob job i trk ScheduleImageData img job dbgprintf N WaitForFinish trk N results resize trk GetResultCount uint i i results size i LocalizationResult r trk FetchResults r results r job frame r pos tend GetPreciseTime img free lut free RunTrackerResults r r output results r truepos truepos pRescaledLUT rescaledBuffer free r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">ResizeLUT ImageData lut ImageData resized QTrkSettings cfg QTrkComputedConfig cc cfg nsmp int ceil lut w cc zlut_radialsteps resized ImageData::alloc cc zlut_radialsteps lut h c ALLOCA_ARRAY cc zlut_radialsteps y y lut h y i i cc zlut_radialsteps i c i x x lut w x pos x float lut w cc zlut_radialsteps frac pos pos p int pos v lut at x y c p frac resized at p y frac v p cc zlut_radialsteps c p frac resized at p y frac v x x cc zlut_radialsteps x resized at x y c x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;T&gt; logspace T a T b N std::vector&lt;T&gt; r N T a_ log a T b_ log b i i N i r i exp b_ a_ i N a_ r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00461</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;T&gt; linspace T a T b N std::vector&lt;T&gt; r N i i N i r i b a i float N a r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00470</field>
    <field name="keywords"></field>
    <field name="text">SpeedAccResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00471</field>
    <field name="keywords"></field>
    <field name="text">vector3f acc bias crlb</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00472</field>
    <field name="keywords"></field>
    <field name="text">speed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00473</field>
    <field name="keywords"></field>
    <field name="text">Compute std::vector&lt;vector3f&gt; results std::function vector3f x truepos vector3f s uint i i results size i s results i truepos i s f results size bias s acc vector3f uint i i results size i vector3f d results i truepos i vector3f errMinusMeanErr d s acc errMinusMeanErr errMinusMeanErr acc sqrt acc results size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">SpeedAccResult SpeedAccTest ImageData lut QTrkSettings cfg N vector3f centerpos vector3f range name MaxPixelValue extraFlags buildLUTFlags QueuedTracker TrkType NImg N std::vector&lt;vector3f&gt; results truepos NImg std::vector&lt;ImageData&gt; imgs NImg QueuedTracker trk QueuedCPUTracker cfg ImageData resizedLUT ResampleLUT trk lut lut h resizedLUT buildLUTFlags buildLUTFlags BUILDLUT_BIASCORRECT trk ComputeZBiasCorrection lut h std::vector&lt;Matrix3X3&gt; fishers NImg parallel_for NImg i imgs i ImageData::alloc cfg width cfg height vector3f pos centerpos range vector3f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f GenerateImageFromLUT imgs i resizedLUT trk cfg zlut_minradius trk cfg zlut_maxradius vector3f pos x pos y pos z SampleFisherMatrix fm MaxPixelValue fishers i fm Compute pos vector3f f resizedLUT cfg width cfg height trk cfg zlut_minradius trk cfg zlut_maxradius imgs i normalize MaxPixelValue ApplyPoissonNoise imgs i MaxPixelValue i WriteJPEGFile name imgs i truepos i pos Matrix3X3 fisher i i NImg i fisher fishers i flags LT_LocalizeZ LT_NormalizeProfile extraFlags cfg qi_iterations flags LT_QI trk SetLocalizationMode LocMode_t flags tstart GetPreciseTime i i N i LocalizationJob job i trk ScheduleLocalization uchar imgs i NImg data cfg width QTrkFloat job WaitForFinish trk N tend GetPreciseTime results resize trk GetResultCount uint i i results size i LocalizationResult r trk FetchResults r results r job frame r pos i i NImg i imgs i free SpeedAccResult r r Compute results index truepos index r speed N tend tstart fisher f NImg r crlb sqrt fisher Inverse diag resizedLUT free trk r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Console Files Images sqrt x x y y x x std::ostringstream out ii ii size ii out ii arr ii outputString out str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">T sq T x x x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">T distance T x T y sqrt x x y y DirExists std::string dirName_in NumFilesInDir std::string dirName_in NumJpgInDir std::string dirName_in distance vector2f a vector2f b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">OutputModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">Console</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">Files</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">Images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">outputter outputter mode outputString std::string out ConsoleOnly outputImage ImageData img std::string filename</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">outputArray T arr size std::ostringstream out ii ii size ii out ii arr ii outputString out str newFile std::string filename mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">std::string folder init mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">outputModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">File</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">Console</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">Images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">outputModes modes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">FILE outputFile ImageData CropImage ImageData img x y w h ImageData ResizeImage ImageData img factor ImageData AddImages ImageData img1 ImageData img2 vector2f displacement ImageData GaussMask ImageData img sigma ImageData SkewImage ImageData img fact GetOuterEdges out size ImageData img BackgroundMedian ImageData img BackgroundStdDev ImageData img BackgroundRMS ImageData img</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">f img_distance roi x x y y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00005</field>
    <field name="keywords"></field>
    <field name="text">BeadFinder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">Position</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00008</field>
    <field name="keywords"></field>
    <field name="text">Position x y x x y y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">Config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">roi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">img_distance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">similarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">MinPixelDistance f img_distance roi std::vector&lt;Position&gt; Find ImageData img sample Config cfg std::vector&lt;Position&gt; Find uint8_t img pitch w h smpCornerX smpCornerY Config cfg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">lut_w lut_h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">BenchmarkLUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; normprof</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">max_a max_b max_c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">lut_w lut_h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">BenchmarkLUT lut_w lut_h BenchmarkLUT ImageData lut BenchmarkLUT file Load ImageData lut Load file CleanupLUT ImageData lut GenerateLUT ImageData lut GenerateSample ImageData image vector3f pos minRadius maxRadius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">LUTProfMaxQuadraticFit LUTProfMaxSplineFit LUTProfMaxSimpleInterp prof profile profile ALLOCA_ARRAY zlut_res ComputeRadialProfile prof zlut_res angularSteps zlut_minradius zlut_maxradius center boundaryHit normalizeProfile LUTProfileCompare prof zlutIndex cmpprof LUTProfMaxQuadraticFit debugImage height srcImage width y x zluts zlut_res zlut_planes index width uchar bp uchar data y y height y x x width x srcImage y width x TPixel bp x bp pitchInBytes mean f SetImage srcImage srcpitch SetImage srcImage srcpitch xfft w yfft h cbuf std::complex&lt;float&gt; w h cbuf fft_forward xcorw fft_backward xcorw xcorw xcorw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">uchar pixel_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">XCor1DBuffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">XCor1DBuffer xcorw fft_forward xcorw false fft_backward xcorw true xcorw xcorw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">kissfft&lt;scalar_t&gt; fft_forward fft_backward</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">xcorw XCorFFTHelper complex_t xc complex_t xcr scalar_t result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">CPUTracker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">width height xcorw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">trackerID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">srcImage debugImage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">mean stdev maxImageValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector2f&gt; radialDirs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">zluts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">zlut_memoryOwner</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">zlut_planes zlut_res zlut_count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">zlut_minradius zlut_maxradius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">zlut_useCorrelation</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; zlut_radialweights</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">kissfft&lt;scalar_t&gt; qa_fft_forward qa_fft_backward</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">testRun</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">GetRadialZLUT index zluts zlut_res zlut_planes index</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">XCor1DBuffer xcorBuffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;vector2f&gt; quadrantDirs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">qi_radialsteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">kissfft&lt;scalar_t&gt; qi_fft_forward qi_fft_backward</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">FFT2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">kissfft&lt;float&gt; xfft yfft</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">std::complex&lt;float&gt; cbuf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">FFT2D w h xfft w false yfft h false cbuf std::complex&lt;float&gt; w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">cbuf Apply d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">FFT2D fft2d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">GetPixel x y srcImage width y x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">GetWidth width</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">GetHeight height CPUTracker w h xcorwindow testRun CPUTracker KeepInsideBoundaries vector2f center radius CheckBoundaries vector2f center radius vector2f ComputeXCorInterpolated vector2f initial iterations profileWidth boundaryHit vector2f ComputeQI vector2f initial iterations radialSteps angularStepsPerQuadrant angStepIterationFactor minRadius maxRadius boundaryHit radialweights</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">Gauss2DResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">vector2f pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">I0 bg Gauss2DResult Compute2DGaussianMLE vector2f initial iterations sigma scalar_t QI_ComputeOffset complex_t qi_profile nr axisForDebug scalar_t QuadrantAlign_ComputeOffset complex_t profile complex_t zlut_prof_fft nr axisForDebug ComputeAsymmetry vector2f center radialSteps angularSteps minRadius maxRadius dstAngProf SetImage TPixel srcImage uint srcpitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">SetImage16Bit ushort srcImage uint srcpitch SetImage srcImage srcpitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">SetImage8Bit uchar srcImage uint srcpitch SetImage srcImage srcpitch SetImageFloat srcImage SaveImage filename vector2f ComputeMeanAndCOM bgcorrection f ComputeRadialProfile dst radialSteps angularSteps minradius maxradius vector2f center crp boundaryHit normalize ComputeQuadrantProfile scalar_t dst radialSteps angularSteps quadrant minRadius maxRadius vector2f center radialWeights</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">ComputeZ vector2f center angularSteps zlutIndex boundaryHit profile cmpprof normalizeProfile prof profile profile ALLOCA_ARRAY zlut_res ComputeRadialProfile prof zlut_res angularSteps zlut_minradius zlut_maxradius center boundaryHit normalizeProfile LUTProfileCompare prof zlutIndex cmpprof LUTProfMaxQuadraticFit FourierTransform2D FourierRadialProfile dst radialSteps angularSteps minradius maxradius Normalize image SetRadialZLUT data planes res num_zluts minradius maxradius copyMemory useCorrelation SetRadialWeights w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">LUTProfileMaxComputeMode LUTProfMaxQuadraticFit LUTProfMaxSplineFit LUTProfMaxSimpleInterp CalculateErrorCurve errorcurve_dest profile zlut_sel CalculateInterpolatedZLUTProfile profile_dest z zlutIndex CalculateErrorFlag prof1 prof2 LUTProfileCompare profile zlutIndex cmpProf LUTProfileMaxComputeMode maxPosMethod lsqfittedcurve maxPos frameNum LUTProfileCompareAdjustedWeights rprof zlutIndex z_estim</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">GetDebugImage debugImage ApplyOffsetGain offset gain offsetFactor gainFactor AllocateQIFFTs nsteps vector3f QuadrantAlign vector3f initial beadIndex angularStepsPerQuadrant boundaryHit CPUTracker CreateCPUTrackerInstance w h xcorw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">CPUTracker::SetImage TPixel data uint pitchInBytes uchar bp uchar data y y height y x x width x srcImage y width x TPixel bp x bp pitchInBytes mean f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">t2 t t t3 t2 t omt t deriv f omt omt k t2 t k t2 t k t2 k deriv2 omt k t k t k t k t2 t t t3 t2 t omt t w f omt omt omt w f t3 t2 w f t3 t2 t w f t3 iMax T vMax data k k len k data k vMax vMax data k iMax k iMax iMax len iMax T x iMax it it it x x x len x len i int x T t x i T w w2 ComputeBSplineDerivatives t data i w w2 T dx w w2 x dx x x x len x len x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h_source.html#l00004</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC ComputeBSplineWeights w t t2 t t t3 t2 t omt t w f omt omt omt w f t3 t2 w f t3 t2 t w f t3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC ComputeBSplineDerivatives t T k T deriv T deriv2 t2 t t t3 t2 t omt t deriv f omt omt k t2 t k t2 t k t2 k deriv2 omt k t k t k t k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC ComputeSplineFitMaxPos T data len iMax T vMax data k k len k data k vMax vMax data k iMax k iMax iMax len iMax T x iMax it it it x x x len x len i int x T t x i T w w2 ComputeBSplineDerivatives t data i w w2 T dx w w2 x dx x x x len x len x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">DebugResultCompare.h</field>
    <field name="url">_debug_result_compare_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt; std::complex&lt;float&gt; cmp_cpu_qi_fft_in std::vector&lt; std::complex&lt;float&gt; cmp_gpu_qi_fft_in std::vector&lt; std::complex&lt;float&gt; cmp_cpu_qi_fft_out std::vector&lt; std::complex&lt;float&gt; cmp_gpu_qi_fft_out std::vector&lt; float &gt; cmp_cpu_qi_prof std::vector&lt; float &gt; cmp_gpu_qi_prof</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dllmacros.h</field>
    <field name="url">dllmacros_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dllmacros.h</field>
    <field name="url">dllmacros_8h_source.html#l00003</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dllmacros.h</field>
    <field name="url">dllmacros_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dllmacros.h</field>
    <field name="url">dllmacros_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">mirror2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">FFT2DTracker FFT2DTracker w h vector2f ComputeXCor image</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">GetAutoConvResults mirror2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">width height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">fftw_plan_t plan_fw2D plan_bw2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">mirror2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">complexc fft_buf fft_buf_mirrored vector2f ComputeMax2DInterpolated img</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">maxValue maxValue Compute pos delta w h ImageData out vector3f pos ImageData tmp ImageData::alloc w h GenerateImageFromLUT tmp lut zlutMinRadius zlutMaxRadius pos out set tmp tmp free t mu ImageData::alloc w h imageGenerator mu pos maxImg mu mean imgpx ImageData::alloc w h imgpy ImageData::alloc w h imgpz ImageData::alloc w h imageGenerator imgpx vector3f pos x delta x pos y pos z imageGenerator imgpy vector3f pos x pos y delta y pos z imageGenerator imgpz vector3f pos x pos y pos z delta z imgmx ImageData::alloc w h imgmy ImageData::alloc w h imgmz ImageData::alloc w h imageGenerator imgmx vector3f pos x delta x pos y pos z imageGenerator imgmy vector3f pos x pos y delta y pos z imageGenerator imgmz vector3f pos x pos y pos z delta z ImgDeriv imgpx imgmx delta x ImgDeriv imgpy imgmy delta y ImgDeriv imgpz imgmz delta z t Ixx FisherElem mu imgpx imgpx Iyy FisherElem mu imgpy imgpy Izz FisherElem mu imgpz imgpz Ixy FisherElem mu imgpx imgpy Ixz FisherElem mu imgpx imgpz Iyz FisherElem mu imgpy imgpz Matrix3X3 fisher fisher Ixx fisher Ixy fisher Ixz fisher Ixy fisher Iyy fisher Iyz fisher Ixz fisher Iyz fisher Izz fisher maxValue maxImg imgpx free imgpy free imgpz free imgmx free imgmy free imgmz free mu free fisher Matrix3X3 results Matrix3X3 Nsamples f index vector3f smpPos pos sampleRange vector3f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; results index Compute smpPos delta w h imggen ThreadPool&lt;int, std::function&lt;void (int index)&gt; pool f i i Nsamples i pool AddWork i pool WaitUntilDone i i Nsamples i f i Matrix3X3 accum i i Nsamples i accum results i results Matrix3X3 matrix accum matrix f Nsamples matrix sum y y mu h y x x mu w x sum muderiv1 at x y double muderiv2 at x y e f double mu at x y sum T inv2d f delta y y imgpx w imgpx h y imgpx y imgpx y imgmx y inv2d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00008</field>
    <field name="keywords"></field>
    <field name="text">SampleFisherMatrix</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">maxValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">ImgDeriv TImageData&lt;T&gt; imgpx TImageData&lt;T&gt; imgmx T delta T inv2d f delta y y imgpx w imgpx h y imgpx y imgpx y imgmx y inv2d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">FisherElem TImageData&lt;T&gt; mu TImageData&lt;T&gt; muderiv1 TImageData&lt;T&gt; muderiv2 sum y y mu h y x x mu w x sum muderiv1 at x y double muderiv2 at x y e f double mu at x y sum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">SampleFisherMatrix maxValue maxValue maxValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 Compute vector3f pos vector3f delta ImageData lut w h zlutMinRadius zlutMaxRadius Compute pos delta w h ImageData out vector3f pos ImageData tmp ImageData::alloc w h GenerateImageFromLUT tmp lut zlutMinRadius zlutMaxRadius pos out set tmp tmp free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 Compute vector3f pos vector3f delta w h std::function ImageData out vector3f pos imageGenerator t mu ImageData::alloc w h imageGenerator mu pos maxImg mu mean imgpx ImageData::alloc w h imgpy ImageData::alloc w h imgpz ImageData::alloc w h imageGenerator imgpx vector3f pos x delta x pos y pos z imageGenerator imgpy vector3f pos x pos y delta y pos z imageGenerator imgpz vector3f pos x pos y pos z delta z imgmx ImageData::alloc w h imgmy ImageData::alloc w h imgmz ImageData::alloc w h imageGenerator imgmx vector3f pos x delta x pos y pos z imageGenerator imgmy vector3f pos x pos y delta y pos z imageGenerator imgmz vector3f pos x pos y pos z delta z ImgDeriv imgpx imgmx delta x ImgDeriv imgpy imgmy delta y ImgDeriv imgpz imgmz delta z t Ixx FisherElem mu imgpx imgpx Iyy FisherElem mu imgpy imgpy Izz FisherElem mu imgpz imgpz Ixy FisherElem mu imgpx imgpy Ixz FisherElem mu imgpx imgpz Iyz FisherElem mu imgpy imgpz Matrix3X3 fisher fisher Ixx fisher Ixy fisher Ixz fisher Ixy fisher Iyy fisher Iyz fisher Ixz fisher Iyz fisher Izz fisher maxValue maxImg imgpx free imgpy free imgpz free imgmx free imgmy free imgmz free mu free fisher</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 ComputeAverageFisher vector3f pos Nsamples vector3f sampleRange vector3f delta w h std::function ImageData out vector3f pos imggen Matrix3X3 results Matrix3X3 Nsamples f index vector3f smpPos pos sampleRange vector3f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; results index Compute smpPos delta w h imggen ThreadPool&lt;int, std::function&lt;void (int index)&gt; pool f i i Nsamples i pool AddWork i pool WaitUntilDone i i Nsamples i f i Matrix3X3 accum i i Nsamples i accum results i results Matrix3X3 matrix accum matrix f Nsamples matrix</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hash_templates.h</field>
    <field name="url">hash__templates_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hash_templates.h</field>
    <field name="url">hash__templates_8h_source.html#l00005</field>
    <field name="keywords"></field>
    <field name="text">qtrk hash_map stdext::hash_map hash_set stdext::hash_set</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hash_templates.h</field>
    <field name="url">hash__templates_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">hash_map __gnu_cxx::hash_map</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hash_templates.h</field>
    <field name="url">hash__templates_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">hash_set __gnu_cxx::hash_set</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">_nfft nfft _inverse inverse traits prepare _twiddles _nfft _inverse _stageRadix _stageRemainder c a b c a c a b c a c a b a k k m k cpx_type t Fout m k _twiddles k fstride Fout m k Fout k t Fout k t k m m2 m cpx_type tw1 tw2 cpx_type scratch cpx_type epi3 epi3 _twiddles fstride m tw1 tw2 _twiddles C_FIXDIV Fout C_FIXDIV Fout m C_FIXDIV Fout m2 C_MUL scratch Fout m tw1 C_MUL scratch Fout m2 tw2 C_ADD scratch scratch scratch C_SUB scratch scratch scratch tw1 fstride tw2 fstride Fout m cpx_type Fout real HALF_OF scratch real Fout imag HALF_OF scratch imag C_MULBYSCALAR scratch epi3 imag C_ADDTO Fout scratch Fout m2 cpx_type Fout m real scratch imag Fout m imag scratch real C_ADDTO Fout m cpx_type scratch imag scratch real Fout k cpx_type scratch negative_if_inverse _inverse k k m k scratch Fout k m _twiddles k fstride scratch Fout k m _twiddles k fstride scratch Fout k m _twiddles k fstride scratch Fout k scratch Fout k scratch scratch scratch scratch scratch scratch scratch scratch cpx_type scratch imag negative_if_inverse scratch real negative_if_inverse Fout k m Fout k scratch Fout k scratch Fout k m scratch scratch Fout k m scratch scratch cpx_type Fout0 Fout1 Fout2 Fout3 Fout4 u cpx_type scratch cpx_type twiddles _twiddles cpx_type tw cpx_type ya yb ya twiddles fstride m yb twiddles fstride m Fout0 Fout Fout1 Fout0 m Fout2 Fout0 m Fout3 Fout0 m Fout4 Fout0 m tw twiddles u u m u C_FIXDIV Fout0 C_FIXDIV Fout1 C_FIXDIV Fout2 C_FIXDIV Fout3 C_FIXDIV Fout4 scratch Fout0 C_MUL scratch Fout1 tw u fstride C_MUL scratch Fout2 tw u fstride C_MUL scratch Fout3 tw u fstride C_MUL scratch Fout4 tw u fstride C_ADD scratch scratch scratch C_SUB scratch scratch scratch C_ADD scratch scratch scratch C_SUB scratch scratch scratch C_ADDTO Fout0 scratch C_ADDTO Fout0 scratch scratch scratch cpx_type S_MUL scratch real ya real S_MUL scratch real yb real S_MUL scratch imag ya real S_MUL scratch imag yb real scratch cpx_type S_MUL scratch imag ya imag S_MUL scratch imag yb imag S_MUL scratch real ya imag S_MUL scratch real yb imag C_SUB Fout1 scratch scratch C_ADD Fout4 scratch scratch scratch scratch cpx_type S_MUL scratch real yb real S_MUL scratch real ya real S_MUL scratch imag yb real S_MUL scratch imag ya real scratch cpx_type S_MUL scratch imag yb imag S_MUL scratch imag ya imag S_MUL scratch real yb imag S_MUL scratch real ya imag C_ADD Fout2 scratch scratch C_SUB Fout3 scratch scratch Fout0 Fout1 Fout2 Fout3 Fout4 u k q1 q cpx_type twiddles _twiddles cpx_type t Norig _nfft cpx_type scratchbuf cpx_type ALLOCA cpx_type p u u m u k u q1 q1 p q1 scratchbuf q1 Fout k C_FIXDIV scratchbuf q1 p k m k u q1 q1 p q1 twidx Fout k scratchbuf q q p q twidx fstride k twidx Norig twidx Norig C_MUL t scratchbuf q twiddles twidx C_ADDTO Fout k t k m p _stageRadix stage m _stageRemainder stage cpx_type Fout_beg Fout cpx_type Fout_end Fout p m m Fout f f fstride in_stride Fout Fout_end kf_work stage Fout f fstride p in_stride f fstride in_stride Fout m Fout_end Fout Fout_beg p kf_bfly2 Fout fstride m kf_bfly3 Fout fstride m kf_bfly4 Fout fstride m kf_bfly5 Fout fstride m kf_bfly_generic Fout fstride m p _nfft a b kf_work dst src T_scalar phinc inverse acos T_scalar nfft i i nfft i dst i exp std::complex&lt;T_scalar&gt; i phinc std::vector&lt;cpx_type&gt; _twiddles _twiddles resize nfft fill_twiddles _twiddles nfft inverse dst _twiddles n nfft p n p p p p p p p n p n n p stageRadix push_back p stageRemainder push_back n n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00004</field>
    <field name="keywords"></field>
    <field name="text">kissfft_utils</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">traits</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">T_scalar scalar_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">std::complex&lt;scalar_type&gt; cpx_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">fill_twiddles std::complex&lt;T_scalar&gt; dst nfft inverse T_scalar phinc inverse acos T_scalar nfft i i nfft i dst i exp std::complex&lt;T_scalar&gt; i phinc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">prepare std::vector std::complex&lt;T_scalar&gt; dst nfft inverse std::vector&lt;int&gt; stageRadix std::vector&lt;int&gt; stageRemainder std::vector&lt;cpx_type&gt; _twiddles _twiddles resize nfft fill_twiddles _twiddles nfft inverse dst _twiddles n nfft p n p p p p p p p n p n n p stageRadix push_back p stageRemainder push_back n n T_Scalar T_traits kissfft_utils::traits&lt;T_Scalar&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">kissfft</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">T_traits traits_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">traits_type::scalar_type scalar_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">traits_type::cpx_type cpx_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">kissfft nfft inverse traits_type traits traits_type _nfft nfft _inverse inverse traits prepare _twiddles _nfft _inverse _stageRadix _stageRemainder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">transform cpx_type src cpx_type dst kf_work dst src</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">nfft _nfft</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">kf_work stage cpx_type Fout cpx_type f fstride in_stride p _stageRadix stage m _stageRemainder stage cpx_type Fout_beg Fout cpx_type Fout_end Fout p m m Fout f f fstride in_stride Fout Fout_end kf_work stage Fout f fstride p in_stride f fstride in_stride Fout m Fout_end Fout Fout_beg p kf_bfly2 Fout fstride m kf_bfly3 Fout fstride m kf_bfly4 Fout fstride m kf_bfly5 Fout fstride m kf_bfly_generic Fout fstride m p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">C_ADD cpx_type c cpx_type a cpx_type b c a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">C_MUL cpx_type c cpx_type a cpx_type b c a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">C_SUB cpx_type c cpx_type a cpx_type b c a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">C_ADDTO cpx_type c cpx_type a c a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">C_FIXDIV cpx_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">scalar_type S_MUL scalar_type a scalar_type b a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">scalar_type HALF_OF scalar_type a a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">C_MULBYSCALAR cpx_type c scalar_type a c a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">kf_bfly2 cpx_type Fout fstride m k k m k cpx_type t Fout m k _twiddles k fstride Fout m k Fout k t Fout k t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">kf_bfly4 cpx_type Fout fstride m cpx_type scratch negative_if_inverse _inverse k k m k scratch Fout k m _twiddles k fstride scratch Fout k m _twiddles k fstride scratch Fout k m _twiddles k fstride scratch Fout k scratch Fout k scratch scratch scratch scratch scratch scratch scratch scratch cpx_type scratch imag negative_if_inverse scratch real negative_if_inverse Fout k m Fout k scratch Fout k scratch Fout k m scratch scratch Fout k m scratch scratch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">kf_bfly3 cpx_type Fout fstride m k m m2 m cpx_type tw1 tw2 cpx_type scratch cpx_type epi3 epi3 _twiddles fstride m tw1 tw2 _twiddles C_FIXDIV Fout C_FIXDIV Fout m C_FIXDIV Fout m2 C_MUL scratch Fout m tw1 C_MUL scratch Fout m2 tw2 C_ADD scratch scratch scratch C_SUB scratch scratch scratch tw1 fstride tw2 fstride Fout m cpx_type Fout real HALF_OF scratch real Fout imag HALF_OF scratch imag C_MULBYSCALAR scratch epi3 imag C_ADDTO Fout scratch Fout m2 cpx_type Fout m real scratch imag Fout m imag scratch real C_ADDTO Fout m cpx_type scratch imag scratch real Fout k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">kf_bfly5 cpx_type Fout fstride m cpx_type Fout0 Fout1 Fout2 Fout3 Fout4 u cpx_type scratch cpx_type twiddles _twiddles cpx_type tw cpx_type ya yb ya twiddles fstride m yb twiddles fstride m Fout0 Fout Fout1 Fout0 m Fout2 Fout0 m Fout3 Fout0 m Fout4 Fout0 m tw twiddles u u m u C_FIXDIV Fout0 C_FIXDIV Fout1 C_FIXDIV Fout2 C_FIXDIV Fout3 C_FIXDIV Fout4 scratch Fout0 C_MUL scratch Fout1 tw u fstride C_MUL scratch Fout2 tw u fstride C_MUL scratch Fout3 tw u fstride C_MUL scratch Fout4 tw u fstride C_ADD scratch scratch scratch C_SUB scratch scratch scratch C_ADD scratch scratch scratch C_SUB scratch scratch scratch C_ADDTO Fout0 scratch C_ADDTO Fout0 scratch scratch scratch cpx_type S_MUL scratch real ya real S_MUL scratch real yb real S_MUL scratch imag ya real S_MUL scratch imag yb real scratch cpx_type S_MUL scratch imag ya imag S_MUL scratch imag yb imag S_MUL scratch real ya imag S_MUL scratch real yb imag C_SUB Fout1 scratch scratch C_ADD Fout4 scratch scratch scratch scratch cpx_type S_MUL scratch real yb real S_MUL scratch real ya real S_MUL scratch imag yb real S_MUL scratch imag ya real scratch cpx_type S_MUL scratch imag yb imag S_MUL scratch imag ya imag S_MUL scratch real yb imag S_MUL scratch real ya imag C_ADD Fout2 scratch scratch C_SUB Fout3 scratch scratch Fout0 Fout1 Fout2 Fout3 Fout4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">kf_bfly_generic cpx_type Fout fstride m p u k q1 q cpx_type twiddles _twiddles cpx_type t Norig _nfft cpx_type scratchbuf cpx_type ALLOCA cpx_type p u u m u k u q1 q1 p q1 scratchbuf q1 Fout k C_FIXDIV scratchbuf q1 p k m k u q1 q1 p q1 twidx Fout k scratchbuf q q p q twidx fstride k twidx Norig twidx Norig C_MUL t scratchbuf q twiddles twidx C_ADDTO Fout k t k m</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">_nfft</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">_inverse</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;cpx_type&gt; _twiddles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;int&gt; _stageRadix</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;int&gt; _stageRemainder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">i i N i dimSizes i dims i NumericArrayResize LVDataType&lt;T&gt;::code N UHandle d T numElem NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T elems mgNoErr std::runtime_error SPrintf elems dimSize elems NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T rows cols mgNoErr std::runtime_error SPrintf rows cols dimSizes rows dimSizes cols NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T rows cols depth mgNoErr std::runtime_error SPrintf depth rows cols dimSizes depth dimSizes rows dimSizes cols elem row dimSizes col dimSizes dimSizes elem row dimSizes col dimSizes dimSizes dimSizes n dimSizes i i N i n dimSizes i n code code code code code code code code code code code code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00003</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">LVBoolean status</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">int32 code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">LStrHandle message ErrorCluster</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">LVArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">int32_t dimSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">T elem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">LVArray&lt;float&gt; ppFloatArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">LVArray2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">int32_t dimSizes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">T elem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">T xy col row elem row dimSizes col</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">T row col elem row dimSizes col</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">numElem dimSizes dimSizes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">LVArray3D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">int32_t dimSizes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">T elem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">numElem dimSizes dimSizes dimSizes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">LVArrayND</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">int32_t dimSizes N</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">T elem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">numElem n dimSizes i i N i n dimSizes i n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">LVDataType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">LVDataType float code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">LVDataType double code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">LVDataType int8_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">LVDataType int16_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">LVDataType int32_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">LVDataType int64_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">LVDataType uint8_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">LVDataType uint16_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">LVDataType uint32_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">LVDataType uint64_t code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">LVDataType std complex code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">LVDataType std complex code</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">ResizeLVArray2D LVArray2D&lt;T&gt; d rows cols NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T rows cols mgNoErr std::runtime_error SPrintf rows cols dimSizes rows dimSizes cols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">ResizeLVArray3D LVArray3D&lt;T&gt; d depth rows cols NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T rows cols depth mgNoErr std::runtime_error SPrintf depth rows cols dimSizes depth dimSizes rows dimSizes cols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">ResizeLVArray LVArrayND&lt;T, N&gt; d dims i i N i dimSizes i dims i NumericArrayResize LVDataType&lt;T&gt;::code N UHandle d T numElem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">ResizeLVArray LVArray&lt;T&gt; d elems NumericArrayResize LVDataType&lt;T&gt;::code UHandle d T elems mgNoErr std::runtime_error SPrintf elems dimSize elems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">LVArray2D&lt;float&gt; ppFloatArray2 ArgumentErrorMsg ErrorCluster e std::string msg SetLVString LStrHandle str text MgErr FillErrorCluster MgErr err message ErrorCluster error std::vector&lt;std::string&gt; LVGetStringArray count LStrHandle str QueuedTracker ValidateTracker QueuedTracker tracker ErrorCluster e funcname</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">iMax T vMax data k k len k data k vMax vMax data k iMax k T xs numPts startPos max_ iMax numPts endPos min_ iMax numPts numPts len numpoints endPos startPos numpoints iMax i startPos i endPos i xs i startPos i iMax LsqSqQuadFit&lt;T&gt; qfit numpoints xs data startPos weights fit fit qfit fabs qfit a e f T iMax T interpMax qfit maxPos T iMax interpMax a b a b a b a b calculate numPts xval yval weights xoffset a b c d xoffset Coeff co computeSums X Y weights numPts co abc a b c d pos xoffset a pos pos b pos c pos xoffset a pos b weights T Sx Sy T Sx2 Sx3 T Sxy Sx4 Sx2y T Sw uint i i numPts i T x X i T y Y i Sx x weights i Sy y weights i T sq x x Sx2 x x weights i Sx3 sq x weights i Sx4 sq sq weights i Sxy x y weights i Sx2y sq y weights i Sw weights i Coeff co co s10 Sx co s20 Sx2 co s30 Sx3 co s40 Sx4 co s01 Sy co s11 Sxy co s21 Sx2y co s00 Sw co T Sx Sy T Sx2 Sx3 T Sxy Sx4 Sx2y uint i i numPts i T x X i T y Y i Sx x Sy y T sq x x Sx2 x x Sx3 sq x Sx4 sq sq Sxy x y Sx2y sq y Coeff co co s10 Sx co s20 Sx2 co s30 Sx3 co s40 Sx4 co s01 Sy co s11 Sxy co s21 Sx2y co s00 numPts co b a h b a k c a h h k d s40 s20 s00 s10 s10 s30 s30 s00 s10 s20 s20 s30 s10 s20 s20 a s21 s20 s00 s10 s10 s11 s30 s00 s10 s20 s01 s30 s10 s20 s20 d b s40 s11 s00 s01 s10 s30 s21 s00 s01 s20 s20 s21 s10 s11 s20 d c s40 s20 s01 s10 s11 s30 s30 s01 s10 s21 s20 s30 s11 s20 s21 d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00005</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">LsqSqQuadFit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">T a b c d h k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">xoffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">Coeff</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">T s40 s30 s20 s10 s21 s11 s01 s00</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC abc T a T b T c T d d s40 s20 s00 s10 s10 s30 s30 s00 s10 s20 s20 s30 s10 s20 s20 a s21 s20 s00 s10 s10 s11 s30 s00 s10 s20 s01 s30 s10 s20 s20 d b s40 s11 s00 s01 s10 s30 s21 s00 s01 s20 s20 s21 s10 s11 s20 d c s40 s20 s01 s10 s11 s30 s30 s01 s10 s21 s20 s30 s11 s20 s21 d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC LsqSqQuadFit uint numPts T xval T yval T weights calculate numPts xval yval weights xoffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC LsqSqQuadFit a b c d xoffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC calculate uint numPts T X T Y T weights Coeff co computeSums X Y weights numPts co abc a b c d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T compute T pos pos xoffset a pos pos b pos c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T computeDeriv T pos pos xoffset a pos b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T maxPos b a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T vertexForm h b a k c a h h k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC Coeff computeSums T X T Y T weights uint numPts weights T Sx Sy T Sx2 Sx3 T Sxy Sx4 Sx2y T Sw uint i i numPts i T x X i T y Y i Sx x weights i Sy y weights i T sq x x Sx2 x x weights i Sx3 sq x weights i Sx4 sq sq weights i Sxy x y weights i Sx2y sq y weights i Sw weights i Coeff co co s10 Sx co s20 Sx2 co s30 Sx3 co s40 Sx4 co s01 Sy co s11 Sxy co s21 Sx2y co s00 Sw co T Sx Sy T Sx2 Sx3 T Sxy Sx4 Sx2y uint i i numPts i T x X i T y Y i Sx x Sy y T sq x x Sx2 x x Sx3 sq x Sx4 sq sq Sxy x y Sx2y sq y Coeff co co s10 Sx co s20 Sx2 co s30 Sx3 co s40 Sx4 co s01 Sy co s11 Sxy co s21 Sx2y co s00 numPts co</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">ComputeMaxInterp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T max_ T a T b a b a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T min_ T a T b a b a b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">CUDA_SUPPORTED_FUNC T Compute T data len T weights LsqSqQuadFit&lt;T&gt; fit iMax T vMax data k k len k data k vMax vMax data k iMax k T xs numPts startPos max_ iMax numPts endPos min_ iMax numPts numPts len numpoints endPos startPos numpoints iMax i startPos i endPos i xs i startPos i iMax LsqSqQuadFit&lt;T&gt; qfit numpoints xs data startPos weights fit fit qfit fabs qfit a e f T iMax T interpMax qfit maxPos T iMax interpMax</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QFF_Force32Bit err cudaSuccess errstr cudaGetErrorString err FillErrorCluster kAppErrorBase SPrintf errstr c_str e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">QueueFrameFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">QFF_Force32Bit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">CUDADeviceInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">LStrHandle name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">clockRate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">multiProcCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00020</field>
    <field name="keywords"></field>
    <field name="text">major minor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">CheckCUDAErrorLV cudaError err ErrorCluster e err cudaSuccess errstr cudaGetErrorString err FillErrorCluster kAppErrorBase SPrintf errstr c_str e CDLL_EXPORT QueuedTracker DLL_CALLCONV qtrk_create QTrkSettings settings LStrHandle warnings ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_destroy QueuedTracker qtrk ErrorCluster error CDLL_EXPORT DLL_CALLCONV qtrk_free_all CDLL_EXPORT qtrk_set_localization_mode QueuedTracker qtrk uint locType ErrorCluster e CDLL_EXPORT qtrk_find_beads uint8_t image pitch w h smpCornerPos roi imgRelDist acceptance LVArray2D&lt;uint32_t&gt; output CDLL_EXPORT DLL_CALLCONV qtrk_set_ZLUT QueuedTracker tracker LVArray3D&lt;float&gt; pZlut LVArray&lt;float&gt; zcmpWindow normalize ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_get_ZLUT QueuedTracker tracker LVArray3D&lt;float&gt; pzlut ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_set_image_lut QueuedTracker qtrk LVArrayND&lt;float,4&gt; imageLUT LVArray3D&lt;float&gt; radialZLUT ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_get_image_lut QueuedTracker qtrk LVArrayND&lt;float, 4&gt; imageLUT ErrorCluster e CDLL_EXPORT qtrk_build_lut_plane QueuedTracker qtrk LVArray3D&lt;float&gt; data uint flags plane ErrorCluster err CDLL_EXPORT qtrk_finalize_lut QueuedTracker qtrk ErrorCluster e CDLL_EXPORT qtrk_get_queue_len QueuedTracker qtrk maxQueueLen ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_queue_u16 QueuedTracker qtrk ErrorCluster error LVArray2D&lt;ushort&gt; data LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV qtrk_queue_u8 QueuedTracker qtrk ErrorCluster error LVArray2D&lt;uchar&gt; data LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV qtrk_queue_float QueuedTracker qtrk ErrorCluster error LVArray2D&lt;float&gt; data LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV qtrk_queue_pitchedmem QueuedTracker qtrk uchar data pitch uint pdt LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV qtrk_queue_array QueuedTracker qtrk ErrorCluster error LVArray2D&lt;uchar&gt; data uint pdt LocalizationJob jobInfo CDLL_EXPORT uint DLL_CALLCONV qtrk_queue_frame QueuedTracker qtrk uchar image pitch w h uint pdt ROIPosition pos numROI LocalizationJob pJobInfo QueueFrameFlags flags ErrorCluster e CDLL_EXPORT qtrk_resultcount QueuedTracker qtrk ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_clear_results QueuedTracker qtrk ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_flush QueuedTracker qtrk ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_get_results QueuedTracker qtrk LocalizationResult results maxResults sortByID ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_idle QueuedTracker qtrk ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_set_logfile_path path CDLL_EXPORT DLL_CALLCONV qtrk_get_computed_config QueuedTracker qtrk QTrkComputedConfig cc ErrorCluster err CDLL_EXPORT DLL_CALLCONV qtrk_set_pixel_calib_factors QueuedTracker qtrk offsetFactor gainFactor ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_set_pixel_calib QueuedTracker qtrk LVArray3D&lt;float&gt; offset LVArray3D&lt;float&gt; gain ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_dump_memleaks CDLL_EXPORT qtrk_get_profile_report QueuedTracker qtrk LStrHandle str CDLL_EXPORT qtrk_enable_zlut_cmpprof QueuedTracker qtrk enable ErrorCluster e CDLL_EXPORT qtrk_get_zlut_cmpprof QueuedTracker qtrk LVArray2D&lt;float&gt; output ErrorCluster e CDLL_EXPORT qtrk_get_debug_image QueuedTracker qtrk LVArray2D&lt;float&gt; data ErrorCluster e CDLL_EXPORT qtrk_compute_fisher LVArray2D&lt;float&gt; lut QTrkSettings cfg vector3f pos LVArray2D&lt;float&gt; fisherMatrix LVArray2D&lt;float&gt; inverseMatrix vector3f xyzVariance Nsamples maxPixelValue CDLL_EXPORT qtrk_test_array_passing n LVArray&lt;float&gt; flt1D LVArray2D&lt;float&gt; flt2D LVArray&lt;int&gt; int1D LVArray2D&lt;int&gt; int2D CDLL_EXPORT qtrk_simulate_tracking QueuedTracker qtrk nsmp beadIndex vector3f centerPos vector3f range vector3f outBias vector3f outScatter photonsPerWell ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrk_generate_gaussian_spot LVArray2D&lt;float&gt; image vector2f pos sigma I0 Ibg applyNoise CDLL_EXPORT DLL_CALLCONV qtrk_generate_image_from_lut LVArray2D&lt;float&gt; image LVArray2D&lt;float&gt; lut LUTradii vector2f position z M sigma_noise CDLL_EXPORT qtrk_compute_zlut_bias_table QueuedTracker qtrk bias_planes LVArray2D&lt;float&gt; lvresult smpPerPixel useSplineInterp ErrorCluster e CDLL_EXPORT qtrk_set_zlut_bias_table QueuedTracker qtrk LVArray2D&lt;float&gt; biastbl ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrkcuda_device_count ErrorCluster e CDLL_EXPORT DLL_CALLCONV qtrkcuda_set_device_list LVArray&lt;int&gt; devices CDLL_EXPORT qtrkcuda_get_device device CUDADeviceInfo info ErrorCluster e CDLL_EXPORT qtrkcuda_enable_texture_cache QueuedTracker qtrk enable ErrorCluster e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memdbg.h</field>
    <field name="url">memdbg_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">s file line s file line p p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">LT_OnlyCOM LT_XCor1D LT_QI LT_Gaussian2D LT_ZLUTAlign LT_LocalizeZ LT_NormalizeProfile LT_ClearFirstFourPixels LT_FourierLUT LT_LocalizeZWeighted LT_Force32Bit QTrkU8 QTrkU16 QTrkFloat frame timestamp zlutIndex frame frame timestamp timestamp zlutIndex zlutIndex QTrkSettings base Update width height numThreads xc1_profileLength xc1_profileWidth xc1_iterations zlut_minradius f zlut_angular_coverage f zlut_radial_coverage f zlut_roi_coverage f qi_iterations qi_minradius qi_angular_coverage f qi_radial_coverage f qi_roi_coverage f qi_angstep_factor f cuda_device com_bgcorrection f gauss2D_iterations gauss2D_sigma downsample</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">LocalizeModeEnum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">LT_OnlyCOM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00008</field>
    <field name="keywords"></field>
    <field name="text">LT_XCor1D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">LT_QI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">LT_Gaussian2D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">LT_ZLUTAlign</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">LT_LocalizeZ</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">LT_NormalizeProfile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">LT_ClearFirstFourPixels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">LT_FourierLUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">LT_LocalizeZWeighted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">LT_Force32Bit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">LocMode_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">QTRK_PixelDataType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">QTrkU8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">QTrkU16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">QTrkFloat</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">LocalizationJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">LocalizationJob frame timestamp zlutIndex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">LocalizationJob uint frame uint timestamp uint zlutPlane uint zlutIndex frame frame timestamp timestamp zlutIndex zlutIndex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">uint frame</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">uint timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">zlutIndex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">vector3f initialPos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">LocalizationResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">LocalizationJob job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">vector3f pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">vector2f pos2D vector2f pos x pos y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">vector2f firstGuess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">uint error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">imageMean</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">QTrkSettings</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">QTrkSettings width height numThreads xc1_profileLength xc1_profileWidth xc1_iterations zlut_minradius f zlut_angular_coverage f zlut_radial_coverage f zlut_roi_coverage f qi_iterations qi_minradius qi_angular_coverage f qi_radial_coverage f qi_roi_coverage f qi_angstep_factor f cuda_device com_bgcorrection f gauss2D_iterations gauss2D_sigma downsample</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">width</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">cuda_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">com_bgcorrection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">zlut_minradius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">zlut_radial_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">zlut_angular_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">zlut_roi_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">qi_iterations</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">qi_minradius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">qi_radial_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">qi_angular_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">qi_roi_coverage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">qi_angstep_factor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">xc1_profileLength</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">xc1_profileWidth</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">xc1_iterations</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">gauss2D_iterations</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">gauss2D_sigma</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">downsample</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">testRun</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">ROIPosition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">QTrkComputedConfig QTrkSettings</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">QTrkComputedConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">QTrkComputedConfig QTrkSettings base QTrkSettings base Update Update WriteToLog WriteToFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">zlut_radialsteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">zlut_angularsteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">zlut_maxradius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">qi_radialsteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">qi_angstepspq</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">qi_maxradius QueuedTracker CDLL_EXPORT QueuedTracker DLL_CALLCONV QTrkCreateInstance QTrkSettings cfg CDLL_EXPORT DLL_CALLCONV QTrkFreeInstance QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkSetLocalizationMode QueuedTracker qtrk LocMode_t locType CDLL_EXPORT DLL_CALLCONV QTrkScheduleLocalization QueuedTracker qtrk data pitch QTRK_PixelDataType pdt LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV QTrkClearResults QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkFlush QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkScheduleFrame QueuedTracker qtrk imgptr pitch width height ROIPosition positions numROI QTRK_PixelDataType pdt LocalizationJob jobInfo CDLL_EXPORT DLL_CALLCONV QTrkSetRadialZLUT QueuedTracker qtrk data count planes zcmp CDLL_EXPORT DLL_CALLCONV QTrkGetRadialZLUT QueuedTracker qtrk dst CDLL_EXPORT DLL_CALLCONV QTrkGetRadialZLUTSize QueuedTracker qtrk count planes radialsteps CDLL_EXPORT DLL_CALLCONV QTrkBuildLUT QueuedTracker qtrk data pitch QTRK_PixelDataType pdt imageLUT plane CDLL_EXPORT DLL_CALLCONV QTrkFinalizeLUT QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkGetResultCount QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkFetchResults QueuedTracker qtrk LocalizationResult results maxResults CDLL_EXPORT DLL_CALLCONV QTrkGetQueueLength QueuedTracker qtrk maxQueueLen CDLL_EXPORT DLL_CALLCONV QTrkIsIdle QueuedTracker qtrk CDLL_EXPORT DLL_CALLCONV QTrkGetProfileReport QueuedTracker qtrk dst maxStrLen CDLL_EXPORT DLL_CALLCONV QTrkGetWarnings QueuedTracker qtrk dst maxStrLen CDLL_EXPORT DLL_CALLCONV QTrkGetComputedConfig QueuedTracker qtrk QTrkComputedConfig cfg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">image_lut index image_lut_nElem_per_bead plane image_lut_dims image_lut_dims zluts index zlut_planes cfg zlut_radialsteps image_lut_dims image_lut_dims image_lut_dims cfg numThreads SetRadialWeights weights data dataType QTrkU8 data tracker manager thread mutex mutex lock mutex unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">QueuedCPUTracker QueuedTracker QueuedCPUTracker QTrkComputedConfig cc Start Break pause GenerateTestImage dst xp yp z photoncount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">NumThreads cfg numThreads SetLocalizationMode LocMode_t lt SetRadialZLUT data num_zluts planes GetRadialZLUT zlut GetRadialZLUTSize count planes rsteps SetRadialWeights rweights</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">SetRadialWeights std::vector&lt;float&gt; weights SetRadialWeights weights ScheduleLocalization data pitch QTRK_PixelDataType pdt LocalizationJob jobInfo EnableRadialZLUTCompareProfile enabled GetRadialZLUTCompareProfile dst ZLUTSelfTest BeginLUT uint flags BuildLUT data pitch QTRK_PixelDataType pdt plane vector2f known_pos FinalizeLUT GetImageZLUTSize dims GetImageZLUT dst SetImageZLUT dst radial_zlut dims SetPixelCalibrationImages offset gain SetPixelCalibrationFactors offsetFactor gainFactor GetQueueLength maxQueueLength FetchResults LocalizationResult dstResult maxResults ClearResults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">Flush IsIdle GetResultCount GetDebugImage w h data ConfigValueMap GetConfigValues SetConfigValue std::string name std::string value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">std::string GetProfileReport</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">GetZLUTByIndex index zluts index zlut_planes cfg zlut_radialsteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Thread</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">Thread tracker manager thread mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">CPUTracker tracker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">Threads::Handle thread</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">QueuedCPUTracker manager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">lock mutex lock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">unlock mutex unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">Job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">Job data dataType QTrkU8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">uchar data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">QTRK_PixelDataType dataType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">LocalizationJob job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">LocMode_t localizeMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex jobs_mutex jobs_buffer_mutex results_mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">std::deque&lt;Job*&gt; jobs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">jobCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;Job*&gt; jobs_buffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">std::deque&lt;LocalizationResult&gt; results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">resultCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text">maxQueueSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">jobsInProgress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex gc_mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">calib_gain calib_offset gc_gainFactor gc_offsetFactor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">downsampleWidth downsampleHeight</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;Thread&gt; threads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">zluts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">zlut_cmpprofiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">zlut_enablecmpprof</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">zlut_count zlut_planes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">uint zlut_buildflags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; zcmp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; qi_radialbinweights UpdateZLUTs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">image_lut_dims image_lut_nElem_per_bead</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">ImageLUTNumBeads image_lut_dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">ImageLUTWidth image_lut_dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">ImageLUTHeight image_lut_dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">image_lut image_lut_dz image_lut_dz2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">GetImageLUTByIndex index plane image_lut index image_lut_nElem_per_bead plane image_lut_dims image_lut_dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">quitWork processJobs dbgPrintResults JobFinished Job j Job GetNextJob Job AllocateJob AddJob Job j ProcessJob Thread th Job j SetTrackerImage CPUTracker trk Job job ApplyOffsetGain CPUTracker trk beadIndex WorkerThreadMain arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pdtBytes pdtBytes int pdt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">TImageData TImageData&lt;float&gt; ImageData CImageData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">QueuedTracker QueuedTracker SetLocalizationMode LocMode_t locType SetPixelCalibrationImages offset gain SetPixelCalibrationFactors offsetFactor gainFactor ScheduleLocalization data pitch QTRK_PixelDataType pdt LocalizationJob jobInfo ScheduleImageData ImageData data LocalizationJob jobInfo ClearResults Flush ScheduleFrame imgptr pitch width height ROIPosition positions numROI QTRK_PixelDataType pdt LocalizationJob jobInfo SetRadialZLUT data count planes GetRadialZLUT dst GetRadialZLUTSize count planes radialsteps SetRadialWeights zcmp EnableRadialZLUTCompareProfile enabled GetRadialZLUTCompareProfile dst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">GetImageZLUTSize dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">GetImageZLUT dst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">SetImageZLUT src radial_zlut dims</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">BeginLUT uint flags BuildLUT data pitch QTRK_PixelDataType pdt plane vector2f known_pos FinalizeLUT GetResultCount FetchResults LocalizationResult results maxResults GetQueueLength maxQueueLen IsIdle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">std::map&lt;std::string, std::string&gt; ConfigValueMap ConfigValueMap GetConfigValues SetConfigValue std::string name std::string value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">std::string GetProfileReport</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">std::string GetWarnings</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">GetDebugImage ID w h pData ImageData DebugImage ID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">QTrkComputedConfig cfg ScheduleLocalization uchar data pitch QTRK_PixelDataType pdt uint frame uint timestamp vector3f initial uint zlutIndex ComputeZBiasCorrection bias_planes CImageData result smpPerPixel useSplineInterp ZLUTBiasCorrection z zlut_planes bead SetZLUTBiasCorrection CImageData data CImageData GetZLUTBiasCorrection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">CImageData zlut_bias_correction CopyImageToFloat uchar data width height pitch QTRK_PixelDataType pdt dst QueuedTracker CreateQueuedTracker QTrkComputedConfig cc SetCUDADevices devices numdev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00390</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h_source.html#l00411</field>
    <field name="keywords"></field>
    <field name="text">PDT_BytesPerPixel QTRK_PixelDataType pdt pdtBytes pdtBytes int pdt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">random_distr.h</field>
    <field name="url">random__distr_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">T U0 rand_uniform&lt;T&gt; T e T U1 rand_uniform&lt;T&gt; sqrt log U0 cos T U1 lambda T v rand_normal&lt;T&gt; v T lambda v sqrt lambda std::max T v T L exp lambda k T p k T u rand_uniform&lt;T&gt; p p u p L k k rand T RAND_MAX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">random_distr.h</field>
    <field name="url">random__distr_8h_source.html#l00004</field>
    <field name="keywords"></field>
    <field name="text">T rand_uniform rand T RAND_MAX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">random_distr.h</field>
    <field name="url">random__distr_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">T rand_normal T U0 rand_uniform&lt;T&gt; T e T U1 rand_uniform&lt;T&gt; sqrt log U0 cos T U1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">random_distr.h</field>
    <field name="url">random__distr_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">rand_poisson T lambda lambda T v rand_normal&lt;T&gt; v T lambda v sqrt lambda std::max T v T L exp lambda k T p k T u rand_uniform&lt;T&gt; p p u p L k k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">config frameInfo nFrameInfo results nResult count timestamp hasFrameInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">ResultFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">ResultFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">LoadRow std::vector&lt;vector3f&gt; pos SaveRow std::vector&lt;vector3f&gt; pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">TextResultFile ResultFile TextResultFile fn write LoadRow std::vector&lt;vector3f&gt; pos SaveRow std::vector&lt;vector3f&gt; pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">FILE f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">BinaryResultFile ResultFile BinaryResultFile fn write LoadRow std::vector&lt;vector3f&gt; pos SaveRow std::vector&lt;vector3f&gt; pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">FILE f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">ResultManagerConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">numBeads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">numFrameInfoColumns</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">vector3f scaling</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">vector3f offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">writeInterval</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">uint maxFramesInMemory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">uint8_t binaryOutput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">ResultManager ResultManager outfile frameinfo ResultManagerConfig cfg std::vector&lt;std::string&gt; colnames ResultManager SaveSection start end beadposfile infofile SetTracker QueuedTracker qtrk QueuedTracker GetTracker GetBeadPositions startFrame endFrame bead LocalizationResult r GetResults LocalizationResult results startFrame numResults Flush</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">FrameCounters FrameCounters</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">startFrame</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">processedFrames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">lastSaveFrame</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">capturedFrames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">localizationsDone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">lostFrames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">fileError FrameCounters GetFrameCounters StoreFrameInfo frame timestamp columns GetFrameCount RemoveBeadResults bead</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">ResultManagerConfig Config config CheckResultSpace fr Write WriteBinaryResults WriteTextResults StoreResult LocalizationResult r ThreadLoop param Update WriteBinaryFileHeader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">FrameResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">FrameResult nResult nFrameInfo frameInfo nFrameInfo results nResult count timestamp hasFrameInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;LocalizationResult&gt; results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; frameInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">hasFrameInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex resultMutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex trackerMutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;std::string&gt; frameInfoNames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">std::deque&lt; FrameResult* &gt; frameResults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00299</field>
    <field name="keywords"></field>
    <field name="text">FrameCounters cnt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">ResultManagerConfig config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">ResultFile resultFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">QueuedTracker qtrk</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">std::string outputFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">std::string frameInfoFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00308</field>
    <field name="keywords"></field>
    <field name="text">Threads::Handle thread</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">Atomic&lt;bool&gt; quit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scalar_types.h</field>
    <field name="url">scalar__types_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scalar_types.h</field>
    <field name="url">scalar__types_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">scalar_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scalar_types.h</field>
    <field name="url">scalar__types_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">std::complex&lt;scalar_t&gt; complex_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">vector3&lt;T&gt; sqrt a x sqrt a y sqrt a z x y x T X y T Y T ang rand_uniform&lt;T&gt; T r rand_uniform&lt;T&gt; R vector2 center x r T cos ang center y r T sin ang x y z f x T X y T Y z T Z x o x y o y z o z sqrtf x x y y z z vector3 x o x y o y z o z vector3 x a y a z a x o x y o y z o z x a y a z a vector3 x o x y o y z o z vector3 x a y a z a x o x y o y z o z vector3 x o x y o y z o z vector3 x a y a z a vector3 x y z x o x y o y z o z vector3 x a y a z a x a y a z a vector2&lt;T&gt; x y b a vector3&lt;T&gt; a b x a b y a b z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">vector2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">vector2 x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">vector2 Tx X Ty Y x T X y T Y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">T x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">vector2 random vector2 center T R T ang rand_uniform&lt;T&gt; T r rand_uniform&lt;T&gt; R vector2 center x r T cos ang center y r T sin ang</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">vector2&lt;float&gt; vector2f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">vector2&lt;double&gt; vector2d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">vector3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">vector3 x y z f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">vector3 Tx X Ty Y Tz Z x T X y T Y z T Z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">vector3 vector3&lt;Tc&gt; o x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">T x y z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator* vector3 o vector3 x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator* T a vector3 x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator* T a vector3 b b a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator+ vector3 o vector3 x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator+= vector3 o x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator-= vector3 o x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator- vector3 o vector3 x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator- a vector3 x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator+ a vector3 x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator- vector3 x y z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator*= vector3 o x o x y o y z o z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator*= T a x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator/= T a x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator/ T a vector3 x a y a z a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">T length sqrtf x x y y z z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">vector3 operator/ T a vector3&lt;T&gt; b vector3&lt;T&gt; a b x a b y a b z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">vector2&lt;T&gt; xy vector2&lt;T&gt; x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">vector3&lt;T&gt; sqrt vector3&lt;T&gt; a vector3&lt;T&gt; sqrt a x sqrt a y sqrt a z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">vector3&lt;float&gt; vector3f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">vector3&lt;double&gt; vector3d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">uint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">ushort</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">ulong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">uchar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Threads Handle pthread_attr_t joinable_attr Mutex pthread_mutex_t h Mutex pthread_mutex_init h pthread_mutex_destroy h lock pthread_mutex_lock h unlock pthread_mutex_unlock h Handle Create DWORD WINAPI method param param pthread_t h pthread_attr_t joinable_attr pthread_attr_init joinable_attr pthread_attr_setdetachstate joinable_attr PTHREAD_CREATE_JOINABLE pthread_create h joinable_attr method param h std::runtime_error pthread_attr_destroy joinable_attr Handle h WaitAndClose Handle h pthread_join pthread_t h count f ThreadPool&lt;int, TF&gt; threadPool f std::min count Threads::GetCPUCount i i count i threadPool AddWork i threadPool WaitUntilDone data o m lock T x data m unlock x x m lock data x m unlock worker f Nthreads Nthreads Threads::GetCPUCount threads resize Nthreads quit inProgress i i Nthreads i threads i Threads::Create ThreadEntryPoint Quit workMutex lock work push_back w workMutex unlock workMutex lock r work empty r item work front work pop_front inProgress workMutex unlock r workMutex lock r work empty inProgress workMutex unlock r workMutex lock inProgress workMutex unlock i i n i AddWork items i quit uint i i threads size i Threads::WaitAndClose threads i threads clear ThreadPool pool ThreadPool param TWorkItem item pool quit pool GetNewItem item pool worker item pool ItemDone Threads::Sleep IsDone Threads::Sleep Handle hdl Handle hdl param param hdl callback method hdl winhdl CreateThread ThreadCaller hdl hdl threadID hdl winhdl std::runtime_error hdl SYSTEM_INFO sysInfo GetSystemInfo sysInfo sysInfo dwNumberOfProcessors OSVERSIONINFO v GetVersionEx v v dwMajorVersion HANDLE h HANDLE thread RunningVistaOrBetter SetThreadPriority h bg THREAD_MODE_BACKGROUND_BEGIN THREAD_MODE_BACKGROUND_END SetThreadPriority h bg THREAD_PRIORITY_BELOW_NORMAL THREAD_PRIORITY_NORMAL ms Handle hdl Handle param hdl callback hdl param WaitForSingleObject h winhdl INFINITE CloseHandle h winhdl h name name name msg h CreateMutex FALSE trace lockCount msg CloseHandle h msg WaitForSingleObject h INFINITE lockCount name length trace buf SNPRINTF buf buf name c_str m OutputDebugString buf msg lockCount ReleaseMutex h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">Threads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">void ThreadEntryPoint param</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">Handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">DWORD threadID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">ThreadEntryPoint callback</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">HANDLE winhdl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">param</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">HANDLE h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">std::string name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">trace</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">lockCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">Mutex name name name name msg h CreateMutex FALSE trace lockCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">msg CloseHandle h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">lock msg WaitForSingleObject h INFINITE lockCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">unlock msg lockCount ReleaseMutex h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">msg m name length trace buf SNPRINTF buf buf name c_str m OutputDebugString buf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">DWORD WINAPI ThreadCaller param Handle hdl Handle param hdl callback hdl param</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">Handle Create ThreadEntryPoint method param Handle hdl Handle hdl param param hdl callback method hdl winhdl CreateThread ThreadCaller hdl hdl threadID hdl winhdl std::runtime_error hdl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">RunningVistaOrBetter OSVERSIONINFO v GetVersionEx v v dwMajorVersion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">SetBackgroundPriority Handle thread bg HANDLE h HANDLE thread RunningVistaOrBetter SetThreadPriority h bg THREAD_MODE_BACKGROUND_BEGIN THREAD_MODE_BACKGROUND_END SetThreadPriority h bg THREAD_PRIORITY_BELOW_NORMAL THREAD_PRIORITY_NORMAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">WaitAndClose Handle h WaitForSingleObject h winhdl INFINITE CloseHandle h winhdl h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">Sleep ms ms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">GetCPUCount SYSTEM_INFO sysInfo GetSystemInfo sysInfo sysInfo dwNumberOfProcessors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">Threads::Handle ThreadHandle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">Atomic</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex m</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">T data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">Atomic T o T data o</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">T</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">Atomic operator= T x x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">T x m lock data x m unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">T m lock T x data m unlock x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">ThreadPool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">ThreadPool TFunctor f Nthreads worker f Nthreads Nthreads Threads::GetCPUCount threads resize Nthreads quit inProgress i i Nthreads i threads i Threads::Create ThreadEntryPoint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">Quit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">ProcessArray TWorkItem items n i i n i AddWork items i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">AddWork TWorkItem w workMutex lock work push_back w workMutex unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">WaitUntilDone IsDone Threads::Sleep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00203</field>
    <field name="keywords"></field>
    <field name="text">IsDone workMutex lock r work empty inProgress workMutex unlock r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">Quit quit uint i i threads size i Threads::WaitAndClose threads i threads clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">ThreadEntryPoint param ThreadPool pool ThreadPool param TWorkItem item pool quit pool GetNewItem item pool worker item pool ItemDone Threads::Sleep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">ItemDone workMutex lock inProgress workMutex unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">GetNewItem TWorkItem item workMutex lock r work empty r item work front work pop_front inProgress workMutex unlock r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;Threads::Handle*&gt; threads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex workMutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">std::list&lt;TWorkItem&gt; work</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">inProgress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">Atomic&lt;bool&gt; quit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">TFunctor worker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">parallel_for count TF f count f ThreadPool&lt;int, TF&gt; threadPool f std::min count Threads::GetCPUCount i i count i threadPool AddWork i threadPool WaitUntilDone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">T sum sum2 a a len a sum data a sum2 data a data a T mean sum len sqrt sum2 len mean mean T::iterator i c begin i c end i i c clear T a1 f T a2 f T a3 f T a4 f T a5 f T p f sign x sign x fabs x T t f f p x T y f a5 t a4 t a3 t a2 t a1 t exp x x sign y maxv src minv src uint k k w h k maxv std::max maxv src k minv std::min minv src k uint k k w h k dst k maxValue src k minv maxv minv T r T w h floatToNormalizedInt r src w h maxValue r rx x ry y rx ry &lt;0 || rx+1 &gt; width ry height outside outside f outside outside T v00 image width ry rx T v10 image width ry rx T v01 image width ry rx T v11 image width ry rx T v0 Lerp v00 v10 x rx T v1 Lerp v01 v11 x rx Lerp v0 v1 y ry fx int x fx d fx len d len d fx d fx x fx d fx Interpolate1D d d size x v v a b a x TPixel maxv d TPixel minv d uint k k w h k maxv std::max maxv d k minv std::min minv d k uint k k w h k d k d k minv maxv minv end start data start p T value data p start std::swap data p start data end nSmallerItems i start i end i data i value std::swap data i data start nSmallerItems nSmallerItems std::swap data start nSmallerItems data end pivotpos start nSmallerItems k pivotpos data k k pivotpos qselect data start pivotpos k qselect data pivotpos end k T sum sum2 T s start s end s sum s sum2 T invN f end start T mean sum invN sqrt sum2 invN mean mean FloatToJPEGFile name img data img w img h TImageData&lt;float&gt; w h w h data other free data src src src i i i m i f row x row y row z m i j m i j dbgprintf m m m dbgprintf m m m dbgprintf m m m at at at at at at at at at at at at at at at vector3f at at at det Determinant det f invdet det Matrix3X3 result result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result Matrix3X3 det Determinant det f invdet det Matrix3X3 result result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result Matrix3X3 m i j m i j i i i m i a i i i m i b i m i m i vector3f m i vector3f m i Matrix3X3 t i i i t i i i t Inverse dbgprint data w h data d w w h h TImageData&lt;T&gt; T w h w h data w y x i i w h i dst i data i data data data Interpolate data w h x y outside Interpolate1D data w y w x T s f x x w h x s data x s w h data w h w h data i T w i i w h i data i src i data numPixels src numPixels free w src w h src h src data data T src w src h src data WriteImageAsCSV filename data w h labels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">isNAN T v v v GetFormattedTimeString output std::string GetCurrentOutputPath ext dbgout std::string s std::string SPrintf fmt dbgprintf fmt dbgsetlogfile path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">DeleteAllElems T c T::iterator i c begin i c end i i c clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">normalize TPixel d uint w uint h TPixel maxv d TPixel minv d uint k k w h k maxv std::max maxv d k minv std::min minv d k uint k k w h k d k d k minv maxv minv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">T Lerp T a T b x a b a x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">T Interpolate T image width height x y outside rx x ry y rx ry &lt;0 || rx+1 &gt; width ry height outside outside f outside outside T v00 image width ry rx T v10 image width ry rx T v01 image width ry rx T v11 image width ry rx T v0 Lerp v00 v10 x rx T v1 Lerp v01 v11 x rx Lerp v0 v1 y ry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">T Interpolate1D T d len x fx int x fx d fx len d len d fx d fx x fx d fx</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">T Interpolate1D std::vector&lt;T&gt; d x Interpolate1D d d size x TImageData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">T data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">TImageData data w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">TImageData T d w h data d w w h h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">Ta src i i w h i data i src i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">TImageData&lt;Ta&gt; src data numPixels src numPixels free w src w h src h src data data T src w src h src data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">copyTo dst i i w h i dst i data i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">T at x y data w y x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">T interpolate x y outside Interpolate data w h x y outside</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">T interpolate1D y x Interpolate1D data w y w x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">numPixels w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">pitch T w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">normalize data w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">T mean T s f x x w h x s data x s w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">T operator[] i data i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">TImageData alloc w h TImageData&lt;T&gt; T w h w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">free data data data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">writeAsCSV filename labels WriteImageAsCSV filename data w h labels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">CImageData TImageData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">CImageData w h TImageData float new float w h w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">CImageData CImageData other data other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">CImageData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">CImageData TImageData&lt;float&gt; src data src</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">CImageData operator= CImageData src src</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">CImageData operator= TImageData&lt;float&gt; src src</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">T StdDeviation T start T end T sum sum2 T s start s end s sum s sum2 T invN f end start T mean sum invN sqrt sum2 invN mean mean</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">TImageData&lt;float&gt; ImageData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">TImageData&lt;double&gt; ImageDatad std::vector&lt;float&gt; ComputeRadialBinWindow rsteps ComputeBgCorrectedCOM1D data len cf f ComputeCRP dst radialSteps angularSteps minradius maxradius vector2f center ImageData src mean crpmap ComputeRadialProfile dst radialSteps angularSteps minradius maxradius vector2f center ImageData src mean normalize NormalizeRadialProfile prof rsteps NormalizeZLUT zlut numLUTs planes radialsteps GenerateImageFromLUT ImageData image ImageData zlut minradius maxradius vector3f pos useSplineInterp ovs ApplyPoissonNoise ImageData img poissonMax maxValue ApplyGaussianNoise ImageData img sigma WriteComplexImageAsCSV file std::complex&lt;float&gt; d w h labels WriteArrayAsCSVRow file d len append WriteVectorAsCSVRow file std::vector&lt;float&gt; d append WriteImageAsCSV file d w h labels std::vector&lt; std::vector&lt;float&gt; ReadCSV filename sep std::vector&lt;vector3f&gt; ReadVector3CSV file sep WriteTrace std::string file vector3f results nResults GenerateTestImage ImageData img xp yp size MaxPhotons std::string GetLocalModuleFilename std::string GetLocalModulePath std::string GetDirectoryFromPath std::string fullpath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">PathSeperator PathSeperator std::string fullpath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">std::string filename extension directory std::string file_ext f ImageData ReadJPEGFile fn ImageData ReadLUTFile lutfile ReadJPEGFile uchar srcbuf srclen uchar data width height WriteJPEGFile uchar data w h filename quality FloatToJPEGFile name d w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">WriteJPEGFile name ImageData img FloatToJPEGFile name img data img w img h NearestPowerOf2 v NearestPowerOf3 v GenerateGaussianSpotImage ImageData img vector2f pos sigma I0 Ibg std::vector&lt;uchar&gt; ReadToByteBuffer filename GetPreciseTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">floatToNormalizedInt T dst src uint w uint h T maxValue maxv src minv src uint k k w h k maxv std::max maxv src k minv std::min minv src k uint k k w h k dst k maxValue src k minv maxv minv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">T floatToNormalizedInt src uint w uint h T maxValue T r T w h floatToNormalizedInt r src w h maxValue r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">T ComputeStdDev T data len T sum sum2 a a len a sum data a sum2 data a data a T mean sum len sqrt sum2 len mean mean</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">T qselect T data start end k end start data start p T value data p start std::swap data p start data end nSmallerItems i start i end i data i value std::swap data i data start nSmallerItems nSmallerItems std::swap data start nSmallerItems data end pivotpos start nSmallerItems k pivotpos data k k pivotpos qselect data start pivotpos k qselect data pivotpos end k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 i i i m i f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 vector3f x vector3f y vector3f z row x row y row z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">vector3f diag vector3f at at at</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">operator[] i m i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text">operator[] i m i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">vector3f row i vector3f m i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">vector3f row i vector3f m i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">operator() i j m i j</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">operator() i j m i j</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">at i j m i j</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">at i j m i j</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00291</field>
    <field name="keywords"></field>
    <field name="text">Determinant at at at at at at at at at at at at at at at</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 Inverse det Determinant det f invdet det Matrix3X3 result result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result Matrix3X3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 InverseTranspose det Determinant det f invdet det Matrix3X3 result result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result at at at at invdet result Matrix3X3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 operator*= a i i i m i a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">Matrix3X3 operator+= Matrix3X3 b i i i m i b i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">m</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">test Matrix3X3 t i i i t i i i t Inverse dbgprint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">dbgprint dbgprintf m m m dbgprintf m m m dbgprintf m m m</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">T erf T x T a1 f T a2 f T a3 f T a4 f T a5 f T p f sign x sign x fabs x T t f f p x T y f a5 t a4 t a3 t a2 t a1 t exp x x sign y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">MaxImageWidth cudaImageList imgl imgl w w imgl h h imgl count amount cudaMallocPitch imgl data imgl pitch T imgl fullwidth imgl fullheight cudaSuccess std::bad_alloc SPrintf T name w h amount c_str imgl hostImgBuf init numpixels cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; cudaBindTexture2D NULL texref data desc w h count pitch center x radius w center x radius center y radius h center y radius count data cudaMemset2D data pitch w T count h y idx h T dst pixelAddress img async cudaMemcpy2DAsync dst pitch src w T w T h cudaMemcpyHostToDevice s cudaMemcpy2D dst pitch src w T w T h cudaMemcpyHostToDevice T src pixelAddress img async cudaMemcpy2DAsync dst T w src pitch w T h cudaMemcpyDeviceToHost s cudaMemcpy2D dst T w src pitch w T h cudaMemcpyDeviceToHost async cudaMemcpy2DAsync data pitch src w T w T count h cudaMemcpyHostToDevice s cudaMemcpy2D data pitch src w T w T count h cudaMemcpyHostToDevice async cudaMemcpy2DAsync data pitch src w T w T numImages h cudaMemcpyHostToDevice s cudaMemcpy2D data pitch src w T w T numImages h cudaMemcpyHostToDevice async cudaMemcpy2DAsync dst T w data pitch w T count h cudaMemcpyDeviceToHost s cudaMemcpy2D dst T w data pitch w T count h cudaMemcpyDeviceToHost cudaImageList imgl imgl data imgl pitch imgl w imgl h imgl count imgl data cudaFree data data h count w T data pitch h i a b a x rx x ry y rx ry &lt; 0 || rx &gt; w ry h outside f T v00 pixel rx ry idx T v10 pixel rx ry idx T v01 pixel rx ry idx T v11 pixel rx ry idx T v0 interp v00 v10 x rx T v1 interp v01 v11 x rx outside interp v0 v1 y ry rx x ry y rx ry &lt; 0 || rx &gt; w ry h outside f computeImagePos rx ry idx fx x floor x fy y floor y u rx f v ry f T v00 tex2D texref u v T v10 tex2D texref u v T v01 tex2D texref u v T v11 tex2D texref u v T v0 interp v00 v10 fx T v1 interp v01 v11 fx outside interp v0 v1 fy data w h count computeImagePos x y imgIndex T row T data y pitch row x x &lt; 0 || x &gt; w y &lt; 0 || y &gt; h border computeImagePos x y imgIndex T row T data y pitch row x computeImagePos x y imgIndex T row T data y pitch row x w h count T w h count cudaUnbindTexture texref array d cudaGetDevice d cudaDeviceProp prop cudaGetDeviceProperties prop d imgw sx imgh sy numImg numImg layerh imgh layerw numImg layerh layerh nlayers sL dbgprintf sL layerw layerh imgw imgh getExtent width getExtent height getExtent depth cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; cudaError_t err cudaMalloc3DArray array desc getExtent cudaArrayLayered cudaArraySurfaceLoadStore err cudaSuccess std::bad_alloc SPrintf cudaGetErrorString err c_str free cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; CheckCUDAError cudaBindTextureToArray texref array desc cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; CheckCUDAError cudaBindSurfaceToArray surf array T d srcpitch CheckCUDAError cudaMallocPitch d srcpitch T imgw imgh CheckCUDAError cudaMemset2D d srcpitch T imgw imgh cudaMemcpy3DParms p p dstArray array p extent make_cudaExtent imgw imgh p kind cudaMemcpyDeviceToDevice p srcPtr make_cudaPitchedPtr d srcpitch T imgw imgh l l nlayers l img img numImg img int2 imgpos getImagePos img p dstPos z l p dstPos x imgpos x p dstPos y imgpos y CheckCUDAError cudaMemcpy3D p CheckCUDAError cudaFree d cudaMemcpy3DParms p p dstArray array int2 imgpos getImagePos img p dstPos z layer p dstPos x imgpos x p dstPos y imgpos y p extent make_cudaExtent imgw imgh p kind cudaMemcpyHostToDevice p srcPtr make_cudaPitchedPtr src T imgw T imgw imgh async CheckCUDAError cudaMemcpy3DAsync p s CheckCUDAError cudaMemcpy3D p cudaMemcpy3DParms p p srcArray array p extent make_cudaExtent imgw imgh p kind cudaMemcpyDeviceToHost p srcPos z layer int2 imgpos getImagePos img p srcPos x imgpos x p srcPos y imgpos y p dstPtr make_cudaPitchedPtr dst T imgw T imgw imgh async CheckCUDAError cudaMemcpy3DAsync p s CheckCUDAError cudaMemcpy3D p L L nlayers L i i numImg i copyImageToDevice i L src imgw imgh numImg L i async s L L nlayers L i i numImg i copyImageToHost i L dst imgw imgh numImg L i async s array CheckCUDAError cudaFreeArray array array make_cudaExtent imgw layerw imgh layerh nlayers int2 pos imgw image layerw imgh image layerw pos KernelInst inst inst imgw imgw inst imgh imgh inst layerw layerw inst cudaUnbindTexture texref make_int2 imgw image layerw imgh image layerw T r surf2DLayeredread r image_lut_surface T x y z cudaBoundaryModeTrap r surf2DLayeredwrite value surf T x y z cudaBoundaryModeTrap kp imgh h kp imgw w kp depth d layers L totalImg d L rows kp imgh kp cols totalImg rows rows CheckCUDAError cudaMallocPitch kp d_data kp pitch T kp cols kp imgw rows kp imgh free kp cudaMemset2D kp d_data kp pitch T kp cols kp imgw rows kp imgh int2 imgpos kp GetImagePos z l async cudaMemcpy2DAsync getImgAddr imgpos kp pitch src T kp imgw T kp imgw kp imgh cudaMemcpyHostToDevice s cudaMemcpy2D getImgAddr imgpos kp pitch src T kp imgw T kp imgw kp imgh cudaMemcpyHostToDevice int2 imgpos kp GetImagePos z l async cudaMemcpy2DAsync dst T kp imgw getImgAddr imgpos kp pitch kp imgw T kp imgh cudaMemcpyDeviceToHost s cudaMemcpy2D dst T kp imgw getImgAddr imgpos kp pitch kp imgw T kp imgh cudaMemcpyDeviceToHost L L layers L i i kp depth i copyImageToDevice i L src kp imgw kp imgh kp depth L i async s L L layers L i i kp depth i copyImageToHost i L dst kp imgw kp imgh kp depth L i async s kp d_data cudaFree kp d_data kp d_data d kp d_data d imgpos y kp pitch d imgpos x T kp d_data y imgpos y kp pitch x imgpos x T kp d_data y imgpos y kp pitch x imgpos x value img z depth l make_int2 img cols imgw img cols imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">cudaImageList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">T data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">pitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH fullwidth w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH fullheight h count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00020</field>
    <field name="keywords"></field>
    <field name="text">MaxImageWidth</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH capacity count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH numpixels w h count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">cudaImageList&lt;T&gt; emptyList cudaImageList imgl imgl data imgl pitch imgl w imgl h imgl count imgl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH isEmpty data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">cudaImageList&lt;T&gt; alloc w h amount cudaImageList imgl imgl w w imgl h h imgl count amount cudaMallocPitch imgl data imgl pitch T imgl fullwidth imgl fullheight cudaSuccess std::bad_alloc SPrintf T name w h amount c_str imgl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">allocateHostImageBuffer pinned_array&lt;T, Flags&gt; hostImgBuf hostImgBuf init numpixels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T i T data pitch h i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T pixel_oobcheck x y imgIndex T border f x &lt; 0 || x &gt; w y &lt; 0 || y &gt; h border computeImagePos x y imgIndex T row T data y pitch row x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T pixel x y imgIndex computeImagePos x y imgIndex T row T data y pitch row x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T pixelAddress x y imgIndex computeImagePos x y imgIndex T row T data y pitch row x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH boundaryHit float2 center radius center x radius w center x radius center y radius h center y radius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">free data cudaFree data data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">copyImageToHost img T dst async cudaStream_t s T src pixelAddress img async cudaMemcpy2DAsync dst T w src pitch w T h cudaMemcpyDeviceToHost s cudaMemcpy2D dst T w src pitch w T h cudaMemcpyDeviceToHost</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">copyImageToDevice img T src async cudaStream_t s T dst pixelAddress img async cudaMemcpy2DAsync dst pitch src w T w T h cudaMemcpyHostToDevice s cudaMemcpy2D dst pitch src w T w T h cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">copyToHost T dst async cudaStream_t s async cudaMemcpy2DAsync dst T w data pitch w T count h cudaMemcpyDeviceToHost s cudaMemcpy2D dst T w data pitch w T count h cudaMemcpyDeviceToHost</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice T src async cudaStream_t s async cudaMemcpy2DAsync data pitch src w T w T count h cudaMemcpyHostToDevice s cudaMemcpy2D data pitch src w T w T count h cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice T src numImages async cudaStream_t s async cudaMemcpy2DAsync data pitch src w T w T numImages h cudaMemcpyHostToDevice s cudaMemcpy2D data pitch src w T w T numImages h cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">clear data cudaMemset2D data pitch w T count h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH totalNumPixels w h count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH totalNumBytes w h count T</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T interp T a T b x a b a x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH T interpolate x y idx outside rx x ry y rx ry &lt; 0 || rx &gt; w ry h outside f T v00 pixel rx ry idx T v10 pixel rx ry idx T v01 pixel rx ry idx T v11 pixel rx ry idx T v0 interp v00 v10 x rx T v1 interp v01 v11 x rx outside interp v0 v1 y ry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">bind texture&lt;T, cudaTextureType2D, cudaReadModeElementType&gt; texref cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; cudaBindTexture2D NULL texref data desc w h count pitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">unbind texture&lt;T, cudaTextureType2D, cudaReadModeElementType&gt; texref cudaUnbindTexture texref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH computeImagePos x y idx y idx h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">__device__ T interpolateFromTexture texture&lt;T, cudaTextureType2D, cudaReadModeElementType&gt; texref x y idx outside rx x ry y rx ry &lt; 0 || rx &gt; w ry h outside f computeImagePos rx ry idx fx x floor x fy y floor y u rx f v ry f T v00 tex2D texref u v T v10 tex2D texref u v T v01 tex2D texref u v T v11 tex2D texref u v T v0 interp v00 v10 fx T v1 interp v01 v11 fx outside interp v0 v1 fy</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">Image4DCudaArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">cudaArray_t array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">imgw imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">layerw layerh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">nlayers</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">numImg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">cudaExtent getExtent make_cudaExtent imgw layerw imgh layerh nlayers</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text">KernelInst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">imgw imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">layerw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH int2 getImagePos image make_int2 imgw image layerw imgh image layerw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">__device__ T readSurfacePixel surface&lt;void, cudaSurfaceType2DLayered&gt; surf x y z T r surf2DLayeredread r image_lut_surface T x y z cudaBoundaryModeTrap r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">__device__ writeSurfacePixel surface&lt;void, cudaSurfaceType2DLayered&gt; surf x y z T value surf2DLayeredwrite value surf T x y z cudaBoundaryModeTrap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">KernelInst kernelInst KernelInst inst inst imgw imgw inst imgh imgh inst layerw layerw inst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">bind texture&lt;T, cudaTextureType2DLayered, cudaReadModeElementType&gt; texref cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; CheckCUDAError cudaBindTextureToArray texref array desc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">unbind texture&lt;T, cudaTextureType2DLayered, cudaReadModeElementType&gt; texref cudaUnbindTexture texref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">bind surface&lt;void, cudaSurfaceType2DLayered&gt; surf cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; CheckCUDAError cudaBindSurfaceToArray surf array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">Image4DCudaArray sx sy numImg sL array d cudaGetDevice d cudaDeviceProp prop cudaGetDeviceProperties prop d imgw sx imgh sy numImg numImg layerh imgh layerw numImg layerh layerh nlayers sL dbgprintf sL layerw layerh imgw imgh getExtent width getExtent height getExtent depth cudaChannelFormatDesc desc cudaCreateChannelDesc&lt;T&gt; cudaError_t err cudaMalloc3DArray array desc getExtent cudaArrayLayered cudaArraySurfaceLoadStore err cudaSuccess std::bad_alloc SPrintf cudaGetErrorString err c_str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">int2 getImagePos image int2 pos imgw image layerw imgh image layerw pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00303</field>
    <field name="keywords"></field>
    <field name="text">free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice T src async cudaStream_t s L L nlayers L i i numImg i copyImageToDevice i L src imgw imgh numImg L i async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">copyToHost T dst async cudaStream_t s L L nlayers L i i numImg i copyImageToHost i L dst imgw imgh numImg L i async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">clear T d srcpitch CheckCUDAError cudaMallocPitch d srcpitch T imgw imgh CheckCUDAError cudaMemset2D d srcpitch T imgw imgh cudaMemcpy3DParms p p dstArray array p extent make_cudaExtent imgw imgh p kind cudaMemcpyDeviceToDevice p srcPtr make_cudaPitchedPtr d srcpitch T imgw imgh l l nlayers l img img numImg img int2 imgpos getImagePos img p dstPos z l p dstPos x imgpos x p dstPos y imgpos y CheckCUDAError cudaMemcpy3D p CheckCUDAError cudaFree d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">copyImageToHost img layer T dst async cudaStream_t s cudaMemcpy3DParms p p srcArray array p extent make_cudaExtent imgw imgh p kind cudaMemcpyDeviceToHost p srcPos z layer int2 imgpos getImagePos img p srcPos x imgpos x p srcPos y imgpos y p dstPtr make_cudaPitchedPtr dst T imgw T imgw imgh async CheckCUDAError cudaMemcpy3DAsync p s CheckCUDAError cudaMemcpy3D p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00370</field>
    <field name="keywords"></field>
    <field name="text">copyImageToDevice img layer T src async cudaStream_t s cudaMemcpy3DParms p p dstArray array int2 imgpos getImagePos img p dstPos z layer p dstPos x imgpos x p dstPos y imgpos y p extent make_cudaExtent imgw imgh p kind cudaMemcpyHostToDevice p srcPtr make_cudaPitchedPtr src T imgw T imgw imgh async CheckCUDAError cudaMemcpy3DAsync p s CheckCUDAError cudaMemcpy3D p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00393</field>
    <field name="keywords"></field>
    <field name="text">free array CheckCUDAError cudaFreeArray array array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text">Image4DMemory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">KernelParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">T d_data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00409</field>
    <field name="keywords"></field>
    <field name="text">pitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">cols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00411</field>
    <field name="keywords"></field>
    <field name="text">depth</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00412</field>
    <field name="keywords"></field>
    <field name="text">imgw imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00414</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH int2 GetImagePos z l img z depth l make_int2 img cols imgw img cols imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">KernelParams kp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00421</field>
    <field name="keywords"></field>
    <field name="text">layers totalImg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">rows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00424</field>
    <field name="keywords"></field>
    <field name="text">Image4DMemory w h d L kp imgh h kp imgw w kp depth d layers L totalImg d L rows kp imgh kp cols totalImg rows rows CheckCUDAError cudaMallocPitch kp d_data kp pitch T kp cols kp imgw rows kp imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00437</field>
    <field name="keywords"></field>
    <field name="text">free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">free kp d_data cudaFree kp d_data kp d_data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00445</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice T src async cudaStream_t s L L layers L i i kp depth i copyImageToDevice i L src kp imgw kp imgh kp depth L i async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">copyToHost T dst async cudaStream_t s L L layers L i i kp depth i copyImageToHost i L dst kp imgw kp imgh kp depth L i async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00462</field>
    <field name="keywords"></field>
    <field name="text">clear cudaMemset2D kp d_data kp pitch T kp cols kp imgw rows kp imgh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00467</field>
    <field name="keywords"></field>
    <field name="text">getImgAddr int2 imgpos d kp d_data d imgpos y kp pitch d imgpos x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">copyImageToHost z l T dst async cudaStream_t s int2 imgpos kp GetImagePos z l async cudaMemcpy2DAsync dst T kp imgw getImgAddr imgpos kp pitch kp imgw T kp imgh cudaMemcpyDeviceToHost s cudaMemcpy2D dst T kp imgw getImgAddr imgpos kp pitch kp imgw T kp imgh cudaMemcpyDeviceToHost</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00484</field>
    <field name="keywords"></field>
    <field name="text">copyImageToDevice z l T src async cudaStream_t s int2 imgpos kp GetImagePos z l async cudaMemcpy2DAsync getImgAddr imgpos kp pitch src T kp imgw T kp imgw kp imgh cudaMemcpyHostToDevice s cudaMemcpy2D getImgAddr imgpos kp pitch src T kp imgw T kp imgw kp imgh cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00494</field>
    <field name="keywords"></field>
    <field name="text">KernelParams bind kp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00495</field>
    <field name="keywords"></field>
    <field name="text">unbind</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00497</field>
    <field name="keywords"></field>
    <field name="text">__device__ T read KernelParams kp x y int2 imgpos T kp d_data y imgpos y kp pitch x imgpos x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h_source.html#l00500</field>
    <field name="keywords"></field>
    <field name="text">__device__ write T value KernelParams kp x y int2 imgpos T kp d_data y imgpos y kp pitch x imgpos x value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">err CUFFT_SUCCESS outputTotalGPUMemUse std::runtime_error SPrintf err err cudaSuccess errstr cudaGetErrorString err std::runtime_error SPrintf errstr c_str cudaError_t err cudaGetLastError err cudaSuccess errstr cudaGetErrorString err dbgprintf errstr free_byte total_byte cudaError_t cuda_status cudaMemGetInfo free_byte total_byte cudaSuccess cuda_status dbgprintf cudaGetErrorString cuda_status exit free_db double free_byte total_db double total_byte used_db total_db free_db dbgprintf info info c_str used_db free_db total_db data size data size init N data size init src size dbgCUDAErrorCheck cudaMemcpy data src data T size cudaMemcpyDeviceToDevice data size init src size dbgCUDAErrorCheck cudaMemcpy data src T size cudaMemcpyHostToDevice free copyToDevice src src size async s size size init size async dbgCUDAErrorCheck cudaMemcpyAsync data first T size cudaMemcpyHostToDevice s dbgCUDAErrorCheck cudaMemcpy data first T size cudaMemcpyHostToDevice async dbgCUDAErrorCheck cudaMemcpyAsync dst data T size cudaMemcpyDeviceToHost s dbgCUDAErrorCheck cudaMemcpy dst data T size cudaMemcpyDeviceToHost dst size size dst resize size copyToHost dst async s data dbgCUDAErrorCheck cudaFree data data size s free s cudaMalloc data T s cudaSuccess std::bad_alloc SPrintf T name s c_str size s size T std::vector&lt;T&gt; dst size dbgCUDAErrorCheck cudaMemcpy dst data T size cudaMemcpyDeviceToHost dst init src size dbgCUDAErrorCheck cudaMemcpy data src T size cudaMemcpyHostToDevice clear init src size dbgCUDAErrorCheck cudaMemcpy data src data T size cudaMemcpyDeviceToDevice std::vector&lt;T&gt; v size dbgCUDAErrorCheck cudaMemcpy v data T size cudaMemcpyDeviceToHost v QueryPerformanceCounter LARGE_INTEGER time QueryPerformanceFrequency LARGE_INTEGER freq name name uint64_t time1 QueryPerformanceCounter LARGE_INTEGER time1 dt double time1 time double freq dbgprintf name dt d n free d init n d init src n k k src n k d k src k d init end first k first end first d k first d init src size src copyToHost d d d d d n d n cudaFreeHost d d n d free n n cudaMallocHost d T n flags cudaSuccess std::bad_alloc SPrintf name n c_str n T src n n init src n k k src n k d k src k d i d i n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">outputTotalGPUMemUse std::string info free_byte total_byte cudaError_t cuda_status cudaMemGetInfo free_byte total_byte cudaSuccess cuda_status dbgprintf cudaGetErrorString cuda_status exit free_db double free_byte total_db double total_byte used_db total_db free_db dbgprintf info info c_str used_db free_db total_db</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">CheckCUDAError cufftResult_t err err CUFFT_SUCCESS outputTotalGPUMemUse std::runtime_error SPrintf err</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">CheckCUDAError cudaError_t err err cudaSuccess errstr cudaGetErrorString err std::runtime_error SPrintf errstr c_str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">CheckCUDAError cudaError_t err cudaGetLastError err cudaSuccess errstr cudaGetErrorString err dbgprintf errstr dbgCUDAErrorCheck cudaError_t e CheckCUDAError e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">dbgCUDAErrorCheck cudaError_t e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">device_vec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">device_vec data size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">device_vec N data size init N</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">device_vec device_vec&lt;T&gt; src data size init src size dbgCUDAErrorCheck cudaMemcpy data src data T size cudaMemcpyDeviceToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">device_vec std::vector&lt;T&gt; src data size init src size dbgCUDAErrorCheck cudaMemcpy data src T size cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">init s size s free s cudaMalloc data T s cudaSuccess std::bad_alloc SPrintf T name s c_str size s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">free data dbgCUDAErrorCheck cudaFree data data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;T&gt; std::vector&lt;T&gt; dst size dbgCUDAErrorCheck cudaMemcpy dst data T size cudaMemcpyDeviceToHost dst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;T&gt; operator= std::vector&lt;T&gt; src init src size dbgCUDAErrorCheck cudaMemcpy data src T size cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;T&gt; operator= device_vec&lt;T&gt; src clear init src size dbgCUDAErrorCheck cudaMemcpy data src data T size cudaMemcpyDeviceToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">copyToHost T dst async cudaStream_t s async dbgCUDAErrorCheck cudaMemcpyAsync dst data T size cudaMemcpyDeviceToHost s dbgCUDAErrorCheck cudaMemcpy dst data T size cudaMemcpyDeviceToHost</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">copyToHost std::vector&lt;T&gt; dst async cudaStream_t s dst size size dst resize size copyToHost dst async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice std::vector&lt;T&gt; src async cudaStream_t s copyToDevice src src size async s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">copyToDevice T first size async cudaStream_t s size size init size async dbgCUDAErrorCheck cudaMemcpyAsync data first T size cudaMemcpyHostToDevice s dbgCUDAErrorCheck cudaMemcpy data first T size cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;T&gt; toVector std::vector&lt;T&gt; v size dbgCUDAErrorCheck cudaMemcpy v data T size cudaMemcpyDeviceToHost v</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">memsize size T</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">T data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">MeasureTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">uint64_t freq time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">MeasureTime name QueryPerformanceCounter LARGE_INTEGER time QueryPerformanceFrequency LARGE_INTEGER freq name name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">uint64_t time1 QueryPerformanceCounter LARGE_INTEGER time1 dt double time1 time double freq dbgprintf name dt MeasureTime MeasureTime name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">pinned_array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">pinned_array d n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">free</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">pinned_array n d init n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">pinned_array pinned_array&lt;TOther,f&gt; src d init src n k k src n k d k src k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">pinned_array operator= pinned_array&lt;TOther, F&gt; src src n n init src n k k src n k d k src k</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">pinned_array Iterator first Iterator end d init end first k first end first d k first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">pinned_array device_vec&lt;T&gt; src d init src size src copyToHost d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00220</field>
    <field name="keywords"></field>
    <field name="text">size n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">T begin d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">T end d n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">T begin d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">T end d n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">T data d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">free cudaFreeHost d d n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">init n d free n n cudaMallocHost d T n flags cudaSuccess std::bad_alloc SPrintf name n c_str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">T operator[] i d i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">T operator[] i d i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">memsize n T</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">T d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">n DbgCopyResult device_vec&lt;float2&gt; src std::vector std::complex&lt;float&gt; dst cudaDeviceSynchronize std::vector&lt;float2&gt; x src size src copyToHost x dst resize src size i i x size i dst i std::complex&lt;float&gt; x i x x i y DbgCopyResult device_vec&lt;float&gt; src std::vector&lt; float &gt; dst cudaDeviceSynchronize src copyToHost dst DbgOutputVectorToFile std::string loc device_vec&lt;float&gt; src append std::vector&lt;float&gt; dbg_output src size DbgCopyResult src dbg_output WriteVectorAsCSVRow loc c_str dbg_output append dbg_output clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">DbgCopyResult device_vec&lt;float2&gt; src std::vector std::complex&lt;float&gt; dst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">DbgCopyResult device_vec&lt;float&gt; src std::vector&lt;float&gt; dst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">DbgOutputVectorToFile std::string loc device_vec&lt;float&gt; src append</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">images bind image_sampler_texture_nearest tex2D image_sampler_texture_nearest x f y f img images h images interpolateFromTexture image_sampler_texture_nearest x y img outside images unbind image_sampler_texture_nearest images pixel x y img images interpolate x y img outside images bind image_sampler_texture_linear tex2D image_sampler_texture_linear ofs x ofs y img images h x &lt; 0 || x &gt; images w y &lt; 0 || y &gt; images h outside f outside tex2D image_sampler_texture_linear ofs x ofs y img images h x f images unbind image_sampler_texture_linear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00004</field>
    <field name="keywords"></field>
    <field name="text">ImageSampler_MemCopy</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">BindTexture cudaImageListf images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">UnbindTexture cudaImageListf images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">__device__ Interpolated cudaImageListf images x y img outside images interpolate x y img outside</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">__device__ Index cudaImageListf images x y img images pixel x y img texture&lt;float, cudaTextureType2D, cudaReadModeElementType&gt; image_sampler_texture_linear cudaFilterModeLinear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">ImageSampler_SimpleTextureRead</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">BindTexture cudaImageListf images images bind image_sampler_texture_linear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">UnbindTexture cudaImageListf images images unbind image_sampler_texture_linear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">__device__ Interpolated cudaImageListf images x y img outside x &lt; 0 || x &gt; images w y &lt; 0 || y &gt; images h outside f outside tex2D image_sampler_texture_linear ofs x ofs y img images h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">__device__ Index cudaImageListf images x y img tex2D image_sampler_texture_linear ofs x ofs y img images h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">__device__ ofs x x f texture&lt;float, cudaTextureType2D, cudaReadModeElementType&gt; image_sampler_texture_nearest cudaFilterModePoint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">ImageSampler_InterpolatedTexture</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">BindTexture cudaImageListf images images bind image_sampler_texture_nearest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">UnbindTexture cudaImageListf images images unbind image_sampler_texture_nearest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">__device__ Interpolated cudaImageListf images x y img outside images interpolateFromTexture image_sampler_texture_nearest x y img outside</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">__device__ Index cudaImageListf images x y img tex2D image_sampler_texture_nearest x f y f img images h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">ImageSampler_InterpolatedTexture ImageSampler_Tex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">x threadIdx x blockIdx x blockDim x y threadIdx y blockIdx y blockDim y jobIdx threadIdx z blockIdx z blockDim z x kp images w y kp images h jobIdx kp njobs bead kp locParams jobIdx zlutIndex value kp images pixel x y jobIdx offset calib_offset isEmpty calib_offset pixel x y bead gain calib_gain isEmpty calib_gain pixel x y bead kp images pixel x y jobIdx value offset offsetFactor gain gainFactor imgsize images w images h sum sum2 momentX momentY y y images h y x x images w x v TImageSampler::Index images x y idx sum v sum2 v v invN f imgsize mean sum invN stdev sqrtf sum2 invN mean mean sum f y y images h y x x images w x v TImageSampler::Index images x y idx v fabsf v mean correctionFactor stdev v f v f sum v momentX x v momentY y v pMean pMean mean float2 com com x momentX float sum com y momentY float sum com idx threadIdx x blockDim x blockIdx x idx count mean float2 com BgCorrectedCOM&lt;TImageSampler&gt; idx images bgCorrectionFactor mean d_com idx make_float3 com x com y f d_imgmeans idx mean jobIdx threadIdx x blockIdx x blockDim x jobIdx kp njobs float2 pos make_float2 initial jobIdx x initial jobIdx y mean kp imgmeans jobIdx I0 mean f kp images w kp images h bg mean f _1oSq2Sigma f sqrtf sigma _1oSq2PiSigma f sqrtf f sigma _1oSq2PiSigma3 f sqrtf f sigma sigma sigma i i iterations i dL_dx dL_dy dL_dI0 dL_dIbg dL2_dx dL2_dy dL2_dI0 dL2_dIbg y y kp images h y x x kp images w x Xexp0 x pos x f _1oSq2Sigma Yexp0 y pos y f _1oSq2Sigma Xexp1 x pos x f _1oSq2Sigma Yexp1 y pos y f _1oSq2Sigma DeltaX f erff Xexp0 f erff Xexp1 DeltaY f erff Yexp0 f erff Yexp1 mu bg I0 DeltaX DeltaY dmu_dx I0 _1oSq2PiSigma expf Xexp1 Xexp1 expf Xexp0 Xexp0 DeltaY dmu_dy I0 _1oSq2PiSigma expf Yexp1 Yexp1 expf Yexp0 Yexp0 DeltaX dmu_dI0 DeltaX DeltaY dmu_dIbg smp TImageSampler::Index kp images x y jobIdx f smp mu dL_dx dmu_dx f dL_dy dmu_dy f dL_dI0 dmu_dI0 f dL_dIbg dmu_dIbg f d2mu_dx I0 _1oSq2PiSigma3 x pos x f expf Xexp1 Xexp1 x pos x expf Xexp0 Xexp0 DeltaY d2mu_dy I0 _1oSq2PiSigma3 y pos y f expf Yexp1 Yexp1 y pos y expf Yexp0 Yexp0 DeltaX dL2_dx d2mu_dx f dmu_dx dmu_dx smp mu mu dL2_dy d2mu_dy f dmu_dy dmu_dy smp mu mu dL2_dI0 dmu_dI0 dmu_dI0 smp mu mu dL2_dIbg smp mu mu pos x dL_dx dL2_dx pos y dL_dy dL2_dy I0 dL_dI0 dL2_dI0 bg dL_dIbg dL2_dIbg positions jobIdx x pos x positions jobIdx y pos y I_bg I_bg jobIdx bg I_0 I_0 jobIdx I0 x threadIdx x blockIdx x blockDim x y threadIdx y blockIdx y blockDim y threadIdx z blockIdx z blockDim z x lut imgw y lut imgh kp njobs invMean f kp imgmeans id startx positions id x lut imgw ilut_scale x starty positions id y lut imgh ilut_scale y int2 imgpos lut GetImagePos kp locParams zlutPlane kp locParams zlutIndex px startx x ilut_scale x py starty y ilut_scale y outside v TImageSampler::Interpolated kp images px py outside org TImageLUT::read lut x y imgpos TImageLUT::write org v invMean lut x y imgpos a b a x jobIdx threadIdx x blockIdx x blockDim x zPlaneIdx threadIdx y blockIdx y blockDim y jobIdx njobs zPlaneIdx params planes prof profiles jobIdx params radialSteps mapping locParams jobIdx diffsum f r r params radialSteps r d prof r params img pixel r zPlaneIdx mapping zlutIndex params zcmpwindow d params zcmpwindow r diffsum d d compareScoreBuf params planes jobIdx zPlaneIdx diffsum jobIdx threadIdx x blockIdx x blockDim x jobIdx njobs cmp compareScoreBuf params planes jobIdx ZLUTFittingWeights ZLUT_LSQFIT_NWEIGHTS ZLUT_LSQFIT_WEIGHTS maxPos ComputeMaxInterp&lt;float, ZLUT_LSQFIT_NWEIGHTS&gt;::Compute cmp params planes ZLUTFittingWeights positions jobIdx z maxPos jobIdx threadIdx x blockIdx x blockDim x jobIdx njobs prof profiles params radialSteps jobIdx mean f i i params radialSteps i mean prof i mean params radialSteps rmsSum2 f i i params radialSteps i prof i mean rmsSum2 prof i prof i invTotalRms f sqrt rmsSum2 params radialSteps i i params radialSteps i prof i invTotalRms idx threadIdx x blockDim x blockIdx x idx njobs m locParams idx dst params GetRadialZLUT m zlutIndex m zlutPlane i i params radialSteps i dst i profiles params radialSteps idx i jobIdx threadIdx x blockIdx x blockDim x radialIdx threadIdx y blockIdx y blockDim y jobIdx njobs radialIdx params radialSteps dstprof profiles params radialSteps jobIdx r params minRadius params maxRadius params minRadius radialIdx params radialSteps sum f count i i params angularSteps i x positions jobIdx x params trigtable i x r y positions jobIdx y params trigtable i y r outside sum TImageSampler::Interpolated images x y jobIdx outside outside count dstprof radialIdx count MIN_RADPROFILE_SMP_COUNT sum count means jobIdx</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00003</field>
    <field name="keywords"></field>
    <field name="text">surface&lt;void, cudaSurfaceType2DLayered&gt; image_lut_surface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">__device__ T interpolate T a T b x a b a x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">__device__ float2 BgCorrectedCOM idx cudaImageListf images correctionFactor pMean imgsize images w images h sum sum2 momentX momentY y y images h y x x images w x v TImageSampler::Index images x y idx sum v sum2 v v invN f imgsize mean sum invN stdev sqrtf sum2 invN mean mean sum f y y images h y x x images w x v TImageSampler::Index images x y idx v fabsf v mean correctionFactor stdev v f v f sum v momentX x v momentY y v pMean pMean mean float2 com com x momentX float sum com y momentY float sum com</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">__global__ BgCorrectedCOM count cudaImageListf images float3 d_com bgCorrectionFactor d_imgmeans idx threadIdx x blockDim x blockIdx x idx count mean float2 com BgCorrectedCOM&lt;TImageSampler&gt; idx images bgCorrectionFactor mean d_com idx make_float3 com x com y f d_imgmeans idx mean</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">__global__ ZLUT_ProfilesToZLUT njobs cudaImageListf images ZLUTParams params float3 positions LocalizationParams locParams profiles idx threadIdx x blockDim x blockIdx x idx njobs m locParams idx dst params GetRadialZLUT m zlutIndex m zlutPlane i i params radialSteps i dst i profiles params radialSteps idx i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">__global__ ZLUT_RadialProfileKernel njobs cudaImageListf images ZLUTParams params float3 positions profiles means jobIdx threadIdx x blockIdx x blockDim x radialIdx threadIdx y blockIdx y blockDim y jobIdx njobs radialIdx params radialSteps dstprof profiles params radialSteps jobIdx r params minRadius params maxRadius params minRadius radialIdx params radialSteps sum f count i i params angularSteps i x positions jobIdx x params trigtable i x r y positions jobIdx y params trigtable i y r outside sum TImageSampler::Interpolated images x y jobIdx outside outside count dstprof radialIdx count MIN_RADPROFILE_SMP_COUNT sum count means jobIdx</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">__global__ ZLUT_ComputeZ njobs ZLUTParams params float3 positions compareScoreBuf jobIdx threadIdx x blockIdx x blockDim x jobIdx njobs cmp compareScoreBuf params planes jobIdx ZLUTFittingWeights ZLUT_LSQFIT_NWEIGHTS ZLUT_LSQFIT_WEIGHTS maxPos ComputeMaxInterp&lt;float, ZLUT_LSQFIT_NWEIGHTS&gt;::Compute cmp params planes ZLUTFittingWeights positions jobIdx z maxPos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">__global__ ZLUT_ComputeProfileMatchScores njobs ZLUTParams params profiles compareScoreBuf LocalizationParams locParams jobIdx threadIdx x blockIdx x blockDim x zPlaneIdx threadIdx y blockIdx y blockDim y jobIdx njobs zPlaneIdx params planes prof profiles jobIdx params radialSteps mapping locParams jobIdx diffsum f r r params radialSteps r d prof r params img pixel r zPlaneIdx mapping zlutIndex params zcmpwindow d params zcmpwindow r diffsum d d compareScoreBuf params planes jobIdx zPlaneIdx diffsum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">__global__ ZLUT_NormalizeProfiles njobs ZLUTParams params profiles jobIdx threadIdx x blockIdx x blockDim x jobIdx njobs prof profiles params radialSteps jobIdx mean f i i params radialSteps i mean prof i mean params radialSteps rmsSum2 f i i params radialSteps i prof i mean rmsSum2 prof i prof i invTotalRms f sqrt rmsSum2 params radialSteps i i params radialSteps i prof i invTotalRms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">__global__ ApplyOffsetGain BaseKernelParams kp cudaImageListf calib_gain cudaImageListf calib_offset gainFactor offsetFactor x threadIdx x blockIdx x blockDim x y threadIdx y blockIdx y blockDim y jobIdx threadIdx z blockIdx z blockDim z x kp images w y kp images h jobIdx kp njobs bead kp locParams jobIdx zlutIndex value kp images pixel x y jobIdx offset calib_offset isEmpty calib_offset pixel x y bead gain calib_gain isEmpty calib_gain pixel x y bead kp images pixel x y jobIdx value offset offsetFactor gain gainFactor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">__global__ G2MLE_Compute BaseKernelParams kp sigma iterations float3 initial float3 positions I_bg I_0 jobIdx threadIdx x blockIdx x blockDim x jobIdx kp njobs float2 pos make_float2 initial jobIdx x initial jobIdx y mean kp imgmeans jobIdx I0 mean f kp images w kp images h bg mean f _1oSq2Sigma f sqrtf sigma _1oSq2PiSigma f sqrtf f sigma _1oSq2PiSigma3 f sqrtf f sigma sigma sigma i i iterations i dL_dx dL_dy dL_dI0 dL_dIbg dL2_dx dL2_dy dL2_dI0 dL2_dIbg y y kp images h y x x kp images w x Xexp0 x pos x f _1oSq2Sigma Yexp0 y pos y f _1oSq2Sigma Xexp1 x pos x f _1oSq2Sigma Yexp1 y pos y f _1oSq2Sigma DeltaX f erff Xexp0 f erff Xexp1 DeltaY f erff Yexp0 f erff Yexp1 mu bg I0 DeltaX DeltaY dmu_dx I0 _1oSq2PiSigma expf Xexp1 Xexp1 expf Xexp0 Xexp0 DeltaY dmu_dy I0 _1oSq2PiSigma expf Yexp1 Yexp1 expf Yexp0 Yexp0 DeltaX dmu_dI0 DeltaX DeltaY dmu_dIbg smp TImageSampler::Index kp images x y jobIdx f smp mu dL_dx dmu_dx f dL_dy dmu_dy f dL_dI0 dmu_dI0 f dL_dIbg dmu_dIbg f d2mu_dx I0 _1oSq2PiSigma3 x pos x f expf Xexp1 Xexp1 x pos x expf Xexp0 Xexp0 DeltaY d2mu_dy I0 _1oSq2PiSigma3 y pos y f expf Yexp1 Yexp1 y pos y expf Yexp0 Yexp0 DeltaX dL2_dx d2mu_dx f dmu_dx dmu_dx smp mu mu dL2_dy d2mu_dy f dmu_dy dmu_dy smp mu mu dL2_dI0 dmu_dI0 dmu_dI0 smp mu mu dL2_dIbg smp mu mu pos x dL_dx dL2_dx pos y dL_dy dL2_dy I0 dL_dI0 dL2_dI0 bg dL_dIbg dL2_dIbg positions jobIdx x pos x positions jobIdx y pos y I_bg I_bg jobIdx bg I_0 I_0 jobIdx I0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">__global__ ImageLUT_Sample BaseKernelParams kp float2 ilut_scale float3 positions TImageLUT::KernelParams lut x threadIdx x blockIdx x blockDim x y threadIdx y blockIdx y blockDim y threadIdx z blockIdx z blockDim z x lut imgw y lut imgh kp njobs invMean f kp imgmeans id startx positions id x lut imgw ilut_scale x starty positions id y lut imgh ilut_scale y int2 imgpos lut GetImagePos kp locParams zlutPlane kp locParams zlutIndex px startx x ilut_scale x py starty y ilut_scale y outside v TImageSampler::Interpolated kp images px py outside org TImageLUT::read lut x y imgpos TImageLUT::write org v invMean lut x y imgpos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">__global__ ForceCUDAKernelsToLoad</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">dim3 njobs numThreads numThreads dim3 numThreads cudaFree d_qiparams d_qiparams cufftDestroy fftPlan fftSize cufftGetSize fftPlan fftSize d_QIprofiles memsize d_QIprofiles_reverse memsize d_quadrants memsize fftSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">qivalue_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00007</field>
    <field name="keywords"></field>
    <field name="text">float2 qicomplex_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00009</field>
    <field name="keywords"></field>
    <field name="text">QIParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00010</field>
    <field name="keywords"></field>
    <field name="text">minRadius maxRadius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00011</field>
    <field name="keywords"></field>
    <field name="text">radialSteps iterations trigtablesize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">float2 cos_sin_table</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">QI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">StreamInstance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00020</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_shiftbuffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float2&gt; d_QIprofiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float2&gt; d_QIprofiles_reverse</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_quadrants</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">cufftHandle fftPlan</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">cufftDestroy fftPlan</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">memsize fftSize cufftGetSize fftPlan fftSize d_QIprofiles memsize d_QIprofiles_reverse memsize d_quadrants memsize fftSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">cudaStream_t stream</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">DeviceInstance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float2&gt; qi_trigtable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">QIParams d_qiparams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_radialweights</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">cudaFree d_qiparams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">DeviceInstance d_qiparams Execute BaseKernelParams p QTrkComputedConfig cfg StreamInstance s DeviceInstance d device_vec&lt;float3&gt; initial device_vec&lt;float3&gt; output InitDevice DeviceInstance d QTrkComputedConfig cc InitStream StreamInstance s QTrkComputedConfig cc cudaStream_t stream batchSize Init QTrkComputedConfig cfg batchSize Iterate BaseKernelParams p device_vec&lt;float3&gt; initial device_vec&lt;float3&gt; output StreamInstance s DeviceInstance d angularSteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">QIParams params</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">qi_FFT_length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">batchSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">dim3 blocks njobs dim3 njobs numThreads numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">dim3 threads dim3 numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">qmat mx qmat quadrant my qmat quadrant asf float params trigtablesize angularSteps rstep params maxRadius params minRadius params radialSteps i i params radialSteps i sum f r params minRadius rstep i count a a angularSteps a j int asf a x center x mx params cos_sin_table j x r y center y my params cos_sin_table j y r outside v TImageSampler::Interpolated images x y idx outside outside sum v count dst i count MIN_RADPROFILE_SMP_COUNT sum count mean compute_t nr fftlen x x fftlen x shiftbuf x autoconv x nr nr x QIWeights QI_LSQFIT_NWEIGHTS QI_LSQFIT_WEIGHTS compute_t maxPos ComputeMaxInterp&lt;compute_t&gt;::Compute shiftbuf fftlen QIWeights compute_t offset maxPos nr f offset idx threadIdx x blockDim x blockIdx x idx kp njobs QIParams qp qiParams fftlen qp radialSteps img_qdr quadrants idx qp radialSteps q q q ComputeQuadrantProfile&lt;TImageSampler&gt; kp images idx img_qdr q qp radialSteps qp q make_float2 positions idx x positions idx y kp imgmeans idx angularSteps nr qp radialSteps qicomplex_t imgprof qicomplex_t profiles idx fftlen qicomplex_t x0 imgprof qicomplex_t x1 imgprof nr qicomplex_t y0 imgprof nr qicomplex_t y1 imgprof nr qicomplex_t revprof qicomplex_t reverseProfiles idx fftlen qicomplex_t xrev revprof qicomplex_t yrev revprof nr q0 img_qdr q1 img_qdr nr q2 img_qdr nr q3 img_qdr nr r r nr r rw d_radialweights r x0 nr r make_float2 rw q1 r q2 r x1 r make_float2 rw q0 r q3 r r r nr r rw d_radialweights r y1 r make_float2 rw q0 r q1 r y0 nr r make_float2 rw q2 r q3 r r r nr r xrev r x0 nr r r r nr r yrev r y0 nr r jobIdx threadIdx x blockIdx x blockDim x rIdx threadIdx y blockIdx y blockDim y quadrant threadIdx z jobIdx kp njobs rIdx &lt; params-&gt; radialSteps quadrant asf float params trigtablesize angularSteps rstep params maxRadius params minRadius params radialSteps qmat mx qmat quadrant my qmat quadrant qdr dst_quadrants jobIdx quadrant params radialSteps sum f r params minRadius rstep rIdx float3 pos positions jobIdx count for a a angularSteps a j int asf a x pos x mx params cos_sin_table j x r y pos y my params cos_sin_table j y r outside v TImageSampler::Interpolated kp images x y jobIdx outside outside sum v count qdr rIdx count MIN_RADPROFILE_SMP_COUNT sum count kp imgmeans jobIdx idx threadIdx x blockIdx x blockDim x idx n cufftComplex A a idx cufftComplex B b idx a idx make_float2 A x B x A y B y A y B x A x B y idx threadIdx x blockIdx x blockDim x idx njobs shifted shiftbuf idx fftLength cufftComplex autoconvX autoconv idx fftLength xoffset QI_ComputeAxisOffset autoconvX fftLength shifted cufftComplex autoconvY autoconvX fftLength yoffset QI_ComputeAxisOffset autoconvY fftLength shifted dst idx x current idx x xoffset pixelsPerProfLen dst idx y current idx y yoffset pixelsPerProfLen dst idx z current idx z offsets offsets idx make_float2 xoffset yoffset idx threadIdx x blockDim x blockIdx x idx kp njobs fftlen params radialSteps img_qdr quadrants idx params radialSteps nr params radialSteps qicomplex_t imgprof qicomplex_t profiles idx fftlen qicomplex_t x0 imgprof qicomplex_t x1 imgprof nr qicomplex_t y0 imgprof nr qicomplex_t y1 imgprof nr qicomplex_t revprof qicomplex_t reverseProfiles idx fftlen qicomplex_t xrev revprof qicomplex_t yrev revprof nr q0 img_qdr q1 img_qdr nr q2 img_qdr nr q3 img_qdr nr r r nr r rw d_radialweights r x0 nr r make_float2 rw q1 r q2 r x1 r make_float2 rw q0 r q3 r r r nr r rw d_radialweights r y1 r make_float2 rw q0 r q1 r y0 nr r make_float2 rw q2 r q3 r r r nr r xrev r x0 nr r r r nr r yrev r y0 nr r angsteps cfg qi_angstepspq powf cfg qi_angstep_factor cfg qi_iterations a a cfg qi_iterations a device_vec&lt;float3&gt; dst a initial output Iterate&lt; TImageSampler &gt; p dst output s d std::max MIN_RADPROFILE_SMP_COUNT angsteps angsteps cfg qi_angstep_factor QIParams qi params qi trigtablesize cfg qi_angstepspq qi iterations cfg qi_iterations qi maxRadius cfg qi_maxradius qi minRadius cfg qi_minradius qi radialSteps cfg qi_radialsteps cudaDeviceProp prop cudaGetDeviceProperties prop numThreads prop warpSize batchSize batchSize std::vector&lt;float2&gt; qi_radialgrid cc qi_angstepspq i i cc qi_angstepspq i ang f f i f cc qi_angstepspq qi_radialgrid i make_float2 cos ang sin ang d qi_trigtable qi_radialgrid std::vector&lt;float&gt; rweights ComputeRadialBinWindow cc qi_radialsteps d d_radialweights rweights QIParams dp params dp cos_sin_table d qi_trigtable data cudaMalloc d d_qiparams QIParams cudaMemcpy d d_qiparams dp QIParams cudaMemcpyHostToDevice fftlen cc qi_radialsteps s stream stream s d_quadrants init fftlen batchSize s d_QIprofiles init batchSize fftlen s d_QIprofiles_reverse init batchSize fftlen s d_shiftbuffer init fftlen batchSize cufftResult_t r cufftPlanMany s fftPlan fftlen fftlen fftlen CUFFT_C2C batchSize r CUFFT_SUCCESS std::runtime_error SPrintf fftlen batchSize CheckCUDAError cufftSetCompatibilityMode s fftPlan CUFFT_COMPATIBILITY_NATIVE CheckCUDAError cufftSetStream s fftPlan stream qi_FFT_length fftlen dim3 qdrThreads dim3 qdrDim p njobs qdrThreads x qdrThreads x params radialSteps qdrThreads y qdrThreads y QI_ComputeQuadrants&lt;TImageSampler&gt; qdrDim qdrThreads s stream p initial data s d_quadrants data d d_qiparams angularSteps QI_QuadrantsToProfiles blocks p njobs threads s stream p s d_quadrants data s d_QIprofiles data s d_QIprofiles_reverse data d d_radialweights data d d_qiparams QIParams dp params dp cos_sin_table d qi_trigtable data QI_ComputeProfile &lt;TImageSampler&gt; blocks p njobs threads s stream p initial data s d_quadrants data s d_QIprofiles data s d_QIprofiles_reverse data dp d d_radialweights data angularSteps DbgCopyResult s d_QIprofiles cmp_gpu_qi_prof cufftComplex prof cufftComplex s d_QIprofiles data cufftComplex revprof cufftComplex s d_QIprofiles_reverse data CheckCUDAError cufftExecC2C s fftPlan prof prof CUFFT_FORWARD CheckCUDAError cufftExecC2C s fftPlan revprof revprof CUFFT_FORWARD nval qi_FFT_length batchSize nthread QI_MultiplyWithConjugate dim3 nval nthread nthread dim3 nthread s stream nval prof revprof CheckCUDAError cufftExecC2C s fftPlan prof prof CUFFT_INVERSE DbgCopyResult s d_QIprofiles cmp_gpu_qi_fft_out float2 d_offsets pixelsPerProfLen params maxRadius params minRadius params radialSteps dim3 nBlocks blocks p njobs nThreads threads QI_OffsetPositions nBlocks nThreads s stream p njobs initial data newpos data prof qi_FFT_length d_offsets pixelsPerProfLen s d_shiftbuffer data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00012</field>
    <field name="keywords"></field>
    <field name="text">__device__ ComputeQuadrantProfile cudaImageListf images idx dst QIParams params quadrant float2 center mean angularSteps qmat mx qmat quadrant my qmat quadrant asf float params trigtablesize angularSteps rstep params maxRadius params minRadius params radialSteps i i params radialSteps i sum f r params minRadius rstep i count a a angularSteps a j int asf a x center x mx params cos_sin_table j x r y center y my params cos_sin_table j y r outside v TImageSampler::Interpolated images x y idx outside outside sum v count dst i count MIN_RADPROFILE_SMP_COUNT sum count mean</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">__global__ QI_ComputeProfile BaseKernelParams kp float3 positions quadrants float2 profiles float2 reverseProfiles QIParams qiParams d_radialweights angularSteps idx threadIdx x blockDim x blockIdx x idx kp njobs QIParams qp qiParams fftlen qp radialSteps img_qdr quadrants idx qp radialSteps q q q ComputeQuadrantProfile&lt;TImageSampler&gt; kp images idx img_qdr q qp radialSteps qp q make_float2 positions idx x positions idx y kp imgmeans idx angularSteps nr qp radialSteps qicomplex_t imgprof qicomplex_t profiles idx fftlen qicomplex_t x0 imgprof qicomplex_t x1 imgprof nr qicomplex_t y0 imgprof nr qicomplex_t y1 imgprof nr qicomplex_t revprof qicomplex_t reverseProfiles idx fftlen qicomplex_t xrev revprof qicomplex_t yrev revprof nr q0 img_qdr q1 img_qdr nr q2 img_qdr nr q3 img_qdr nr r r nr r rw d_radialweights r x0 nr r make_float2 rw q1 r q2 r x1 r make_float2 rw q0 r q3 r r r nr r rw d_radialweights r y1 r make_float2 rw q0 r q1 r y0 nr r make_float2 rw q2 r q3 r r r nr r xrev r x0 nr r r r nr r yrev r y0 nr r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">__global__ QI_MultiplyWithConjugate n cufftComplex a cufftComplex b idx threadIdx x blockIdx x blockDim x idx n cufftComplex A a idx cufftComplex B b idx a idx make_float2 A x B x A y B y A y B x A x B y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">__device__ QI_ComputeAxisOffset cufftComplex autoconv fftlen shiftbuf compute_t nr fftlen x x fftlen x shiftbuf x autoconv x nr nr x QIWeights QI_LSQFIT_NWEIGHTS QI_LSQFIT_WEIGHTS compute_t maxPos ComputeMaxInterp&lt;compute_t&gt;::Compute shiftbuf fftlen QIWeights compute_t offset maxPos nr f offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">__global__ QI_OffsetPositions njobs float3 current float3 dst cufftComplex autoconv fftLength float2 offsets pixelsPerProfLen shiftbuf idx threadIdx x blockIdx x blockDim x idx njobs shifted shiftbuf idx fftLength cufftComplex autoconvX autoconv idx fftLength xoffset QI_ComputeAxisOffset autoconvX fftLength shifted cufftComplex autoconvY autoconvX fftLength yoffset QI_ComputeAxisOffset autoconvY fftLength shifted dst idx x current idx x xoffset pixelsPerProfLen dst idx y current idx y yoffset pixelsPerProfLen dst idx z current idx z offsets offsets idx make_float2 xoffset yoffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">__global__ QI_ComputeQuadrants BaseKernelParams kp float3 positions dst_quadrants QIParams params angularSteps jobIdx threadIdx x blockIdx x blockDim x rIdx threadIdx y blockIdx y blockDim y quadrant threadIdx z jobIdx kp njobs rIdx &lt; params-&gt; radialSteps quadrant asf float params trigtablesize angularSteps rstep params maxRadius params minRadius params radialSteps qmat mx qmat quadrant my qmat quadrant qdr dst_quadrants jobIdx quadrant params radialSteps sum f r params minRadius rstep rIdx float3 pos positions jobIdx count for a a angularSteps a j int asf a x pos x mx params cos_sin_table j x r y pos y my params cos_sin_table j y r outside v TImageSampler::Interpolated kp images x y jobIdx outside outside sum v count qdr rIdx count MIN_RADPROFILE_SMP_COUNT sum count kp imgmeans jobIdx</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">__global__ QI_QuadrantsToProfiles BaseKernelParams kp quadrants float2 profiles float2 reverseProfiles d_radialweights QIParams params idx threadIdx x blockDim x blockIdx x idx kp njobs fftlen params radialSteps img_qdr quadrants idx params radialSteps nr params radialSteps qicomplex_t imgprof qicomplex_t profiles idx fftlen qicomplex_t x0 imgprof qicomplex_t x1 imgprof nr qicomplex_t y0 imgprof nr qicomplex_t y1 imgprof nr qicomplex_t revprof qicomplex_t reverseProfiles idx fftlen qicomplex_t xrev revprof qicomplex_t yrev revprof nr q0 img_qdr q1 img_qdr nr q2 img_qdr nr q3 img_qdr nr r r nr r rw d_radialweights r x0 nr r make_float2 rw q1 r q2 r x1 r make_float2 rw q0 r q3 r r r nr r rw d_radialweights r y1 r make_float2 rw q0 r q1 r y0 nr r make_float2 rw q2 r q3 r r r nr r xrev r x0 nr r r r nr r yrev r y0 nr r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">QI::Execute BaseKernelParams p QTrkComputedConfig cfg QI::StreamInstance s QI::DeviceInstance d device_vec&lt;float3&gt; initial device_vec&lt;float3&gt; output angsteps cfg qi_angstepspq powf cfg qi_angstep_factor cfg qi_iterations a a cfg qi_iterations a device_vec&lt;float3&gt; dst a initial output Iterate&lt; TImageSampler &gt; p dst output s d std::max MIN_RADPROFILE_SMP_COUNT angsteps angsteps cfg qi_angstep_factor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">QI::Iterate BaseKernelParams p device_vec&lt;float3&gt; initial device_vec&lt;float3&gt; newpos StreamInstance s DeviceInstance d angularSteps dim3 qdrThreads dim3 qdrDim p njobs qdrThreads x qdrThreads x params radialSteps qdrThreads y qdrThreads y QI_ComputeQuadrants&lt;TImageSampler&gt; qdrDim qdrThreads s stream p initial data s d_quadrants data d d_qiparams angularSteps QI_QuadrantsToProfiles blocks p njobs threads s stream p s d_quadrants data s d_QIprofiles data s d_QIprofiles_reverse data d d_radialweights data d d_qiparams QIParams dp params dp cos_sin_table d qi_trigtable data QI_ComputeProfile &lt;TImageSampler&gt; blocks p njobs threads s stream p initial data s d_quadrants data s d_QIprofiles data s d_QIprofiles_reverse data dp d d_radialweights data angularSteps DbgCopyResult s d_QIprofiles cmp_gpu_qi_prof cufftComplex prof cufftComplex s d_QIprofiles data cufftComplex revprof cufftComplex s d_QIprofiles_reverse data CheckCUDAError cufftExecC2C s fftPlan prof prof CUFFT_FORWARD CheckCUDAError cufftExecC2C s fftPlan revprof revprof CUFFT_FORWARD nval qi_FFT_length batchSize nthread QI_MultiplyWithConjugate dim3 nval nthread nthread dim3 nthread s stream nval prof revprof CheckCUDAError cufftExecC2C s fftPlan prof prof CUFFT_INVERSE DbgCopyResult s d_QIprofiles cmp_gpu_qi_fft_out float2 d_offsets pixelsPerProfLen params maxRadius params minRadius params radialSteps dim3 nBlocks blocks p njobs nThreads threads QI_OffsetPositions nBlocks nThreads s stream p njobs initial data newpos data prof qi_FFT_length d_offsets pixelsPerProfLen s d_shiftbuffer data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">QI::InitDevice DeviceInstance d QTrkComputedConfig cc std::vector&lt;float2&gt; qi_radialgrid cc qi_angstepspq i i cc qi_angstepspq i ang f f i f cc qi_angstepspq qi_radialgrid i make_float2 cos ang sin ang d qi_trigtable qi_radialgrid std::vector&lt;float&gt; rweights ComputeRadialBinWindow cc qi_radialsteps d d_radialweights rweights QIParams dp params dp cos_sin_table d qi_trigtable data cudaMalloc d d_qiparams QIParams cudaMemcpy d d_qiparams dp QIParams cudaMemcpyHostToDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">QI::InitStream StreamInstance s QTrkComputedConfig cc cudaStream_t stream batchSize fftlen cc qi_radialsteps s stream stream s d_quadrants init fftlen batchSize s d_QIprofiles init batchSize fftlen s d_QIprofiles_reverse init batchSize fftlen s d_shiftbuffer init fftlen batchSize cufftResult_t r cufftPlanMany s fftPlan fftlen fftlen fftlen CUFFT_C2C batchSize r CUFFT_SUCCESS std::runtime_error SPrintf fftlen batchSize CheckCUDAError cufftSetCompatibilityMode s fftPlan CUFFT_COMPATIBILITY_NATIVE CheckCUDAError cufftSetStream s fftPlan stream qi_FFT_length fftlen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">QI::Init QTrkComputedConfig cfg batchSize QIParams qi params qi trigtablesize cfg qi_angstepspq qi iterations cfg qi_iterations qi maxRadius cfg qi_maxradius qi minRadius cfg qi_minradius qi radialSteps cfg qi_radialsteps cudaDeviceProp prop cudaGetDeviceProperties prop numThreads prop warpSize batchSize batchSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">CPUTracker ImageLUTConfig v v nLUTs v planes v w v h v xscale v yscale f v dim3 workItems numThreads numThreads dim3 batchSize numThreads numThreads useTextureCache useTextureCache dim3 numThreads index index radial_zlut calib_offset calib_gain cudaImageListf::emptyList com qi imageCopy zcompute zlutAlign getResults StreamIdle StreamPendingExec StreamExecuting jobs size img pixelAddress plane bead img w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">cudaImageList cudaImageList&lt;float&gt; cudaImageListf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">LocalizationParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">zlutIndex zlutPlane</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">BaseKernelParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">njobs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">LocalizationParams locParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">imgmeans</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">cudaImageListf images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">ZLUTParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH GetRadialZLUT bead plane img pixelAddress plane bead</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">minRadius maxRadius</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">zcmpwindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">angularSteps</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">planes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">cudaImageListf img</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">CUBOTH radialSteps img w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">float2 trigtable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">ImageLUTConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">ImageLUTConfig empty ImageLUTConfig v v nLUTs v planes v w v h v xscale v yscale f v</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">nLUTs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">planes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">w h</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">xscale yscale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">QueuedCUDATracker QueuedTracker QueuedCUDATracker QTrkComputedConfig cc batchSize QueuedCUDATracker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">EnableTextureCache useTextureCache useTextureCache useTextureCache SetLocalizationMode LocMode_t locType ScheduleLocalization data pitch QTRK_PixelDataType pdt LocalizationJob jobInfo ClearResults SetRadialZLUT data numLUTs planes SetRadialWeights zcmp GetRadialZLUT data GetRadialZLUTSize count planes radialSteps FetchResults LocalizationResult results maxResults BeginLUT uint flags BuildLUT data pitch QTRK_PixelDataType pdt plane vector2f known_pos FinalizeLUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">EnableRadialZLUTCompareProfile enabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">GetRadialZLUTCompareProfile dst std::string GetProfileReport Flush GetQueueLength maxQueueLen IsIdle GetResultCount SetPixelCalibrationImages offset gain SetPixelCalibrationFactors offsetFactor gainFactor ConfigValueMap GetConfigValues SetConfigValue std::string name std::string value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">Image4DMemory&lt;float&gt; ImageLUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">Device index index index radial_zlut calib_offset calib_gain cudaImageListf::emptyList Device SetRadialZLUT data radialsteps planes numLUTs SetPixelCalibrationImages offset gain img_width img_height SetRadialWeights zcmp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">cudaImageListf radial_zlut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">cudaImageListf calib_offset calib_gain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; zcompareWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">QI::DeviceInstance qi_instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">QI::DeviceInstance qalign_instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float2&gt; zlut_trigtable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">index</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">Stream Stream streamIndex Stream IsExecutionDone OutputMemoryUse</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">JobCount jobs size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">pinned_array&lt;float3&gt; results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">pinned_array&lt;float3&gt; com</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">pinned_array&lt;float&gt; imgMeans</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">pinned_array&lt;LocalizationParams&gt; locParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;LocalizationParams&gt; d_locParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;LocalizationJob&gt; jobs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">cudaImageListf images</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">pinned_array&lt;float&gt; hostImageBuf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex imageBufMutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text">cudaStream_t stream</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">cudaEvent_t localizationDone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">cudaEvent_t imageCopyDone comDone qiDone qalignDone zcomputeDone imapDone batchStart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float3&gt; d_resultpos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float3&gt; d_com</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">QI::StreamInstance qi_instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">QI::StreamInstance qalign_instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_imgmeans</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_radialprofiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">device_vec&lt;float&gt; d_zlutcmpscores</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">uint localizeFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">Device device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">State</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">StreamIdle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">StreamPendingExec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">StreamExecuting</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">State state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">batchSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">dim3 blocks workItems dim3 workItems numThreads numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">dim3 blocks dim3 batchSize numThreads numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">dim3 threads dim3 numThreads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;Stream*&gt; streams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">std::list&lt;LocalizationResult&gt; results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">resultCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">LocMode_t localizeMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex resultMutex jobQueueMutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;Device*&gt; devices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">useTextureCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">gc_offsetFactor gc_gainFactor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">Threads::Mutex gc_mutex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00201</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;float&gt; gc_offset gc_gain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">uint zlut_build_flags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">QI qi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text">QI qalign</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">cudaDeviceProp deviceProp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">Threads::Handle schedulingThread</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">Atomic&lt;bool&gt; quitScheduler SchedulingThreadMain SchedulingThreadEntryPoint param ExecuteBatch Stream s Stream GetReadyStream InitializeDeviceList Stream CreateStream Device device streamIndex CopyStreamResults Stream s StreamUpdateZLUTSize Stream s CPU_ApplyOffsetGain CPUTracker trk beadIndex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">KernelProfileTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">KernelProfileTime com qi imageCopy zcompute zlutAlign getResults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">com qi imageCopy zcompute zlutAlign getResults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">KernelProfileTime time cpu_time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">batchesDone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">std::string deviceReport</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">j sign twiddles N i i N i i j swap zs i zs j m N j m j m m j m j j N j m m j m complex&lt;T&gt; w twiddles N m j i m i N i j complex&lt;T&gt; zi zs i t w zs i j zs i zi t zs i j zi t fft T N zs twiddles fft&lt;T, 1&gt; N zs twiddles T pi std::vector&lt; complex&lt;T&gt; twiddles N i i N i T t pi i N twiddles i complex&lt;T&gt; cos t sin t i i N i T t pi i N twiddles i N complex&lt;T&gt; cos t sin t twiddles T tmp a a b b tmp x f y f x a y b x a real y a imag complex x y y y complex x b y b complex x b x y b y x b y y b x x b y b complex x b x y b y x b x y b y complex x b x y b y x x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00006</field>
    <field name="keywords"></field>
    <field name="text">sfft</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00008</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">complex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00015</field>
    <field name="keywords"></field>
    <field name="text">T x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH T imag y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH T real x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH T imag y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH T real x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00020</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex x f y f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex T a T b x a y b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex conjugate complex x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator* T b complex x b y b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator*= T b x b y b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator* complex b complex x b x y b y x b y y b x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator- complex b complex x b x y b y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator+ complex b complex x b x y b y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH complex operator+= complex b x b x y b y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">complex std::complex&lt;T&gt; a x a real y a imag</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH swap T a T b T tmp a a b b tmp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH fft N std::complex&lt;T&gt; zs complex&lt;T&gt; twiddles j sign twiddles N i i N i i j swap zs i zs j m N j m j m m j m j j N j m m j m complex&lt;T&gt; w twiddles N m j i m i N i j complex&lt;T&gt; zi zs i t w zs i j zs i zi t zs i j zi t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt; complex&lt;T&gt; fill_twiddles N T pi std::vector&lt; complex&lt;T&gt; twiddles N i i N i T t pi i N twiddles i complex&lt;T&gt; cos t sin t i i N i T t pi i N twiddles i N complex&lt;T&gt; cos t sin t twiddles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH fft_forward N complex&lt;T&gt; zs complex&lt;T&gt; twiddles fft T N zs twiddles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">SFFT_BOTH fft_inverse N complex&lt;T&gt; zs complex&lt;T&gt; twiddles fft&lt;T, 1&gt; N zs twiddles</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">Benchmark.cpp</field>
    <field name="url">_benchmark_8cpp.html</field>
    <field name="keywords">Benchmark.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkROISizes</field>
    <field name="args">(const char *name, int n, int MaxPixelValue, int qi_iterations, int extraFlags, float range_in_nm, float pixel_size, float lutstep, int buildLUTFlags)</field>
    <field name="url">_benchmark_8cpp.html#a8467866a7724e472d30414e7ae206c2c</field>
    <field name="keywords">BenchmarkROISizes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkConfigParamRange</field>
    <field name="args">(int n, T QTrkSettings::*param, QTrkSettings *config, std::vector&lt; T &gt; param_values, const char *name, int MaxPixelValue, vector3f range)</field>
    <field name="url">_benchmark_8cpp.html#ad872cee47158969e0d3b42b25f249d1e</field>
    <field name="keywords">BenchmarkConfigParamRange</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkZAccuracy</field>
    <field name="args">(const char *name, int n, int MaxPixelValue)</field>
    <field name="url">_benchmark_8cpp.html#ad7543887947ece182ecd9e11715f4698</field>
    <field name="keywords">BenchmarkZAccuracy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkParams</field>
    <field name="args">()</field>
    <field name="url">_benchmark_8cpp.html#aa2e677b0099389a9137abf21b6a11b61</field>
    <field name="keywords">BenchmarkParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">img_mean</field>
    <field name="url">_benchmark_8cpp.html#aa5b98b6bea89c7867c716bd704d32743</field>
    <field name="keywords">img_mean</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">img_sigma</field>
    <field name="url">_benchmark_8cpp.html#acaaf419b1fb5e81a8bf6c8781ff30111</field>
    <field name="keywords">img_sigma</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ElectronsPerBit</field>
    <field name="url">_benchmark_8cpp.html#a8dbd33a1cfada9779e6e675a83cd9cf9</field>
    <field name="keywords">ElectronsPerBit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">Benchmark.cpp</field>
    <field name="url">_benchmark_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;SpeedAccResult&gt; results lutfile ImageData lut ReadJPEGFile lutfile uint i i param_values size i QTrkSettings cfg config cfg param param_values i vector3f pos cfg width cfg height lut h std::string pvname SPrintf name i results push_back SpeedAccTest lut cfg n pos range pvname c_str MaxPixelValue lut free i i results size i r results i row param_values i r acc x r acc y r acc z r bias x r bias y r bias z r speed n WriteArrayAsCSVRow SPrintf name c_str row row i n n mpv pixel_size lutstep zlutbias zlutbias zlutbias range_in_nm bias bias bias i i i BenchmarkROISizes SPrintf i bias zlutbias c_str n mpv i range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT BenchmarkROISizes SPrintf bias zlutbias c_str n mpv LT_XCor1D range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT range_in_nm QTrkSettings basecfg basecfg width basecfg height basecfg qi_iterations basecfg qi_roi_coverage basecfg qi_minradius basecfg zlut_minradius basecfg qi_radial_coverage f basecfg qi_angular_coverage f basecfg zlut_roi_coverage basecfg zlut_radial_coverage f basecfg com_bgcorrection basecfg qi_angstep_factor f basecfg zlut_angular_coverage f std::vector&lt;SpeedAccResult&gt; results std::vector&lt;int&gt; rois lutfile ImageData lut ReadLUTFile lutfile roi roi roi QTrkSettings cfg cfg qi_angstep_factor f cfg qi_iterations qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg com_bgcorrection cfg xc1_profileLength roi f cfg xc1_profileWidth roi f cfg xc1_iterations rois push_back roi cfg width roi cfg height roi vector3f pos cfg width cfg height lut h vector3f range range_in_nm pixel_size range_in_nm pixel_size range_in_nm lutstep results push_back SpeedAccTest lut cfg n pos range SPrintf cfg width c_str MaxPixelValue extraFlags buildLUTFlags lr results back dbgprintf roi qi_iterations lr speed lr bias x lr acc x lr bias z lr acc z lut free uint i i results size i r results i row rois i r acc x r acc z r bias x r bias z r crlb x r crlb z r speed n WriteArrayAsCSVRow name row row i std::vector&lt;SpeedAccResult&gt; results std::vector&lt;int&gt; zplanes lutfile ImageData lut ReadJPEGFile lutfile z z lut h z QTrkSettings cfg cfg qi_angstep_factor cfg qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg width cfg height vector3f pos cfg width cfg height z results push_back SpeedAccTest lut cfg n pos vector3f SPrintf name z c_str MaxPixelValue zplanes push_back z lut free uint i i results size i r results i row zplanes i r acc x r acc y r acc z r bias x r bias y r bias z r speed WriteArrayAsCSVRow name row row i n n mpv pixel_size lutstep zlutbias zlutbias zlutbias range_in_nm bias bias bias i i i BenchmarkROISizes SPrintf i bias zlutbias c_str n mpv i range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT BenchmarkROISizes SPrintf bias zlutbias c_str n mpv LT_XCor1D range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT range_in_nm QTrkSettings basecfg basecfg width basecfg height basecfg qi_iterations basecfg qi_roi_coverage basecfg qi_minradius basecfg zlut_minradius basecfg qi_radial_coverage f basecfg qi_angular_coverage f basecfg zlut_roi_coverage basecfg zlut_radial_coverage f basecfg com_bgcorrection basecfg qi_angstep_factor f basecfg zlut_angular_coverage f n n mpv pixel_size lutstep zlutbias zlutbias zlutbias range_in_nm bias bias bias i i i BenchmarkROISizes SPrintf i bias zlutbias c_str n mpv i range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT BenchmarkROISizes SPrintf bias zlutbias c_str n mpv LT_XCor1D range_in_nm pixel_size lutstep zlutbias BUILDLUT_BIASCORRECT range_in_nm QTrkSettings basecfg basecfg width basecfg height basecfg qi_iterations basecfg qi_roi_coverage basecfg qi_minradius basecfg zlut_minradius basecfg qi_radial_coverage f basecfg qi_angular_coverage f basecfg zlut_roi_coverage basecfg zlut_radial_coverage f basecfg com_bgcorrection basecfg qi_angstep_factor f basecfg zlut_angular_coverage f</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">main.cpp</field>
    <field name="url">main_8cpp.html</field>
    <field name="keywords">main.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">RWeightMode</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5</field>
    <field name="keywords">RWeightMode</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">RWNone</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5a4eb49b1a2068e45a144199d068dd2ba8</field>
    <field name="keywords">RWNone</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">RWUniform</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5a9633403698e5bbe569ab11f800d0d98c</field>
    <field name="keywords">RWUniform</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">RWRadial</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5a42d039711186f84ba7bea2d18a214e55</field>
    <field name="keywords">RWRadial</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">RWDerivative</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5a8501ede718160d9f23d00c1e401434d3</field>
    <field name="keywords">RWDerivative</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">RWStetson</field>
    <field name="url">main_8cpp.html#a8701d3fcfd86e6c94d9b3493daa8eaf5a28666d9629749977bd108fd5e13837e1</field>
    <field name="keywords">RWStetson</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Tests</field>
    <field name="url">main_8cpp.html#a44111c317cc6bb28715701cc508210a0</field>
    <field name="keywords">Tests</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ROIDis</field>
    <field name="url">main_8cpp.html#a44111c317cc6bb28715701cc508210a0a00df22d90650aae18bcee851c3e3ef82</field>
    <field name="keywords">ROIDis</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Inter</field>
    <field name="url">main_8cpp.html#a44111c317cc6bb28715701cc508210a0a810c3984dbe36b21b53256b839579fd8</field>
    <field name="keywords">Inter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Skew</field>
    <field name="url">main_8cpp.html#a44111c317cc6bb28715701cc508210a0aed8f900c8b5a442257e9931e44577bbf</field>
    <field name="keywords">Skew</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Backg</field>
    <field name="url">main_8cpp.html#a44111c317cc6bb28715701cc508210a0a1c92ee41fad99ccd54ac84fda30e29da</field>
    <field name="keywords">Backg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RescaleLUT</field>
    <field name="args">(CPUTracker *trk, ImageData *lut)</field>
    <field name="url">main_8cpp.html#a813099f634b837f0a61bd7f3b96f8362</field>
    <field name="keywords">RescaleLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SpeedTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#aed5a480dfa6d13c6f72ee21b78a4aab0</field>
    <field name="keywords">SpeedTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">OnePixelTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#add360cd8780989cdd86ae0c367e09285</field>
    <field name="keywords">OnePixelTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SmallImageTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a372425eb3c684f07002e7d6f8fd2a4d1</field>
    <field name="keywords">SmallImageTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">OutputProfileImg</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a6bc0f4441e530042229fca5329016838</field>
    <field name="keywords">OutputProfileImg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestBoundCheck</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a5b09aa979bbfe19bda62123375186f73</field>
    <field name="keywords">TestBoundCheck</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PixelationErrorTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#af54759018db57821aa5c9c0631e7cc02</field>
    <field name="keywords">PixelationErrorTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BuildConvergenceMap</field>
    <field name="args">(int iterations)</field>
    <field name="url">main_8cpp.html#a4b6ff0beeb126fb6302628985642cc6a</field>
    <field name="keywords">BuildConvergenceMap</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CRP_TestGeneratedData</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a4fd82881e2bc095738fd5bee6949d1f6</field>
    <field name="keywords">CRP_TestGeneratedData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CorrectedRadialProfileTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#ae29d46fa158997e0134b81f54678efe6</field>
    <field name="keywords">CorrectedRadialProfileTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteRadialProf</field>
    <field name="args">(const char *file, ImageData &amp;d)</field>
    <field name="url">main_8cpp.html#a5a3cf50568ec0e71f025a83420c6fb33</field>
    <field name="keywords">WriteRadialProf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeRadialWeights</field>
    <field name="args">(int rsteps, float minRadius, float maxRadius)</field>
    <field name="url">main_8cpp.html#aa7491e288f13c4d2ce49084cf10a30e8</field>
    <field name="keywords">ComputeRadialWeights</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestBias</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a9687cca7b7cc4af4c23014fdd66857d6</field>
    <field name="keywords">TestBias</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestZRangeBias</field>
    <field name="args">(const char *name, const char *lutfile, bool normProf)</field>
    <field name="url">main_8cpp.html#a1f1b401accf07b6fb82b39bc812da9e3</field>
    <field name="keywords">TestZRangeBias</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestZRange</field>
    <field name="args">(const char *name, const char *lutfile, int extraFlags, int clean_lut, RWeightMode weightMode=RWNone, bool biasMap=false, bool biasCorrect=false)</field>
    <field name="url">main_8cpp.html#a819933f5d01e6d35660313e4f8208304</field>
    <field name="keywords">TestZRange</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AutoBeadFindTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a1c51d0694b2d69642de81be5ebd23992</field>
    <field name="keywords">AutoBeadFindTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestFourierLUT</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a1d3b58213a1e1e4835bfb1db57efa897</field>
    <field name="keywords">TestFourierLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestFourierLUTOnDataset</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#adb7504aa0646ddbb44aabc455f16d451</field>
    <field name="keywords">TestFourierLUTOnDataset</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestZLUTAlign</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a1d9e203dc8a02b9d263126326c984a10</field>
    <field name="keywords">TestZLUTAlign</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestQuadrantAlign</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#aa9384199eb708e1b48be44041f2db601</field>
    <field name="keywords">TestQuadrantAlign</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SimpleTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a6edb955f584bcbddfc4aee183c7df8ce</field>
    <field name="keywords">SimpleTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestBSplineMax</field>
    <field name="args">(float maxpos)</field>
    <field name="url">main_8cpp.html#abebf2b53a71487375f35612650e97cba</field>
    <field name="keywords">TestBSplineMax</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateZLUTFittingCurve</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">main_8cpp.html#a33c4c5760d4fa7f0408fa1bb7195caf3</field>
    <field name="keywords">GenerateZLUTFittingCurve</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkParams</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#aa2e677b0099389a9137abf21b6a11b61</field>
    <field name="keywords">BenchmarkParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AccBiasTest</field>
    <field name="args">(ImageData &amp;lut, QueuedTracker *trk, int N, vector3f centerpos, vector3f range, const char *name, int MaxPixelValue, int extraFlags=0)</field>
    <field name="url">main_8cpp.html#a7332fef59550614786aaf55f8e366d3f</field>
    <field name="keywords">AccBiasTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ScatterBiasArea</field>
    <field name="args">(int roi, float scan_width, int steps, int samples, int qi_it, float angstep)</field>
    <field name="url">main_8cpp.html#a70226fbfa00f4214664d330d859b1cd8</field>
    <field name="keywords">ScatterBiasArea</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RunCOMAndQI</field>
    <field name="args">(ImageData img, outputter *output)</field>
    <field name="url">main_8cpp.html#aa31d450c1fa4e9c96cd7ebb64818a07b</field>
    <field name="keywords">RunCOMAndQI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SkewParam</field>
    <field name="args">(ImageData img)</field>
    <field name="url">main_8cpp.html#ab46d55f91395e4179bdee41400ff713a</field>
    <field name="keywords">SkewParam</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestROIDisplacement</field>
    <field name="args">(std::vector&lt; BeadPos &gt; beads, ImageData oriImg, outputter *output, int ROISize, int maxdisplacement=0)</field>
    <field name="url">main_8cpp.html#a31785cc889c695dfd66612b8300f925e</field>
    <field name="keywords">TestROIDisplacement</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestInterference</field>
    <field name="args">(std::vector&lt; BeadPos &gt; beads, ImageData oriImg, outputter *output, int ROISize, vector2f displacement=vector2f(60, 0))</field>
    <field name="url">main_8cpp.html#af086aec2ff408671afec5155937d80c3</field>
    <field name="keywords">TestInterference</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestSkew</field>
    <field name="args">(std::vector&lt; BeadPos &gt; beads, ImageData oriImg, outputter *output, int ROISize)</field>
    <field name="url">main_8cpp.html#ae500d6bb59316854a376397054af7211</field>
    <field name="keywords">TestSkew</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestBackground</field>
    <field name="args">(std::vector&lt; BeadPos &gt; beads, ImageData oriImg, outputter *output, int ROISize)</field>
    <field name="url">main_8cpp.html#a2021c4cbd776eecfa1f7b18745eb2e51</field>
    <field name="keywords">TestBackground</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BuildZLUT</field>
    <field name="args">(std::string folder, outputter *output)</field>
    <field name="url">main_8cpp.html#a4f42565c78afe260ab6c48197a692712</field>
    <field name="keywords">BuildZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RunZTrace</field>
    <field name="args">(std::string imagePath, std::string zlutPath, outputter *output)</field>
    <field name="url">main_8cpp.html#ae1d5528bfe8ecbce90856075bc41eff2</field>
    <field name="keywords">RunZTrace</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RunTest</field>
    <field name="args">(Tests test, const char *image, outputter *output, int ROISize)</field>
    <field name="url">main_8cpp.html#a83902d645b299c0d8152510bba162dbf</field>
    <field name="keywords">RunTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ManTest</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#a01cd171810983f79bf6ff0c5f4973207</field>
    <field name="keywords">ManTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PrintMenu</field>
    <field name="args">(outputter *output)</field>
    <field name="url">main_8cpp.html#a488248e7213caea7e93f0c203a7822fd</field>
    <field name="keywords">PrintMenu</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SelectTests</field>
    <field name="args">(const char *image, int OutputMode)</field>
    <field name="url">main_8cpp.html#a012d4c158be25aa1273de6a295031d4c</field>
    <field name="keywords">SelectTests</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">main</field>
    <field name="args">()</field>
    <field name="url">main_8cpp.html#ae66f6b31b5ad750f1fe042a706a4e3d4</field>
    <field name="keywords">main</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ANGSTEPF</field>
    <field name="url">main_8cpp.html#a1b7853708431123d1a6b7868e0d63830</field>
    <field name="keywords">ANGSTEPF</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">InDebugMode</field>
    <field name="url">main_8cpp.html#a6b657569c85f548bb37c94326f1c3f7a</field>
    <field name="keywords">InDebugMode</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">main.cpp</field>
    <field name="url">main_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">RWNone RWUniform RWRadial RWDerivative RWStetson ROIDis Inter Skew Backg QueuedTracker TrkType std::vector&lt;vector3f&gt; results truepos NImg N std::vector&lt;ImageData&gt; imgs NImg R flags LT_LocalizeZ LT_NormalizeProfile extraFlags trk cfg qi_iterations flags LT_QI trk SetLocalizationMode LocMode_t flags Matrix3X3 fisher i i NImg i imgs i ImageData::alloc trk cfg width trk cfg height vector3f pos centerpos range vector3f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f rand_uniform&lt;float&gt; f GenerateImageFromLUT imgs i lut trk cfg zlut_minradius trk cfg zlut_maxradius vector3f pos x pos y pos z SampleFisherMatrix fm MaxPixelValue fisher fm Compute pos vector3f f lut trk cfg width trk cfg height trk cfg zlut_minradius trk cfg zlut_maxradius imgs i normalize MaxPixelValue ApplyPoissonNoise imgs i MaxPixelValue LocalizationJob job i trk ScheduleLocalization uchar imgs i NImg data trk cfg width QTrkFloat job truepos push_back pos WaitForFinish trk N results resize trk GetResultCount uint i i results size i LocalizationResult r trk FetchResults r results r job frame r pos i i NImg i imgs i free SpeedAccResult r r Compute results index truepos index fisher f NImg r crlb sqrt fisher Inverse diag r img ReadJPEGFile smp ReadJPEGFile BeadFinder::Config cfg cfg img_distance f cfg roi cfg similarity results BeadFinder::Find img smp data cfg uint i i results size i dbgprintf results i x results i y img at results i x cfg roi results i y cfg roi f dbgprintf results size FloatToJPEGFile img data img w img h img free smp free W H data W H FILE f fopen fread data f fclose f testrange steps step testrange steps vector2f errXCor errQI CPUTracker trk W H trk SetImage8Bit uchar data W vector2f com trk ComputeMeanAndCOM boundaryHit vector2f cmp trk ComputeQI com ANGSTEPF boundaryHit xcorErrMap steps steps qiErrMap steps steps y y steps y x x steps x vector2f initial cmp x step x steps cmp y step y steps vector2f xcor trk ComputeXCorInterpolated initial iterations boundaryHit vector2f qi trk ComputeQI initial iterations ANGSTEPF boundaryHit errXCor x fabs xcor x cmp x errXCor y fabs xcor y cmp y xcorErrMap y steps x distance xcor cmp errQI x fabs qi x cmp x errQI y fabs qi y cmp y qiErrMap y steps x distance qi cmp dbgprintf y WriteImageAsCSV SPrintf iterations c_str xcorErrMap steps steps WriteImageAsCSV SPrintf iterations c_str qiErrMap steps steps qiErrMap xcorErrMap data ROISize std::vector&lt;BeadPos&gt; beads read_beadlist SPrintf folder c_str numImgInStack numPositions range f umPerImg range numImgInStack QTrkComputedConfig cfg cfg width cfg height ROISize cfg qi_angstep_factor cfg qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg zlut_minradius cfg qi_minradius cfg com_bgcorrection cfg xc1_profileLength ROISize f cfg xc1_profileWidth ROISize f cfg xc1_iterations cfg Update cfg WriteToFile zplanes QueuedCPUTracker qtrk QueuedCPUTracker cfg qtrk SetLocalizationMode LT_NormalizeProfile LT_QI qtrk SetRadialZLUT beads size zplanes qtrk BeginLUT pxPerBead ROISize ROISize memSizePerBead pxPerBead float startFrame plane plane zplanes plane output outputString SPrintf plane zplanes frameNum startFrame int numImgInStack startFrame float plane zplanes std::string file SPrintf folder c_str frameNum ImageData frame ReadJPEGFile file c_str data beads size pxPerBead uint ii ii beads size ii vector2f pos pos x beads at ii x ROISize pos y beads at ii y ROISize ImageData crop CropImage frame pos x pos y ROISize ROISize memcpy data ii pxPerBead crop data memSizePerBead crop free qtrk BuildLUT data ROISize QTrkFloat plane frame free data qtrk FinalizeLUT ii ii beads size ii ImageData lut ImageData::alloc cfg zlut_radialsteps zplanes memcpy lut data qtrk GetZLUTByIndex ii cfg zlut_radialsteps zplanes float output outputImage lut SPrintf ii lut free qtrk Flush qtrk std::vector&lt;float&gt; wnd rsteps x x rsteps x wnd x Lerp minRadius maxRadius x rsteps f minRadius maxRadius wnd imgname ImageData img ReadJPEGFile imgname CPUTracker trk img w img h trk SetImageFloat img data vector2f com trk ComputeMeanAndCOM boundaryHit vector2f qi trk ComputeQI com ANGSTEPF boundaryHit dbgprintf imgname com x com y qi x qi y std::vector&lt;float&gt; angularProfile asym trk ComputeAsymmetry qi angularProfile size angularProfile WriteImageAsCSV angularProfile angularProfile size dbgprintf asym std::vector&lt;float&gt; crp crpmap angularProfile size crp size ComputeCRP crp crp size angularProfile size qi img f WriteImageAsCSV crpmap crp size angularProfile size crpmap img data w h img w h lutname std::vector&lt;uchar&gt; lutdata ReadToByteBuffer lutname lutw luth uchar lut ReadJPEGFile lutdata lutdata size lut lutw luth img QTrkSettings settings settings width settings height QueuedCPUTracker qt settings ImageData lut ReadJPEGFile lutfile ImageData nlut ResampleLUT qt lut lut h nlut CPUTracker trk settings width settings height ImageData smp ImageData::alloc settings width settings height trk SetRadialZLUT nlut data nlut h nlut w qt cfg zlut_minradius qt cfg zlut_maxradius N z z z vector3f pos settings width settings height nlut h z N f GenerateImageFromLUT smp nlut qt cfg zlut_minradius qt cfg zlut_maxradius pos ApplyPoissonNoise smp WriteJPEGFile SPrintf z c_str smp trk SetImageFloat smp data std::vector&lt;float&gt; profile qt cfg zlut_radialsteps cmpProf nlut h fitted nlut h trk ComputeRadialProfile profile qt cfg zlut_radialsteps qt cfg zlut_angularsteps qt cfg zlut_minradius qt cfg zlut_maxradius pos xy trk LUTProfileCompare profile cmpProf CPUTracker::LUTProfMaxQuadraticFit fitted WriteArrayAsCSVRow profile profile size z WriteArrayAsCSVRow cmpProf cmpProf size z WriteArrayAsCSVRow fitted fitted size z smp free nlut free lut free SelectTests Files Images ROISize displacement skewFact f bgCorr imgSel inChar selChar printf_s imgSel ROISize skewFact displacement bgCorr std::cout std::cin selChar selChar printf printf std::cin imgSel std::cin ROISize std::cin skewFact std::cin displacement std::cin bgCorr std::cout std::endl selChar ImageData img imgSel ImageData imgRaw ReadJPEGFile ROISize imgRaw w img SkewImage imgRaw skewFact img normalize imgRaw free ImageData imgRaw ImageData::alloc ROISize ROISize GenerateTestImage imgRaw ROISize displacement ROISize displacement img SkewImage imgRaw skewFact img normalize imgRaw free FloatToJPEGFile img data ROISize ROISize QTrkComputedConfig cfg cfg width cfg height ROISize cfg qi_angstep_factor cfg qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage f cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_radial_coverage cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg com_bgcorrection bgCorr cfg xc1_profileLength ROISize f cfg xc1_profileWidth ROISize f cfg xc1_iterations cfg testRun cfg Update QueuedCPUTracker qtrk QueuedCPUTracker cfg qtrk SetLocalizationMode LT_QI LT_LocalizeZ LT_NormalizeProfile LocalizationJob job ROIPosition pos pos x pos y queued qtrk ScheduleFrame img data img w img w img h pos QTrkFloat job printf queued qtrk GetQueueLength qtrk GetResultCount LocalizationResult lr qtrk FetchResults lr printf lr firstGuess x lr firstGuess y lr pos x lr pos y prof ALLOCA_ARRAY cfg zlut_radialsteps boundaryHit ImageData imgData img data ROISize ROISize ComputeRadialProfile prof cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius lr pos xy imgData lr imageMean WriteArrayAsCSVRow prof cfg zlut_radialsteps ComputeRadialProfile prof cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius lr pos xy imgData lr imageMean WriteArrayAsCSVRow prof cfg zlut_radialsteps img free qtrk Flush qtrk std::cout std::cin inChar inChar CPUTracker tracker CPUTracker tracker GetPixel dbgout SPrintf vector2f com tracker ComputeMeanAndCOM dbgout SPrintf com x com y vector2f initial boundaryHit vector2f xcor tracker ComputeXCorInterpolated initial boundaryHit dbgout SPrintf xcor x xcor y assert xcor x f xcor y f tracker CPUTracker tracker CPUTracker boundaryHit i i i xp tracker GetWidth rand_uniform&lt;float&gt; yp tracker GetHeight rand_uniform&lt;float&gt; GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight xp yp f vector2f com tracker ComputeMeanAndCOM dbgout SPrintf com x xp com y yp vector2f initial com boundaryHit vector2f xcor tracker ComputeXCorInterpolated initial boundaryHit dbgprintf xcor x xp xcor y yp boundaryHit boundaryHit vector2f qi tracker ComputeQI initial ANGSTEPF boundaryHit dbgprintf qi x xp qi y yp boundaryHit tracker CPUTracker tracker CPUTracker X tracker GetWidth Y tracker GetHeight N x x N x xpos X f x float N GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight xpos X f vector2f com tracker ComputeMeanAndCOM vector2f initial X Y boundaryHit vector2f xcorInterp tracker ComputeXCorInterpolated initial boundaryHit vector2f qipos tracker ComputeQI initial tracker GetWidth f tracker GetWidth boundaryHit dbgprintf xpos com x xpos xcorInterp x xpos qipos x xpos tracker output outputString output outputString output outputString output outputString output outputString output outputString output outputString output outputString output outputString output outputString buf CPUTracker trk img w img h trk SetImageFloat img data t GetPreciseTime vector2f com trk ComputeMeanAndCOM t GetPreciseTime t sprintf buf com x com y t output outputString buf vector2f initial com x com y boundaryHit qi_iterations qi_iterations qi_iterations t GetPreciseTime vector2f qi trk ComputeQI initial qi_iterations ANGSTEPF boundaryHit t GetPreciseTime t sprintf buf qi x qi y t output outputString buf boundaryHit ImageData source ReadJPEGFile image std::vector&lt;BeadPos&gt; beads read_beadlist output newFile test ROIDis output outputString test Inter output outputString test Skew output outputString test Backg output outputString output outputString SPrintf image beads size ROISize t0 GetPreciseTime test ROIDis TestROIDisplacement beads source output ROISize Inter TestInterference beads source output ROISize Skew TestSkew beads source output ROISize Backg TestBackground beads source output ROISize t1 GetPreciseTime output newFile output outputString SPrintf t1 t0 source free ROISize std::vector&lt;BeadPos&gt; beads read_beadlist SPrintf imagePath c_str beads size output outputString QTrkComputedConfig cfg cfg width cfg height ROISize cfg qi_angstep_factor cfg qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg zlut_minradius cfg qi_minradius cfg com_bgcorrection cfg xc1_profileLength ROISize f cfg xc1_profileWidth ROISize f cfg xc1_iterations cfg testRun cfg Update cfg WriteToFile std::string file SPrintf zlutPath c_str ImageData lut ReadJPEGFile file c_str cfg zlut_radialsteps lut w output outputString lut free zplanes lut h lut free res cfg zlut_radialsteps zluts zplanes res beads size ROIPosition positions ROIPosition beads size ii ii beads size ii std::string file SPrintf zlutPath c_str ii ImageData lut ReadJPEGFile file c_str memcpy zluts ii res zplanes lut data res zplanes lut free positions ii x beads at ii x ROISize positions ii y beads at ii y ROISize QueuedCPUTracker qtrk QueuedCPUTracker cfg qtrk SetRadialZLUT zluts beads size zplanes qtrk FinalizeLUT qtrk SetLocalizationMode LT_QI LT_LocalizeZ LT_NormalizeProfile ResultManagerConfig RMcfg RMcfg numBeads beads size RMcfg numFrameInfoColumns RMcfg scaling vector3f f f f RMcfg offset vector3f f f f RMcfg writeInterval RMcfg maxFramesInMemory RMcfg binaryOutput std::vector&lt;std::string&gt; colnames ii ii RMcfg numFrameInfoColumns ii colnames push_back SPrintf ii ResultManager RM ResultManager SPrintf output folder c_str c_str SPrintf output folder c_str c_str RMcfg colnames RM SetTracker qtrk numFramesToTrack NumJpgInDir imagePath ii ii numFramesToTrack ii std::string file SPrintf imagePath c_str ii ImageData img ReadJPEGFile file c_str LocalizationJob job ii queued qtrk ScheduleFrame img data img w img w img h positions beads size QTrkFloat job ResultManager::FrameCounters cnt RM GetFrameCounters output outputString SPrintf ii qtrk GetQueueLength cnt capturedFrames cnt processedFrames cnt localizationsDone cnt lostFrames img free qtrk GetQueueLength RM Flush RM qtrk ClearResults qtrk positions zluts std::vector&lt;float&gt; u linspace roi scan_width roi scan_width steps QTrkComputedConfig cfg cfg width cfg height roi cfg qi_angstep_factor angstep cfg qi_iterations qi_it cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg zlut_minradius cfg qi_minradius cfg com_bgcorrection cfg xc1_profileLength roi f cfg xc1_profileWidth roi f cfg xc1_iterations cfg Update ImageData lut orglut ReadLUTFile vector3f ct roi roi lut h f dx scan_width steps QueuedCPUTracker trk cfg ResampleLUT trk orglut orglut h lut maxval ImageData tmp ImageData::alloc roi roi GenerateImageFromLUT tmp lut cfg zlut_maxradius vector3f roi roi lut h ApplyPoissonNoise tmp maxval std::string fn SPrintf roi scan_width steps qi_it samples WriteJPEGFile fn c_str tmp tmp free fn y y steps y x x steps x vector3f cpos x f steps dx y f steps dx cfg qi_iterations qi_it r AccBiasTest orglut trk samples cpos ct vector3f maxval qi_it LT_XCor1D row r acc x r acc y r acc z r bias x r bias y r bias z r crlb x r crlb z samples WriteArrayAsCSVRow fn c_str row x y dbgprintf x y orglut free lut free outputter output outputter OutputMode testNum ROISize PrintMenu output inChar output outputString std::string imagesPath LUTPath std::cin inChar inChar RunTest ROIDis image output ROISize output outputString RunTest Inter image output ROISize output outputString RunTest Skew image output ROISize output outputString RunTest Backg image output ROISize output outputString BuildZLUT output output outputString RunZTrace output ManTest output outputString SPrintf ROISize std::cin ROISize output outputString PrintMenu output inChar output QTrkSettings cfg cfg qi_minradius cfg zlut_minradius cfg width cfg height locModeQI LocMode_t LT_QI LT_NormalizeProfile LT_LocalizeZ results RunTracker&lt;QueuedCPUTracker&gt; cfg locModeQI results computeStats dbgprintf results meanErr x results stdev x results meanErr z results stdev z size img w img h outeredge size GetOuterEdges outeredge size img max std::max_element img data img data img w img h min std::min_element img data img data img w img h outer_max std::max_element outeredge outeredge size outer_min std::min_element outeredge outeredge size out outer_max outer_min max min outeredge out CPUTracker tracker CPUTracker GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight tracker width tracker height f FloatToJPEGFile tracker srcImage tracker width tracker height vector2f com tracker ComputeMeanAndCOM dbgout SPrintf com x com y vector2f initial boundaryHit vector2f xcor tracker ComputeXCorInterpolated initial boundaryHit dbgout SPrintf xcor x xcor y I vector2f pos initial i i I i bhit vector2f np tracker ComputeQI pos bhit dbgprintf i np x np y pos x pos y FloatToJPEGFile tracker GetDebugImage tracker width tracker height tracker N N qi_iterations xcor_iterations CPUTracker tracker CPUTracker radialSteps zplanes zmin zmax zradius tracker xcorw zlut radialSteps zplanes x x zplanes x vector2f center tracker GetWidth tracker GetHeight s zmin zmax zmin x zplanes GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight center x center y s f tracker mean f tracker ComputeRadialProfile zlut x radialSteps radialSteps zradius center tracker SetRadialZLUT zlut zplanes radialSteps zradius zlut vector2f comdist xcordist qidist zdist f zerrsum f tcom tgen tz tqi txcor k k N k t0 GetPreciseTime xp tracker GetWidth rand_uniform&lt;float&gt; yp tracker GetHeight rand_uniform&lt;float&gt; z zmin f zmax zmin f rand_uniform&lt;float&gt; GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight xp yp z t1 GetPreciseTime vector2f com tracker ComputeMeanAndCOM vector2f initial com x com y t2 GetPreciseTime boundaryHit vector2f xcor tracker ComputeXCorInterpolated initial xcor_iterations boundaryHit boundaryHit dbgprintf comdist x fabsf com x xp comdist y fabsf com y yp xcordist x fabsf xcor x xp xcordist y fabsf xcor y yp t3 GetPreciseTime boundaryHit vector2f qi tracker ComputeQI initial qi_iterations ANGSTEPF boundaryHit qidist x fabsf qi x xp qidist y fabsf qi y yp t4 GetPreciseTime boundaryHit dbgprintf boundaryHit est_z zmin zmax zmin tracker ComputeZ qi boundaryHit zplanes zdist fabsf est_z z zerrsum est_z z boundaryHit dbgprintf t5 GetPreciseTime k tgen t1 t0 tcom t2 t1 txcor t3 t2 tqi t4 t3 tz t5 t4 Nns N dbgprintf Nns tgen Nns tcom dbgprintf Nns xcor_iterations txcor dbgprintf xcor_iterations Nns tcom txcor dbgprintf Nns tz dbgprintf Nns qi_iterations tqi dbgprintf comdist x N comdist y N dbgprintf xcordist x N xcordist y N dbgprintf qidist x N qidist y N dbgprintf zdist N zerrsum N tracker std::string out out output newFile out uint ii ii beads size ii x beads at ii x ROISize y beads at ii y ROISize ImageData img CropImage oriImg x y ROISize ROISize output outputImage img SPrintf beads at ii x beads at ii y output outputString SPrintf beads at ii x beads at ii y output outputString SPrintf BackgroundMedian img output outputString SPrintf BackgroundStdDev img output outputString SPrintf BackgroundRMS img output outputString img free ImageData lut ReadLUTFile ImageData img ImageData::alloc CPUTracker trk img w img h o f vector3f pos img w o img h o lut h NormalizeZLUT lut data lut h lut w lut normalize srand time i i i GenerateImageFromLUT img lut img w pos ApplyPoissonNoise img stdev StdDeviation img data img data img w dbgprintf stdev WriteJPEGFile img trk SetImageFloat img data vector2f com trk ComputeMeanAndCOM dbgprintf com x com y bhit rw ComputeRadialBinWindow img w vector2f qi trk ComputeQI com img w img w img w bhit rw dbgprintf qi x qi y trk SetRadialZLUT lut data lut h lut w img w z trk ComputeZ qi img w znorm trk ComputeZ qi img w dbgprintf z znorm pos z img free lut free CPUTracker tracker CPUTracker boundaryHit i i i xp tracker GetWidth rand_uniform&lt;float&gt; yp tracker GetHeight rand_uniform&lt;float&gt; GenerateTestImage ImageData tracker srcImage tracker GetWidth tracker GetHeight xp yp f vector2f com tracker ComputeMeanAndCOM dbgout SPrintf com x xp com y yp vector2f initial com boundaryHit vector2f xcor tracker ComputeXCorInterpolated initial boundaryHit dbgprintf xcor x xp xcor y yp boundaryHit boundaryHit vector2f qi tracker ComputeQI initial ANGSTEPF boundaryHit dbgprintf qi x xp qi y yp boundaryHit tracker N v N i i N i v i sqrt i maxpos i maxpos max ComputeSplineFitMaxPos v N dbgprintf max maxpos QTrkSettings cfg cfg width cfg height cfg zlut_minradius cfg zlut_roi_coverage NF zpos locMode LocMode_t LT_QI LT_FourierLUT LT_NormalizeProfile LT_LocalizeZ resultsZA RunTracker&lt;QueuedCPUTracker&gt; cfg locMode NF zpos locModeQI LocMode_t LT_QI LT_NormalizeProfile LT_LocalizeZ resultsQI RunTracker&lt;QueuedCPUTracker&gt; cfg locModeQI NF zpos resultsZA computeStats resultsQI computeStats dbgprintf resultsZA meanErr x resultsZA stdev x resultsZA meanErr z resultsZA stdev z dbgprintf resultsQI meanErr x resultsQI stdev x resultsQI meanErr z resultsQI stdev z basepath process_bead_dir SPrintf basepath c_str ImageData img bead frame ImageData added AddImages oriImg oriImg displacement uint ii ii beads size ii output newFile SPrintf beads at ii x beads at ii y x beads at ii x ROISize y beads at ii y ROISize ImageData img CropImage added x y ROISize ROISize output outputImage img SPrintf beads at ii x beads at ii y RunCOMAndQI img output img free added free QTrkSettings cfg cfg width cfg height cfg numThreads NF N cfg numThreads N locModeQI LocMode_t LT_QI LT_NormalizeProfile LT_LocalizeZ resultsQI RunTracker&lt;QueuedCPUTracker&gt; cfg locModeQI N NF locMode LocMode_t LT_QI LT_ZLUTAlign LT_NormalizeProfile LT_LocalizeZ resultsZA RunTracker&lt;QueuedCPUTracker&gt; cfg locMode N NF resultsZA computeStats resultsQI computeStats dbgprintf resultsZA meanErr x resultsZA stdev x resultsZA meanErr z resultsZA stdev z dbgprintf resultsQI meanErr x resultsQI stdev x resultsQI meanErr z resultsQI stdev z uint ii ii beads size ii output newFile SPrintf beads at ii x beads at ii y ROISize x_i maxdisplacement x_i maxdisplacement x_i y_i maxdisplacement y_i maxdisplacement y_i x beads at ii x x_i ROISize y beads at ii y y_i ROISize ImageData img CropImage oriImg x y ROISize ROISize output outputImage img SPrintf beads at ii x x_i beads at ii y y_i output outputString SPrintf x_i y_i x y x ROISize y ROISize RunCOMAndQI img output img free uint ii ii beads size ii output newFile SPrintf beads at ii x beads at ii y x beads at ii x ROISize y beads at ii y ROISize ImageData img CropImage oriImg x y ROISize ROISize ImageData skewImg SkewImage img output outputImage skewImg SPrintf beads at ii x beads at ii y imgSkew SkewParam img skewImgSkew SkewParam skewImg output outputString SPrintf imgSkew skewImgSkew RunCOMAndQI skewImg output img free skewImg free QTrkSettings cfg cfg width cfg height NF locModeQI LocMode_t LT_QI LT_NormalizeProfile LT_LocalizeZ resultsQI RunTracker&lt;QueuedCPUTracker&gt; cfg locModeQI NF locMode LocMode_t LT_QI LT_ZLUTAlign LT_NormalizeProfile LT_LocalizeZ resultsZA RunTracker&lt;QueuedCPUTracker&gt; cfg locMode NF resultsZA computeStats resultsQI computeStats dbgprintf resultsZA meanErr x resultsZA stdev x resultsZA meanErr z resultsZA stdev z dbgprintf resultsQI meanErr x resultsQI stdev x resultsQI meanErr z resultsQI stdev z ImageData lut ReadLUTFile lutfile vector3f delta f f f PathSeperator lutfile extension WriteJPEGFile SPrintf name c_str lut clean_lut BenchmarkLUT::CleanupLUT lut WriteJPEGFile std::string lutfile substr strlen lutfile append c_str lut QTrkComputedConfig settings settings qi_iterations settings zlut_minradius settings qi_minradius settings width settings height settings Update maxVal std::vector&lt;float&gt; stdv dbgprintf SampleFisherMatrix fm maxVal QueuedCPUTracker trk settings ImageData rescaledLUT ResampleLUT trk lut lut h rescaledLUT biasCorrect CImageData result trk ComputeZBiasCorrection lut h result WriteImageAsCSV SPrintf name c_str result data result w result h f weightMode RWDerivative f LT_LocalizeZWeighted weightMode RWRadial std::vector&lt;float&gt; w settings zlut_radialsteps i i settings zlut_radialsteps i w i settings zlut_minradius i settings zlut_radialsteps settings zlut_maxradius trk SetRadialWeights w weightMode RWStetson trk SetRadialWeights ComputeRadialBinWindow settings zlut_radialsteps trk SetLocalizationMode LT_QI LT_LocalizeZ LT_NormalizeProfile extraFlags f uint nstep InDebugMode uint smpPerStep InDebugMode biasMap smpPerStep nstep InDebugMode std::vector&lt;vector3f&gt; truepos positions crlb std::vector&lt;float&gt; stdevz uint i i nstep i z i float nstep rescaledLUT h vector3f pos vector3f settings width settings height z truepos push_back pos Matrix3X3 invFisherLUT fm Compute pos delta rescaledLUT settings width settings height settings zlut_minradius settings zlut_maxradius Inverse crlb push_back sqrt invFisherLUT diag ImageData img ImageData::alloc settings width settings height uint j j smpPerStep j vector3f rndvec rand_uniform&lt;float&gt; rand_uniform&lt;float&gt; rand_uniform&lt;float&gt; biasMap rndvec vector3f vector3f rndpos pos vector3f rndvec f GenerateImageFromLUT img rescaledLUT settings zlut_minradius settings zlut_maxradius rndpos img normalize biasMap ApplyPoissonNoise img maxVal LocalizationJob job positions size trk ScheduleImageData img job positions push_back rndpos j InDebugMode WriteJPEGFile SPrintf name c_str img dbgprintf i z crlb i x crlb i y crlb i z img free WaitForFinish trk positions size std::vector&lt;vector3f&gt; trkmean nstep trkstd nstep std::vector&lt;vector3f&gt; resultpos nstep smpPerStep uint i i positions size i LocalizationResult lr trk FetchResults lr resultpos lr job frame lr pos uint i i nstep i uint j j smpPerStep j vector3f err resultpos i smpPerStep j positions i smpPerStep j trkmean i err trkmean i smpPerStep vector3f variance uint j j smpPerStep j vector3f r resultpos i smpPerStep j vector3f t positions i smpPerStep j vector3f err r t err trkmean i variance err err InDebugMode dbgprintf r x r y r z t x t y t z biasMap trkstd i vector3f trkstd i sqrt variance smpPerStep vector3f mean_std std::vector&lt;float&gt; output uint i i nstep i dbgprintf i trkstd i z crlb i z trkmean i z truepos i z output push_back truepos i z output push_back trkmean i x output push_back trkstd i x output push_back trkmean i z output push_back trkstd i z output push_back crlb i x output push_back crlb i z mean_std trkstd i dbgprintf mean_std nstep z WriteImageAsCSV SPrintf name weightMode extraFlags clean_lut c_str output output size lut free rescaledLUT free ImageData lut ReadLUTFile lutfile QTrkComputedConfig settings settings width settings height settings Update ImageData img ImageData::alloc settings width settings height CPUTracker trk settings width settings height NormalizeZLUT lut data lut h lut w trk SetRadialZLUT lut data lut h lut w settings qi_maxradius prof ALLOCA_ARRAY lut w N std::vector&lt; vector2f&gt; results N i i N i vector3f pos settings width settings height i N lut h GenerateImageFromLUT img lut settings qi_maxradius pos InDebugMode i WriteJPEGFile SPrintf name c_str img trk SetImageFloat img data z trk ComputeZ pos xy settings zlut_angularsteps results i x pos z results i y z pos z WriteImageAsCSV SPrintf name c_str results N lut free img free CPUTracker trk d w d h trk SetImageFloat d data vector2f com trk ComputeMeanAndCOM bhit vector2f qipos trk ComputeQI com ANGSTEPF bhit radialsteps radprof radialsteps trk ComputeRadialProfile radprof radialsteps qipos WriteImageAsCSV file radprof radialsteps</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">SharedTests.h</field>
    <field name="url">_shared_tests_8h.html</field>
    <field name="keywords">SharedTests.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResampleLUT</field>
    <field name="args">(T *qtrk, ImageData *lut, int zplanes, ImageData *newlut, const char *jpgfile=0, uint buildLUTFlags=0)</field>
    <field name="url">_shared_tests_8h.html#a6a1246e8a5604b97c4f6dff6d3790272</field>
    <field name="keywords">ResampleLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FetchResults</field>
    <field name="args">(QueuedTracker *trk)</field>
    <field name="url">_shared_tests_8h.html#a309eb8d8c5b82f6f2e05b8a9e7594a74</field>
    <field name="keywords">FetchResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RandomFill</field>
    <field name="args">(float *d, int size, float mean, float std_deviation)</field>
    <field name="url">_shared_tests_8h.html#a25253507e729e3d5e129f391bef54503</field>
    <field name="keywords">RandomFill</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestCMOSNoiseInfluence</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">_shared_tests_8h.html#a1521f978126f3f0adef9b9d5e662995b</field>
    <field name="keywords">TestCMOSNoiseInfluence</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EnableGainCorrection</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">_shared_tests_8h.html#a9049c2824c7559420efb9dba4f84ac8c</field>
    <field name="keywords">EnableGainCorrection</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Gauss2DTest</field>
    <field name="args">(int NumImages=10, int JobsPerImg=1000, bool useGC=false)</field>
    <field name="url">_shared_tests_8h.html#ae7f082a0d0c93f799afe341833a4cffd</field>
    <field name="keywords">Gauss2DTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WaitForFinish</field>
    <field name="args">(QueuedTracker *qtrk, int N)</field>
    <field name="url">_shared_tests_8h.html#ad10b5a63fc1239e5638eae0f0ea30f84</field>
    <field name="keywords">WaitForFinish</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MeanStDevError</field>
    <field name="args">(const std::vector&lt; vector3f &gt; &amp;truepos, const std::vector&lt; vector3f &gt; &amp;v, vector3f &amp;meanErr, vector3f &amp;stdev)</field>
    <field name="url">_shared_tests_8h.html#a771630e2d9a64612a46d3ae9722174de</field>
    <field name="keywords">MeanStDevError</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RunTracker</field>
    <field name="args">(const char *lutfile, QTrkSettings *cfg, bool useGC, const char *name, LocMode_t locMode, int N=2000, float noiseFactor=28, float zpos=10, ImageData *pRescaledLUT=0, vector3f samplePosRange=vector3f(1, 1, 1))</field>
    <field name="url">_shared_tests_8h.html#a4aa5a3501eb8dd9b8e27b64de19f8410</field>
    <field name="keywords">RunTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeLUT</field>
    <field name="args">(ImageData &amp;lut, ImageData &amp;resized, QTrkSettings *cfg)</field>
    <field name="url">_shared_tests_8h.html#ad63d597ef801d55e6a64a53109695f4e</field>
    <field name="keywords">ResizeLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">logspace</field>
    <field name="args">(T a, T b, int N)</field>
    <field name="url">_shared_tests_8h.html#a28483c8b4bbb78625f74b9a8974e96e6</field>
    <field name="keywords">logspace</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">linspace</field>
    <field name="args">(T a, T b, int N)</field>
    <field name="url">_shared_tests_8h.html#adf5d79804192aad8817712eee6474e34</field>
    <field name="keywords">linspace</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SpeedAccTest</field>
    <field name="args">(ImageData &amp;lut, QTrkSettings *cfg, int N, vector3f centerpos, vector3f range, const char *name, int MaxPixelValue, int extraFlags=0, int buildLUTFlags=0)</field>
    <field name="url">_shared_tests_8h.html#aa3078cf886076ac05fe292ddef20e22e</field>
    <field name="keywords">SpeedAccTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">testutils.cpp</field>
    <field name="url">testutils_8cpp.html</field>
    <field name="keywords">testutils.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">distance</field>
    <field name="args">(vector2f a, vector2f b)</field>
    <field name="url">testutils_8cpp.html#ab217842a9cc002cd973da58b5c544f80</field>
    <field name="keywords">distance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DirExists</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8cpp.html#ae0227d822e77bc01e8d7c75cda38426a</field>
    <field name="keywords">DirExists</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NumFilesInDir</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8cpp.html#ab7790d00c6ca2c2de517aa3b6ce68a30</field>
    <field name="keywords">NumFilesInDir</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NumJpgInDir</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8cpp.html#aada7cca60290a9533e8f1ff0eb19516e</field>
    <field name="keywords">NumJpgInDir</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CropImage</field>
    <field name="args">(ImageData img, int x, int y, int w, int h)</field>
    <field name="url">testutils_8cpp.html#a29b1737f82e8b172b32a0133894fb295</field>
    <field name="keywords">CropImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeImage</field>
    <field name="args">(ImageData img, int factor)</field>
    <field name="url">testutils_8cpp.html#ace124d89c96301cd8572308f7d06e6ca</field>
    <field name="keywords">ResizeImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddImages</field>
    <field name="args">(ImageData img1, ImageData img2, vector2f displacement)</field>
    <field name="url">testutils_8cpp.html#a2058e40586f779f005e0fa4aed649474</field>
    <field name="keywords">AddImages</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GaussMask</field>
    <field name="args">(ImageData img, float sigma)</field>
    <field name="url">testutils_8cpp.html#ad0a44223c2a1e5819f756e964b28e5fb</field>
    <field name="keywords">GaussMask</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SkewImage</field>
    <field name="args">(ImageData img, float fact)</field>
    <field name="url">testutils_8cpp.html#a10722eb0046e4455a5b55741489d9f4e</field>
    <field name="keywords">SkewImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetOuterEdges</field>
    <field name="args">(float *out, int size, ImageData img)</field>
    <field name="url">testutils_8cpp.html#af1e99d7fbfc5a0378693ce7298b0146b</field>
    <field name="keywords">GetOuterEdges</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundMedian</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8cpp.html#ad224a122bf384101f6263659d0e4d3e6</field>
    <field name="keywords">BackgroundMedian</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundStdDev</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8cpp.html#a3e118846f856e59e1219c45f087857e7</field>
    <field name="keywords">BackgroundStdDev</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundRMS</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8cpp.html#a5916626e8879283cb7c7698e392f03a7</field>
    <field name="keywords">BackgroundRMS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">testutils.cpp</field>
    <field name="url">testutils_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">ImageData addedImg ImageData::alloc img1 w img1 h x_i x_i img1 w x_i y_i y_i img2 h y_i x_i displacement x x_i displacement x img1 w y_i displacement y y_i displacement y img1 h addedImg at x_i y_i img1 at x_i y_i img2 at x_i displacement x y_i displacement y addedImg at x_i y_i img1 at x_i y_i addedImg size img w img h outeredge size GetOuterEdges outeredge size img std::sort outeredge outeredge size median size median outeredge int size outeredge int size median outeredge size outeredge median size img w img h outeredge size GetOuterEdges outeredge size img sqsum f ii ii size ii sqsum outeredge ii outeredge ii outeredge sqrt size sqsum size img w img h outeredge size GetOuterEdges outeredge size img stddev ComputeStdDev outeredge size outeredge stddev ImageData croppedImg ImageData::alloc w h x y &lt; 0 || x + w &gt; img w y h img h img x_i x x_i x w x_i y_i y y_i y h y_i croppedImg at x_i x y_i y img at x_i y_i croppedImg DWORD ftyp GetFileAttributesA dirName_in c_str ftyp INVALID_FILE_ATTRIBUTES ftyp FILE_ATTRIBUTE_DIRECTORY distance a x b x a y b y ImageData gaussImg ImageData::alloc img w img h vector2f centre vector2f img w img h x_i x_i img w x_i y_i y_i img h y_i gaussfact expf x_i centre x x_i centre x sigma sigma y_i centre y y_i centre y sigma sigma gaussImg at x_i y_i img at x_i y_i gaussfact gaussImg x y ii ii size ii ii img w x ii y ii img w img h x img w y ii img w ii img w img h y img h x ii img h img w x y ii img h img w out ii img at x y WIN32_FIND_DATA FindFileData HANDLE hFind std::string dirName dirName_in hFind FindFirstFile dirName c_str FindFileData hFind INVALID_HANDLE_VALUE printf GetLastError out FindNextFile hFind FindFileData out out WIN32_FIND_DATA FindFileData HANDLE hFind std::string dirName dirName_in hFind FindFirstFile dirName c_str FindFileData hFind INVALID_HANDLE_VALUE printf GetLastError out FindNextFile hFind FindFileData std::string name FindFileData cFileName name find name npos out out ImageData resizedImg ImageData::alloc img w factor img h factor x_i x_i img w x_i y_i y_i img h y_i x_fact x_fact factor x_fact y_fact y_fact factor y_fact resizedImg at x_i factor x_fact y_i factor y_fact img at x_i y_i resizedImg ImageData skewImg ImageData::alloc img w img h vector2f centre vector2f img w img h median BackgroundMedian img stddev BackgroundStdDev img maxskew median stddev x_i x_i img w x_i y_i y_i img h y_i diagonalOffset y_i x_i img h img w skew fact float diagonalOffset img h maxskew skewImg at x_i y_i img at x_i y_i skew skewImg ImageData addedImg ImageData::alloc img1 w img1 h x_i x_i img1 w x_i y_i y_i img2 h y_i x_i displacement x x_i displacement x img1 w y_i displacement y y_i displacement y img1 h addedImg at x_i y_i img1 at x_i y_i img2 at x_i displacement x y_i displacement y addedImg at x_i y_i img1 at x_i y_i addedImg size img w img h outeredge size GetOuterEdges outeredge size img std::sort outeredge outeredge size median size median outeredge int size outeredge int size median outeredge size outeredge median size img w img h outeredge size GetOuterEdges outeredge size img sqsum f ii ii size ii sqsum outeredge ii outeredge ii outeredge sqrt size sqsum size img w img h outeredge size GetOuterEdges outeredge size img stddev ComputeStdDev outeredge size outeredge stddev ImageData croppedImg ImageData::alloc w h x y &lt; 0 || x + w &gt; img w y h img h img x_i x x_i x w x_i y_i y y_i y h y_i croppedImg at x_i x y_i y img at x_i y_i croppedImg DWORD ftyp GetFileAttributesA dirName_in c_str ftyp INVALID_FILE_ATTRIBUTES ftyp FILE_ATTRIBUTE_DIRECTORY distance a x b x a y b y ImageData gaussImg ImageData::alloc img w img h vector2f centre vector2f img w img h x_i x_i img w x_i y_i y_i img h y_i gaussfact expf x_i centre x x_i centre x sigma sigma y_i centre y y_i centre y sigma sigma gaussImg at x_i y_i img at x_i y_i gaussfact gaussImg x y ii ii size ii ii img w x ii y ii img w img h x img w y ii img w ii img w img h y img h x ii img h img w x y ii img h img w out ii img at x y WIN32_FIND_DATA FindFileData HANDLE hFind std::string dirName dirName_in hFind FindFirstFile dirName c_str FindFileData hFind INVALID_HANDLE_VALUE printf GetLastError out FindNextFile hFind FindFileData out out WIN32_FIND_DATA FindFileData HANDLE hFind std::string dirName dirName_in hFind FindFirstFile dirName c_str FindFileData hFind INVALID_HANDLE_VALUE printf GetLastError out FindNextFile hFind FindFileData std::string name FindFileData cFileName name find name npos out out ImageData resizedImg ImageData::alloc img w factor img h factor x_i x_i img w x_i y_i y_i img h y_i x_fact x_fact factor x_fact y_fact y_fact factor y_fact resizedImg at x_i factor x_fact y_i factor y_fact img at x_i y_i resizedImg ImageData skewImg ImageData::alloc img w img h vector2f centre vector2f img w img h median BackgroundMedian img stddev BackgroundStdDev img maxskew median stddev x_i x_i img w x_i y_i y_i img h y_i diagonalOffset y_i x_i img h img w skew fact float diagonalOffset img h maxskew skewImg at x_i y_i img at x_i y_i skew skewImg init mode modes File outputFile NULL fclose outputFile modes Console mode Console modes File mode Files modes Images mode Images outputFile NULL modes Console modes File modes Console printf_s modes File modes Images date GetFormattedTimeString date folder std::string date CreateDirectory LPCTSTR folder c_str NULL printf_s modes File outputFile fclose outputFile std::string outfile folder filename fopen outfile c_str std::cout filename std::cin filename outfile folder filename outputFile fopen outfile c_str mode outputFile std::cout outfile std::cout outfile std::cin outfile outputFile fopen outfile c_str mode modes Images std::string file folder filename FloatToJPEGFile file c_str img data img w img h modes Console ConsoleOnly std::cout out std::endl modes File ConsoleOnly outputFile newFile fprintf_s outputFile out c_str</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">testutils.h</field>
    <field name="url">testutils_8h.html</field>
    <field name="keywords">testutils.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">OutputModes</field>
    <field name="url">testutils_8h.html#aea9b255b3e6f4b82762a3c35b821b2b1</field>
    <field name="keywords">OutputModes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Console</field>
    <field name="url">testutils_8h.html#aea9b255b3e6f4b82762a3c35b821b2b1a75f70d9a6514005c3e93286a7fd5cb06</field>
    <field name="keywords">Console</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Files</field>
    <field name="url">testutils_8h.html#aea9b255b3e6f4b82762a3c35b821b2b1a49ce9e101fea37ab1954e5b3b9975c09</field>
    <field name="keywords">Files</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Images</field>
    <field name="url">testutils_8h.html#aea9b255b3e6f4b82762a3c35b821b2b1a1f15ca9cb9525af532f13906e1d05651</field>
    <field name="keywords">Images</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sq</field>
    <field name="args">(T x)</field>
    <field name="url">testutils_8h.html#a5fcfabb016a2ac0228d4eae15ea7beb6</field>
    <field name="keywords">sq</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">distance</field>
    <field name="args">(T x, T y)</field>
    <field name="url">testutils_8h.html#adeda4df648759aba098bc45398ffad63</field>
    <field name="keywords">distance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DirExists</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8h.html#ae0227d822e77bc01e8d7c75cda38426a</field>
    <field name="keywords">DirExists</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NumFilesInDir</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8h.html#ab7790d00c6ca2c2de517aa3b6ce68a30</field>
    <field name="keywords">NumFilesInDir</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NumJpgInDir</field>
    <field name="args">(const std::string &amp;dirName_in)</field>
    <field name="url">testutils_8h.html#aada7cca60290a9533e8f1ff0eb19516e</field>
    <field name="keywords">NumJpgInDir</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">distance</field>
    <field name="args">(vector2f a, vector2f b)</field>
    <field name="url">testutils_8h.html#ab217842a9cc002cd973da58b5c544f80</field>
    <field name="keywords">distance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CropImage</field>
    <field name="args">(ImageData img, int x, int y, int w, int h)</field>
    <field name="url">testutils_8h.html#a29b1737f82e8b172b32a0133894fb295</field>
    <field name="keywords">CropImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeImage</field>
    <field name="args">(ImageData img, int factor)</field>
    <field name="url">testutils_8h.html#ace124d89c96301cd8572308f7d06e6ca</field>
    <field name="keywords">ResizeImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddImages</field>
    <field name="args">(ImageData img1, ImageData img2, vector2f displacement)</field>
    <field name="url">testutils_8h.html#a2058e40586f779f005e0fa4aed649474</field>
    <field name="keywords">AddImages</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GaussMask</field>
    <field name="args">(ImageData img, float sigma)</field>
    <field name="url">testutils_8h.html#ad0a44223c2a1e5819f756e964b28e5fb</field>
    <field name="keywords">GaussMask</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SkewImage</field>
    <field name="args">(ImageData img, float fact)</field>
    <field name="url">testutils_8h.html#a10722eb0046e4455a5b55741489d9f4e</field>
    <field name="keywords">SkewImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetOuterEdges</field>
    <field name="args">(float *out, int size, ImageData img)</field>
    <field name="url">testutils_8h.html#af1e99d7fbfc5a0378693ce7298b0146b</field>
    <field name="keywords">GetOuterEdges</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundMedian</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8h.html#ad224a122bf384101f6263659d0e4d3e6</field>
    <field name="keywords">BackgroundMedian</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundStdDev</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8h.html#a3e118846f856e59e1219c45f087857e7</field>
    <field name="keywords">BackgroundStdDev</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BackgroundRMS</field>
    <field name="args">(ImageData img)</field>
    <field name="url">testutils_8h.html#a5916626e8879283cb7c7698e392f03a7</field>
    <field name="keywords">BackgroundRMS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">BeadFinder.cpp</field>
    <field name="url">_bead_finder_8cpp.html</field>
    <field name="keywords">BeadFinder.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NextPowerOf2</field>
    <field name="args">(int x)</field>
    <field name="url">_bead_finder_8cpp.html#aad803495a7d339a6441f165b24443421</field>
    <field name="keywords">NextPowerOf2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">abs</field>
    <field name="args">(std::complex&lt; float &gt; x)</field>
    <field name="url">_bead_finder_8cpp.html#aade100f3798a339fdf25b22a55f85bbc</field>
    <field name="keywords">abs</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComplexToJPEGFile</field>
    <field name="args">(const char *name, std::complex&lt; float &gt; *d, int w, int h, bool logMode=false)</field>
    <field name="url">_bead_finder_8cpp.html#a2dd31bc0744db1fbc8c6e24d2ca7f3fc</field>
    <field name="keywords">ComplexToJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2D</field>
    <field name="args">(std::complex&lt; float &gt; *d, int w, int h, bool inverse)</field>
    <field name="url">_bead_finder_8cpp.html#aecf220354d51380bea7873a57bc29862</field>
    <field name="keywords">FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SearchArea</field>
    <field name="args">(std::complex&lt; float &gt; *cimg, int w, int h, int px, int py, int dist)</field>
    <field name="url">_bead_finder_8cpp.html#a1d0fc598b31063d9ebc4199a1d6c8649</field>
    <field name="keywords">SearchArea</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RecenterAndFilter</field>
    <field name="args">(ImageData *img, std::vector&lt; Position &gt; &amp;pts, Config *cfg)</field>
    <field name="url">_bead_finder_8cpp.html#adfad9807250c401f6ec50af3caafeabd</field>
    <field name="keywords">RecenterAndFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BeadFinder.cpp</field>
    <field name="url">_bead_finder_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">sqrtf x imag x imag x real x real minV abs d maxV minV i i w h i v abs d i minV std::min minV v maxV std::max maxV v maxV minV dbgprintf name maxV minV uint8_t img uint8_t w h i i w h i v abs d i img i uint8_t f logMode v minV maxV minV WriteJPEGFile img w h name img kissfft&lt;float&gt; xfft w inverse kissfft&lt;float&gt; yfft h inverse fx y std::complex&lt;float&gt; tmp ALLOCA_ARRAY std::complex&lt;float&gt; std::max w h xfft transform d w y tmp x x w x d w y x tmp x ThreadPool&lt;int, std::function&lt; void (int index) &gt; xfftPool fx y y h y xfftPool AddWork y xfftPool WaitUntilDone fy x std::complex&lt;float&gt; src ALLOCA_ARRAY std::complex&lt;float&gt; h std::complex&lt;float&gt; tmp ALLOCA_ARRAY std::complex&lt;float&gt; std::max w h y y h y src y d y w x yfft transform src tmp y y h y d w y x tmp y ThreadPool&lt;int, std::function&lt;void (int x) &gt; yfftPool fy x x w x yfftPool AddWork x yfftPool WaitUntilDone y y x y y roi cfg roi std::list&lt;Position&gt; newlist i i pts size i bp pts i bp x bp y bp x img w roi bp y img h roi sum f y y roi y x x roi x v img at x bp x y bp y sum v sumX sumY mean sum roi roi sum y y roi y x x roi x v img at x bp x y bp y mean v v v sum v sumX v x sumY v y sum f bp x sumX sum roi bp y sumY sum roi bp x bp y bp x img w roi bp y img h roi m cfg MinPixelDistance accepted c newlist begin c newlist end c dx c x bp x dy c y bp y dx dx dy dy m m newlist erase c accepted accepted newlist push_back bp pts clear pts insert pts begin newlist begin newlist end Position best px py bestValue cimg py w px real minY std::max py dist minX std::max px dist maxX std::min w px dist maxY std::min h py dist dist2 dist dist y minY y maxY y x minX x maxX x dx x px dy y py dx dx dy dy dist2 v cimg y w x real v bestValue best Position x y bestValue v cimg y w x std::complex&lt;float&gt; best std::complex&lt;float&gt; pixelc_t w NextPowerOf2 img w h NextPowerOf2 img h mean img mean pixelc_t cimg pixelc_t w h std::fill cimg cimg w h pixelc_t y y img h y x x img w x cimg y w x img data y img w x mean FFT2D cimg w h pixelc_t smpimg pixelc_t w h std::fill smpimg smpimg w h pixelc_t smpmean ImageData sample cfg roi cfg roi mean y y cfg roi y x x cfg roi x smpimg y cfg roi h w x cfg roi w sample cfg roi y x smpmean FFT2D smpimg w h i i w h i cimg i smpimg i FFT2D cimg w h maxVal f i i w h i maxVal std::max maxVal cimg i real std::vector&lt;Position&gt; pts y y img h y x x img w x cimg y w x real maxVal cfg similarity pts push_back SearchArea cimg w h x y cfg MinPixelDistance smpimg cimg RecenterAndFilter img pts cfg pts ImageData fimg ImageData::alloc w h y y h y x x w x fimg at x y img y pitch x fsmp cfg roi cfg roi y y cfg roi y x x cfg roi x fsmp y cfg roi x fimg y smpCornerY h x smpCornerX std::vector&lt;Position&gt; beads Find fimg fsmp cfg fsmp fimg free beads</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">BeadFinder.h</field>
    <field name="url">_bead_finder_8h.html</field>
    <field name="keywords">BeadFinder.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BeadFinder::Find</field>
    <field name="args">(ImageData *img, float *sample, Config *cfg)</field>
    <field name="url">namespace_bead_finder.html#ab23a6df0dccd8f6af8e78f79d2f05b69</field>
    <field name="keywords">Find BeadFinder::Find BeadFinder Find BeadFinder::Find BeadFinder</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BeadFinder::Find</field>
    <field name="args">(uint8_t *img, int pitch, int w, int h, int smpCornerX, int smpCornerY, Config *cfg)</field>
    <field name="url">namespace_bead_finder.html#abfee549a957611e22b398fdcb1e28178</field>
    <field name="keywords">Find BeadFinder::Find BeadFinder Find BeadFinder::Find BeadFinder</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">BenchmarkLUT.cpp</field>
    <field name="url">_benchmark_l_u_t_8cpp.html</field>
    <field name="keywords">BenchmarkLUT.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">BenchmarkLUT.h</field>
    <field name="url">_benchmark_l_u_t_8h.html</field>
    <field name="keywords">BenchmarkLUT.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cpu_tracker.cpp</field>
    <field name="url">cpu__tracker_8cpp.html</field>
    <field name="keywords">cpu_tracker.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ZLUT_CMPDATA</field>
    <field name="url">cpu__tracker_8cpp.html#ab1092e0ccd55ae591f00b5a2cb11f9c0</field>
    <field name="keywords">ZLUT_CMPDATA</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SFFT_BOTH</field>
    <field name="url">cpu__tracker_8cpp.html#acfebaca1d9d8f48864704773594876b7</field>
    <field name="keywords">SFFT_BOTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MARKPIXEL</field>
    <field name="args">(x, y)</field>
    <field name="url">cpu__tracker_8cpp.html#aa3a2421044dd92edaeb8b590afd92b84</field>
    <field name="keywords">MARKPIXEL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MARKPIXELI</field>
    <field name="args">(x, y)</field>
    <field name="url">cpu__tracker_8cpp.html#a836b0d44a08a0508ab0581612404f960</field>
    <field name="keywords">MARKPIXELI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">round</field>
    <field name="args">(scalar_t f)</field>
    <field name="url">cpu__tracker_8cpp.html#adc2065673036c4907eaf912bbbc4d0bb</field>
    <field name="keywords">round</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">conjugate</field>
    <field name="args">(const T &amp;v)</field>
    <field name="url">cpu__tracker_8cpp.html#acbdcd9cf414b5dca4a7c2b9cae44832c</field>
    <field name="keywords">conjugate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">clamp</field>
    <field name="args">(int v, int a, int b)</field>
    <field name="url">cpu__tracker_8cpp.html#a9617db7688b5219c285f2cb31165be18</field>
    <field name="keywords">clamp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sum_diff</field>
    <field name="args">(T *begin, T *end, T *other)</field>
    <field name="url">cpu__tracker_8cpp.html#a36e8f56bddc577021ffa6f199519652a</field>
    <field name="keywords">sum_diff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">XCorScale</field>
    <field name="url">cpu__tracker_8cpp.html#a77e160342e10850dcb9757230b309c24</field>
    <field name="keywords">XCorScale</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIWeights</field>
    <field name="args">[QI_LSQFIT_NWEIGHTS]</field>
    <field name="url">cpu__tracker_8cpp.html#a4d62cbde784e969529c728aed83f85e3</field>
    <field name="keywords">QIWeights</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTWeights</field>
    <field name="args">[ZLUT_LSQFIT_NWEIGHTS]</field>
    <field name="url">cpu__tracker_8cpp.html#ac2398d4c9ef8fdece119ed392705f64e</field>
    <field name="keywords">ZLUTWeights</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTWeights_d</field>
    <field name="args">[ZLUT_LSQFIT_NWEIGHTS]</field>
    <field name="url">cpu__tracker_8cpp.html#a79c9b3cd0d6bf4409d49ad9b784f7f87</field>
    <field name="keywords">ZLUTWeights_d</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpu_tracker.cpp</field>
    <field name="url">cpu__tracker_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">std::max a std::min b v T v real v imag f f sd T i begin i end i other T d i other sd abs d real abs d imag sd width w height h trackerID xcorBuffer mean f srcImage w h debugImage w h std::fill srcImage srcImage w h f std::fill debugImage debugImage w h f zluts zlut_planes zlut_res zlut_count zlut_minradius zlut_maxradius f xcorw xcorwindow qa_fft_forward qa_fft_backward qi_radialsteps qi_fft_forward qi_fft_backward fft2d testRun testMode srcImage debugImage zluts zlut_memoryOwner zluts xcorBuffer xcorBuffer qi_fft_forward qi_fft_forward qi_fft_backward qa_fft_backward qa_fft_backward qa_fft_forward fft2d fft2d qi_fft_forward qi_radialsteps nr qi_fft_forward qi_fft_forward qi_fft_backward qi_radialsteps nr qi_fft_forward kissfft&lt;scalar_t&gt; nr qi_fft_backward kissfft&lt;scalar_t&gt; nr offset gain i i width height i srcImage i srcImage i offset i offsetFactor gain offset i i width height i srcImage i srcImage i gain i gainFactor gain offset i i width height i srcImage i srcImage i offset i offsetFactor gain i gainFactor zlut_norm ALLOCA_ARRAY zlut_res prof_norm ALLOCA_ARRAY zlut_res r r zlut_res r prof_norm r rprof r zlut_radialweights r NormalizeRadialProfile prof_norm zlut_res k k zlut_planes k diffsum f zlut_radialweights empty r r zlut_res r zlut_norm r zlut_sel k zlut_res r r r zlut_res r zlut_norm r zlut_sel k zlut_res r zlut_radialweights r NormalizeRadialProfile zlut_norm zlut_res r r zlut_res r d prof_norm r zlut_norm r d d d diffsum d rprof_diff k diffsum k k zlut_planes k diffsum f r r zlut_res r d profile r zlut_sel k zlut_res r zlut_radialweights empty d zlut_radialweights r d d d diffsum d errorcurve_dest k diffsum flag f ii ii zlut_res ii flag std::abs prof1 ii prof2 ii flag zlut_res zlut_sel GetRadialZLUT zlutIndex r r zlut_res r z profile_dest r z zlut_planes profile_dest r Lerp zlut_sel z zlut_res r zlut_sel z zlut_res r z z profile_dest r zlut_sel zlut_planes zlut_res r NormalizeRadialProfile profile_dest zlut_res center x radius width center x radius center y radius height center y radius vector2f pos initial I0 mean f width height bg mean f _1oSq2Sigma f sqrtf sigma _1oSq2PiSigma f sqrtf f sigma _1oSq2PiSigma3 f sqrtf f sigma sigma sigma i i iterations i dL_dx dL_dy dL_dI0 dL_dIbg dL2_dx dL2_dy dL2_dI0 dL2_dIbg mu_sum y y height y x x width x Xexp0 x pos x f _1oSq2Sigma Yexp0 y pos y f _1oSq2Sigma Xexp1 x pos x f _1oSq2Sigma Yexp1 y pos y f _1oSq2Sigma DeltaX f erf Xexp0 f erf Xexp1 DeltaY f erf Yexp0 f erf Yexp1 mu bg I0 DeltaX DeltaY dmu_dx I0 _1oSq2PiSigma expf Xexp1 Xexp1 expf Xexp0 Xexp0 DeltaY dmu_dy I0 _1oSq2PiSigma expf Yexp1 Yexp1 expf Yexp0 Yexp0 DeltaX dmu_dI0 DeltaX DeltaY dmu_dIbg smp GetPixel x y f smp mu dL_dx dmu_dx f dL_dy dmu_dy f dL_dI0 dmu_dI0 f dL_dIbg dmu_dIbg f d2mu_dx I0 _1oSq2PiSigma3 x pos x f expf Xexp1 Xexp1 x pos x f expf Xexp0 Xexp0 DeltaY d2mu_dy I0 _1oSq2PiSigma3 y pos y f expf Yexp1 Yexp1 y pos y f expf Yexp0 Yexp0 DeltaX dL2_dx d2mu_dx f dmu_dx dmu_dx smp mu mu dL2_dy d2mu_dy f dmu_dy dmu_dy smp mu mu dL2_dI0 dmu_dI0 dmu_dI0 smp mu mu dL2_dIbg smp mu mu mu_sum mu mean_mu mu_sum width height pos x dL_dx dL2_dx pos y dL_dy dL2_dy I0 dL_dI0 dL2_dI0 bg dL_dIbg dL2_dIbg Gauss2DResult r r pos pos r I0 I0 r bg bg r vector2f radialDirs vector2f ALLOCA vector2f angularSteps j j angularSteps j ang f j float angularSteps radialDirs j vector2f cosf ang sinf ang rline ALLOCA radialSteps dstAngProf dstAngProf ALLOCA radialSteps rstep maxRadius minRadius radialSteps a a angularSteps a r minRadius i i radialSteps i x center x radialDirs a x r y center y radialDirs a y r rline i Interpolate srcImage width height x y r rstep dstAngProf a ComputeBgCorrectedCOM1D rline radialSteps f stdev ComputeStdDev dstAngProf angularSteps stdev sum sum2 momentX momentY y y height y x x width x v GetPixel x y sum v sum2 v v invN f width height mean sum invN stdev sqrtf sum2 invN mean mean sum f x x width x y y height y v GetPixel x y v std::max f fabs v mean bgcorrection stdev sum v momentX x double v momentY y double v vector2f com com x float momentX sum com y float momentY sum com nr radialSteps std::copy srcImage srcImage width height debugImage maxImageValue std::max_element srcImage srcImage width height angularStepsPerQ quadrantDirs size quadrantDirs resize angularStepsPerQ j j angularStepsPerQ j ang f j f angularStepsPerQ quadrantDirs j vector2f cosf ang sinf ang AllocateQIFFTs radialSteps scalar_t buf scalar_t ALLOCA scalar_t nr scalar_t q0 buf q1 buf nr q2 buf nr q3 buf nr complex_t concat0 complex_t ALLOCA complex_t nr complex_t concat1 concat0 nr vector2f center initial pixelsPerProfLen maxRadius minRadius radialSteps boundaryHit angsteps angularStepsPerQ powf angStepIterationFactor iterations k k iterations k boundaryHit CheckBoundaries center maxRadius q q q ComputeQuadrantProfile buf q nr nr angsteps q minRadius maxRadius center radialWeights cmp_cpu_qi_prof assign buf buf nr r r nr r concat0 nr r q1 r q2 r concat1 r q0 r q3 r scalar_t offsetX QI_ComputeOffset concat0 nr r r nr r concat1 r q0 r q1 r concat0 nr r q2 r q3 r scalar_t offsetY QI_ComputeOffset concat0 nr std::copy concat0 concat0 nr tmp begin nr WriteComplexImageAsCSV tmp nr dbgprintf k offsetX offsetY center x offsetX pixelsPerProfLen center y offsetY pixelsPerProfLen angsteps angStepIterationFactor center qmat mx qmat quadrant my qmat quadrant angularSteps MIN_RADPROFILE_SMP_COUNT angularSteps MIN_RADPROFILE_SMP_COUNT i i radialSteps i dst i f scalar_t total f scalar_t rstep maxRadius minRadius radialSteps i i radialSteps i scalar_t sum f scalar_t r minRadius rstep i nPixels scalar_t angstepf scalar_t quadrantDirs size angularSteps a a angularSteps a i int angstepf a scalar_t x center x mx quadrantDirs i x r scalar_t y center y my quadrantDirs i y r outside scalar_t v Interpolate srcImage width height x y outside outside sum v nPixels MARKPIXELI x y dst i nPixels MIN_RADPROFILE_SMP_COUNT sum nPixels mean radialWeights dst i radialWeights i total dst i boundaryHit CheckBoundaries center maxradius pBoundaryHit pBoundaryHit boundaryHit ImageData imgData srcImage width height crp ComputeCRP dst radialSteps angularSteps minradius maxradius center imgData mean dst radialSteps angularSteps minradius maxradius center imgData mean normalize vector2f pos initial xcorBuffer xcorBuffer XCor1DBuffer xcorw xcorw profileWidth profileWidth xcorw std::copy srcImage srcImage width height debugImage maxImageValue std::max_element srcImage srcImage width height xcorw width xcorw height boundaryHit initial complex_t prof complex_t ALLOCA complex_t xcorw complex_t prof_rev complex_t ALLOCA complex_t xcorw scalar_t prof_autocor scalar_t ALLOCA scalar_t xcorw boundaryHit k k iterations k boundaryHit CheckBoundaries pos XCorScale xcorw xmin pos x XCorScale xcorw ymin pos y XCorScale xcorw x x xcorw x scalar_t s f n y y profileWidth y scalar_t xp x XCorScale xmin scalar_t yp pos y XCorScale y profileWidth outside s Interpolate srcImage width height xp yp outside n outside MARKPIXELI xp yp n s n s prof x s prof_rev xcorw x s xcorBuffer XCorFFTHelper prof prof_rev prof_autocor scalar_t offsetX ComputeMaxInterp&lt;scalar_t,QI_LSQFIT_NWEIGHTS&gt;::Compute prof_autocor xcorw QIWeights scalar_t xcorw y y xcorw y scalar_t s f n x x profileWidth x scalar_t xp pos x XCorScale x profileWidth scalar_t yp y XCorScale ymin outside s Interpolate srcImage width height xp yp outside n outside MARKPIXELI xp yp n s n s prof y s prof_rev xcorw y s xcorBuffer XCorFFTHelper prof prof_rev prof_autocor scalar_t offsetY ComputeMaxInterp&lt;scalar_t, QI_LSQFIT_NWEIGHTS&gt;::Compute prof_autocor xcorw QIWeights scalar_t xcorw pos x offsetX XCorScale f pos y offsetY XCorScale f pos FourierTransform2D ImageData img srcImage width height dst radialSteps angularSteps width f vector2f width height img i i radialSteps i dst i logf dst i fft2d fft2d FFT2D width height fft2d Apply srcImage boundaryHit center x radius width center x radius center y radius height center y radius center x radius f center x radius center y radius f center y radius center x radius width center x width radius center y radius height center y height radius boundaryHit freeMem std::string outputName zOffset testRun outputName SPrintf GetCurrentOutputPath c_str zlutIndex frameNum FILE file fopen SPrintf outputName c_str c_str fclose file printf SaveImage SPrintf outputName c_str c_str WriteArrayAsCSVRow SPrintf outputName c_str c_str rprof zlut_res fitcurve fitcurve zlut_planes freeMem range f numImgInStack umPerImg range numImgInStack startFrame usedFrames numImgInStack startFrame rangeInLUT usedFrames umPerImg umPerPlane rangeInLUT zlut_planes error f zOffset error umPerPlane zluts f rprof_diff ALLOCA_ARRAY zlut_planes zlut_sel GetRadialZLUT zlutIndex testRun FloatToJPEGFile SPrintf outputName c_str c_str zlut_sel zlut_res zlut_planes CalculateErrorCurve rprof_diff rprof zlut_sel cmpProf std::copy rprof_diff rprof_diff zlut_planes cmpProf maxPosComputeMode LUTProfMaxQuadraticFit maxPos maxPos std::max_element rprof_diff rprof_diff zlut_planes rprof_diff fitcurve LsqSqQuadFit&lt;double&gt; fit z ComputeMaxInterp&lt;double, ZLUT_LSQFIT_NWEIGHTS&gt;::Compute rprof_diff zlut_planes ZLUTWeights_d fit iMax std::max_element rprof_diff rprof_diff zlut_planes rprof_diff i i zlut_planes i fitcurve i fit compute i iMax testRun z zOffset int_prof ALLOCA_ARRAY zlut_res CalculateInterpolatedZLUTProfile int_prof z zlutIndex plane_auto_diff ALLOCA_ARRAY zlut_planes CalculateErrorCurve plane_auto_diff int_prof zlut_sel WriteArrayAsCSVRow SPrintf outputName c_str c_str int_prof zlut_res FILE f fopen SPrintf outputName c_str c_str fprintf_s f z i i zlut_planes i fprintf_s f rprof_diff i fitcurve i plane_auto_diff i fit a fit vertexForm fclose f freeMem fitcurve z ComputeMaxInterp&lt;double, ZLUT_LSQFIT_NWEIGHTS&gt;::Compute rprof_diff zlut_planes ZLUTWeights_d maxPosComputeMode LUTProfMaxSimpleInterp assert ComputeSplineFitMaxPos rprof_diff zlut_planes zluts f rprof_diff ALLOCA_ARRAY zlut_planes zlut_sel GetRadialZLUT zlutIndex zi int z_estim zi zlut_planes zi zlut_planes z0 zlut_sel zi zlut_res z1 zlut_sel zi zlut_res zlut_weights ALLOCA_ARRAY zlut_res i i zlut_res i zlut_weights i fabs z1 i z0 i zlut_minradius zlut_maxradius zlut_minradius i zlut_res for k k zlut_planes k diffsum f r r zlut_res r d double rprof r zlut_sel k zlut_res r d d d d zlut_weights r diffsum d rprof_diff k diffsum ComputeMaxInterp&lt;double, ZLUT_LSQFIT_NWEIGHTS&gt;::Compute rprof_diff zlut_planes ZLUTWeights_d d d srcImage normalize d width height complex_t reverse ALLOCA_ARRAY complex_t nr complex_t fft_out ALLOCA_ARRAY complex_t nr complex_t fft_out2 ALLOCA_ARRAY complex_t nr x x nr x reverse x profile nr x qi_fft_forward transform profile fft_out qi_fft_forward transform reverse fft_out2 x x nr x fft_out x conjugate fft_out2 x qi_fft_backward transform fft_out fft_out2 cmp_cpu_qi_fft_out assign fft_out2 fft_out2 nr scalar_t autoconv ALLOCA_ARRAY scalar_t nr x x nr x autoconv x fft_out2 x nr nr real profileReal ALLOCA_ARRAY nr x x nr x profileReal x profile x real scalar_t maxPos ComputeMaxInterp&lt;scalar_t, QI_LSQFIT_NWEIGHTS&gt;::Compute autoconv nr QIWeights maxPos nr f zlut GetRadialZLUT beadIndex res zlut_res complex_t profile ALLOCA_ARRAY complex_t res complex_t concat0 ALLOCA_ARRAY complex_t res complex_t concat1 concat0 res memset concat0 complex_t res zp0 clamp pos z zlut_planes zp1 clamp pos z zlut_planes zlut0 zlut res zp0 zlut1 zlut res zp1 frac pos z int pos z for r r zlut_res r zlutValue Lerp zlut0 r zlut1 r frac concat0 res r concat1 r zlutValue qa_fft_forward transform concat0 profile scalar_t buf ALLOCA_ARRAY scalar_t res scalar_t q0 buf q1 buf res q2 buf res q3 buf res boundaryHit CheckBoundaries vector2f pos x pos y zlut_maxradius q q q scalar_t quadrantProfile buf q res ComputeQuadrantProfile quadrantProfile res angularStepsPerQuadrant q zlut_minradius zlut_maxradius vector2f pos x pos y NormalizeRadialProfile quadrantProfile res pixelsPerProfLen zlut_maxradius zlut_minradius zlut_res boundaryHit r r res r concat0 res r q1 r q2 r concat1 r q0 r q3 r scalar_t offsetX QuadrantAlign_ComputeOffset concat0 profile res r r res r concat1 r q0 r q1 r concat0 res r q2 r q3 r scalar_t offsetY QuadrantAlign_ComputeOffset concat0 profile res vector3f pos x offsetX pixelsPerProfLen pos y offsetY pixelsPerProfLen pos z complex_t fft_out ALLOCA_ARRAY complex_t nr qa_fft_forward transform profile fft_out x x nr x fft_out x conjugate zlut_prof_fft x qa_fft_backward transform fft_out profile cmp_cpu_qi_fft_out assign fft_out2 fft_out2 nr scalar_t autoconv ALLOCA_ARRAY scalar_t nr x x nr x autoconv x profile x nr nr real scalar_t maxPos ComputeMaxInterp&lt;scalar_t, QI_LSQFIT_NWEIGHTS&gt;::Compute autoconv nr QIWeights maxPos nr f FloatToJPEGFile filename srcImage width height k k width height k srcImage k src k mean f radweights zlut_radialweights resize zlut_res std::copy radweights radweights zlut_res zlut_radialweights begin zlut_radialweights clear zluts zlut_memoryOwner zluts copyMemory zluts planes res numLUTs std::copy data data planes res numLUTs zluts zluts data zlut_memoryOwner copyMemory zlut_planes planes zlut_res res zlut_count numLUTs zlut_minradius minradius zlut_maxradius maxradius zlut_useCorrelation useCorrelation qa_fft_backward qa_fft_backward qa_fft_forward qa_fft_forward kissfft&lt;scalar_t&gt; res qa_fft_backward kissfft&lt;scalar_t&gt; res w xfft nfft h yfft nfft std::complex&lt;float&gt; tmpsrc ALLOCA_ARRAY std::complex&lt;float&gt; h std::complex&lt;float&gt; tmpdst ALLOCA_ARRAY std::complex&lt;float&gt; h y y h y x x w x tmpsrc x d y w x xfft transform tmpsrc cbuf y w x x w x y y h y tmpsrc y cbuf y w x yfft transform tmpsrc tmpdst y y h y cbuf y w x tmpdst y y y h y x x w x dx x w w dy y h h v cbuf x y w d dx dy w v real v real v imag v imag complex_t fft_out complex_t ALLOCA complex_t xcorw complex_t fft_out_rev complex_t ALLOCA complex_t xcorw fft_forward transform prof fft_out fft_forward transform prof_rev fft_out_rev x x xcorw x fft_out x conjugate fft_out_rev x fft_backward transform fft_out fft_out_rev x x xcorw x result x fft_out_rev x xcorw xcorw real</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cpu_tracker.h</field>
    <field name="url">cpu__tracker_8h.html</field>
    <field name="keywords">cpu_tracker.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">pixel_t</field>
    <field name="url">cpu__tracker_8h.html#a2c78c9bbad19d28cffe9d662ce7d1813</field>
    <field name="keywords">pixel_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CreateCPUTrackerInstance</field>
    <field name="args">(int w, int h, int xcorw)</field>
    <field name="url">cpu__tracker_8h.html#a1007e66b8d96ed5bfcdb1e4799f70721</field>
    <field name="keywords">CreateCPUTrackerInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">CubicBSpline.h</field>
    <field name="url">_cubic_b_spline_8h.html</field>
    <field name="keywords">CubicBSpline.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">CUDA_SUPPORTED_FUNC</field>
    <field name="url">_cubic_b_spline_8h.html#a69f41cb6c15f0e34b0889a5f6d5aae32</field>
    <field name="keywords">CUDA_SUPPORTED_FUNC</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeBSplineWeights</field>
    <field name="args">(float w[], float t)</field>
    <field name="url">_cubic_b_spline_8h.html#a9eba800c8695b13f0a31ab6ef429d171</field>
    <field name="keywords">ComputeBSplineWeights</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeBSplineDerivatives</field>
    <field name="args">(float t, T *k, T &amp;deriv, T &amp;deriv2)</field>
    <field name="url">_cubic_b_spline_8h.html#abbb4bba709c4349bbdbf7b3b1e5ed726</field>
    <field name="keywords">ComputeBSplineDerivatives</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeSplineFitMaxPos</field>
    <field name="args">(T *data, int len)</field>
    <field name="url">_cubic_b_spline_8h.html#a0ef36a18640354badceb901eaee34557</field>
    <field name="keywords">ComputeSplineFitMaxPos</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">DebugResultCompare.h</field>
    <field name="url">_debug_result_compare_8h.html</field>
    <field name="keywords">DebugResultCompare.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dllmacros.h</field>
    <field name="url">dllmacros_8h.html</field>
    <field name="keywords">dllmacros.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DLL_CALLCONV</field>
    <field name="url">dllmacros_8h.html#a6596c37c55424b395798708344d63791</field>
    <field name="keywords">DLL_CALLCONV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DLL_EXPORT</field>
    <field name="url">dllmacros_8h.html#a1ca888bd091694c05472e1b91df1a97b</field>
    <field name="keywords">DLL_EXPORT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">CDLL_EXPORT</field>
    <field name="url">dllmacros_8h.html#af97e4004759ff877db017c3d1a855482</field>
    <field name="keywords">CDLL_EXPORT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">fastjpg.cpp</field>
    <field name="url">fastjpg_8cpp.html</field>
    <field name="keywords">fastjpg.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadJPEGFile</field>
    <field name="args">(uchar *srcbuf, int srclen, uchar **data, int *width, int *height)</field>
    <field name="url">fastjpg_8cpp.html#aca9c9daac87f0810622bb7e207e4587f</field>
    <field name="keywords">ReadJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteJPEGFile</field>
    <field name="args">(uchar *data, int w, int h, const char *filename, int quality)</field>
    <field name="url">fastjpg_8cpp.html#a77db3a4044f8f77b5a550b6f05962172</field>
    <field name="keywords">WriteJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FloatToJPEGFile</field>
    <field name="args">(const char *name, const float *d, int w, int h)</field>
    <field name="url">fastjpg_8cpp.html#a197d79f00fb185491c4d109e966ca9ef</field>
    <field name="keywords">FloatToJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fastjpg.cpp</field>
    <field name="url">fastjpg_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">uchar zlut_bytes floatToNormalizedInt d w h uchar WriteJPEGFile zlut_bytes w h name zlut_bytes jpeg_decompress_struct cinfo JSAMPARRAY buffer row_stride my_error_mgr jerr cinfo err jpeg_std_error jerr pub jpeg_create_decompress cinfo j_mem_src cinfo srcbuf srclen jpeg_read_header cinfo TRUE jpeg_start_decompress cinfo row_stride cinfo output_width cinfo output_components buffer cinfo mem alloc_sarray j_common_ptr cinfo JPOOL_IMAGE row_stride width cinfo output_width height cinfo output_height data uchar cinfo output_width cinfo output_height uchar dst data cinfo output_scanline cinfo output_height jpeg_read_scanlines cinfo buffer src buffer cinfo output_components memcpy dst src cinfo output_width uint x x cinfo output_width x dst x src x cinfo output_components dst cinfo output_width jpeg_finish_decompress cinfo jpeg_destroy_decompress cinfo jpeg_compress_struct cinfo jpeg_error_mgr jerr JSAMPROW row_pointer row_stride cinfo err jpeg_std_error jerr jpeg_create_compress cinfo uint len w h uchar memBuf uchar len j_mem_dest cinfo memBuf len cinfo image_width w cinfo image_height h cinfo input_components cinfo in_color_space JCS_GRAYSCALE jpeg_set_defaults cinfo jpeg_set_quality cinfo quality TRUE jpeg_start_compress cinfo TRUE row_stride w cinfo next_scanline cinfo image_height row_pointer data cinfo next_scanline row_stride void jpeg_write_scanlines cinfo row_pointer jpeg_finish_compress cinfo jpeg_destroy_compress cinfo FILE f fopen filename f fwrite memBuf len f fclose f dbgprintf filename memBuf uchar zlut_bytes floatToNormalizedInt d w h uchar WriteJPEGFile zlut_bytes w h name zlut_bytes jpeg_decompress_struct cinfo JSAMPARRAY buffer row_stride my_error_mgr jerr cinfo err jpeg_std_error jerr pub jpeg_create_decompress cinfo j_mem_src cinfo srcbuf srclen jpeg_read_header cinfo TRUE jpeg_start_decompress cinfo row_stride cinfo output_width cinfo output_components buffer cinfo mem alloc_sarray j_common_ptr cinfo JPOOL_IMAGE row_stride width cinfo output_width height cinfo output_height data uchar cinfo output_width cinfo output_height uchar dst data cinfo output_scanline cinfo output_height jpeg_read_scanlines cinfo buffer src buffer cinfo output_components memcpy dst src cinfo output_width uint x x cinfo output_width x dst x src x cinfo output_components dst cinfo output_width jpeg_finish_decompress cinfo jpeg_destroy_decompress cinfo jpeg_compress_struct cinfo jpeg_error_mgr jerr JSAMPROW row_pointer row_stride cinfo err jpeg_std_error jerr jpeg_create_compress cinfo uint len w h uchar memBuf uchar len j_mem_dest cinfo memBuf len cinfo image_width w cinfo image_height h cinfo input_components cinfo in_color_space JCS_GRAYSCALE jpeg_set_defaults cinfo jpeg_set_quality cinfo quality TRUE jpeg_start_compress cinfo TRUE row_stride w cinfo next_scanline cinfo image_height row_pointer data cinfo next_scanline row_stride void jpeg_write_scanlines cinfo row_pointer jpeg_finish_compress cinfo jpeg_destroy_compress cinfo FILE f fopen filename f fwrite memBuf len f fclose f dbgprintf filename memBuf</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">FFT2DTracker.h</field>
    <field name="url">_f_f_t2_d_tracker_8h.html</field>
    <field name="keywords">FFT2DTracker.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">FisherMatrix.h</field>
    <field name="url">_fisher_matrix_8h.html</field>
    <field name="keywords">FisherMatrix.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">hash_templates.h</field>
    <field name="url">hash__templates_8h.html</field>
    <field name="keywords">hash_templates.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">kissfft.h</field>
    <field name="url">kissfft_8h.html</field>
    <field name="keywords">kissfft.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">labview.h</field>
    <field name="url">labview_8h.html</field>
    <field name="keywords">labview.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">_STDINT_H</field>
    <field name="url">labview_8h.html#aad1fb0afc8b1317eaa65cb286caa95d6</field>
    <field name="keywords">_STDINT_H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ppFloatArray</field>
    <field name="url">group__lab__functions.html#gaf69538484a43fed57d6ee809dfbaff15</field>
    <field name="keywords">ppFloatArray ppFloatArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ppFloatArray2</field>
    <field name="url">group__lab__functions.html#ga9a0eab7581aef17aa559d7138d7574f8</field>
    <field name="keywords">ppFloatArray2 ppFloatArray2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeLVArray2D</field>
    <field name="args">(LVArray2D&lt; T &gt; **&amp;d, int rows, int cols)</field>
    <field name="url">group__lab__functions.html#gaeb000b717bd3ec4502c7dd215ab5031e</field>
    <field name="keywords">ResizeLVArray2D ResizeLVArray2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeLVArray3D</field>
    <field name="args">(LVArray3D&lt; T &gt; **&amp;d, int depth, int rows, int cols)</field>
    <field name="url">group__lab__functions.html#gabeb483ad1312a277d2b8c6740fbed35f</field>
    <field name="keywords">ResizeLVArray3D ResizeLVArray3D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeLVArray</field>
    <field name="args">(LVArrayND&lt; T, N &gt; **&amp;d, int *dims)</field>
    <field name="url">group__lab__functions.html#ga5008b8a19809d8fad16db159c6aff923</field>
    <field name="keywords">ResizeLVArray ResizeLVArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResizeLVArray</field>
    <field name="args">(LVArray&lt; T &gt; **&amp;d, int elems)</field>
    <field name="url">group__lab__functions.html#ga586b44022495cbba4d9d8d07cbb40212</field>
    <field name="keywords">ResizeLVArray ResizeLVArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ArgumentErrorMsg</field>
    <field name="args">(ErrorCluster *e, const std::string &amp;msg)</field>
    <field name="url">group__lab__functions.html#ga40d026eb54005767d41bee6c4a059e92</field>
    <field name="keywords">ArgumentErrorMsg ArgumentErrorMsg ArgumentErrorMsg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SetLVString</field>
    <field name="args">(LStrHandle str, const char *text)</field>
    <field name="url">group__lab__functions.html#gafa2a79fe1916d42003e1977c5275e94b</field>
    <field name="keywords">SetLVString SetLVString SetLVString</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FillErrorCluster</field>
    <field name="args">(MgErr err, const char *message, ErrorCluster *error)</field>
    <field name="url">group__lab__functions.html#ga1363f444ed040befa4d285e576743907</field>
    <field name="keywords">FillErrorCluster FillErrorCluster FillErrorCluster</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVGetStringArray</field>
    <field name="args">(int count, LStrHandle *str)</field>
    <field name="url">group__lab__functions.html#gaada2e36cea8ad6f5c5a9371c7f71839c</field>
    <field name="keywords">LVGetStringArray LVGetStringArray LVGetStringArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ValidateTracker</field>
    <field name="args">(QueuedTracker *tracker, ErrorCluster *e, const char *funcname)</field>
    <field name="url">group__lab__functions.html#ga4d26499106cd9ee7e2197a1c785d2dc8</field>
    <field name="keywords">ValidateTracker ValidateTracker ValidateTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">LsqQuadraticFit.h</field>
    <field name="url">_lsq_quadratic_fit_8h.html</field>
    <field name="keywords">LsqQuadraticFit.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">CUDA_SUPPORTED_FUNC</field>
    <field name="url">_lsq_quadratic_fit_8h.html#a69f41cb6c15f0e34b0889a5f6d5aae32</field>
    <field name="keywords">CUDA_SUPPORTED_FUNC</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lv_cputrack_api.cpp</field>
    <field name="url">lv__cputrack__api_8cpp.html</field>
    <field name="keywords">lv_cputrack_api.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">create_tracker</field>
    <field name="args">(uint w, uint h, uint xcorw)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a2c9dfbf9a787f781cb0737db8db757ff</field>
    <field name="keywords">create_tracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">destroy_tracker</field>
    <field name="args">(CPUTracker *tracker)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a1cd574e0d21ae96d30e4ec38a61188f4</field>
    <field name="keywords">destroy_tracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_com</field>
    <field name="args">(CPUTracker *tracker, float *out)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ab4c1c43f54a079f6aba9744d01ac093d</field>
    <field name="keywords">compute_com</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_xcor</field>
    <field name="args">(CPUTracker *tracker, vector2f *position, int iterations, int profileWidth)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a6aa9c57299648bab1a2cba32aa36fc83</field>
    <field name="keywords">compute_xcor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_qi</field>
    <field name="args">(CPUTracker *tracker, vector2f *position, int iterations, int radialSteps, int angularStepsPerQ, float minRadius, float maxRadius, LVArray&lt; float &gt; **radialweights)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a2dad1b3098a81fa9cb50fa2b092a8bfc</field>
    <field name="keywords">compute_qi</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">set_image_from_memory</field>
    <field name="args">(CPUTracker *tracker, LVArray2D&lt; uchar &gt; **pData, ErrorCluster *error)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a1012537402c112783859aba7c362a6b2</field>
    <field name="keywords">set_image_from_memory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">set_image_u8</field>
    <field name="args">(CPUTracker *tracker, LVArray2D&lt; uchar &gt; **pData, ErrorCluster *error)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a241162c848c92e2ab549fd61a9c47daf</field>
    <field name="keywords">set_image_u8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">set_image_u16</field>
    <field name="args">(CPUTracker *tracker, LVArray2D&lt; ushort &gt; **pData, ErrorCluster *error)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ad9d07ebc24a1d641d72f6ddae04600ff</field>
    <field name="keywords">set_image_u16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">set_image_float</field>
    <field name="args">(CPUTracker *tracker, LVArray2D&lt; float &gt; **pData, ErrorCluster *error)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a3bcfb3d95ee852d6da5fbf2319ae274e</field>
    <field name="keywords">set_image_float</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_z</field>
    <field name="args">(CPUTracker *tracker, float *center, int angularSteps, int zlut_index, uint *error, LVArray&lt; float &gt; **profile, int *bestIndex, LVArray&lt; float &gt; **errorCurve)</field>
    <field name="url">lv__cputrack__api_8cpp.html#aa6028f25aa3c9db3dab9ed9d986a4e7d</field>
    <field name="keywords">compute_z</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">get_debug_img_as_array</field>
    <field name="args">(CPUTracker *tracker, LVArray2D&lt; float &gt; **pdbgImg)</field>
    <field name="url">lv__cputrack__api_8cpp.html#af248b516d51520bcce6d64ff534bc6de</field>
    <field name="keywords">get_debug_img_as_array</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_crp</field>
    <field name="args">(CPUTracker *tracker, LVArray&lt; float &gt; **result, int radialSteps, float *radii, float *center, uint *boundaryHit, LVArray2D&lt; float &gt; **crpmap)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ad4bc943e5fe06f8c5a3506175fb98ad0</field>
    <field name="keywords">compute_crp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_asymmetry</field>
    <field name="args">(CPUTracker *tracker, LVArray&lt; float &gt; **result, int radialSteps, float *radii, float *center, uint *boundaryHit)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a1c8a62a1b93c303399c1da20c676e4f1</field>
    <field name="keywords">compute_asymmetry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute_radial_profile</field>
    <field name="args">(CPUTracker *tracker, LVArray&lt; float &gt; **result, int angularSteps, float *radii, float *center, uint *boundaryHit)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ad34437908526f9629ed75dc09e318fe6</field>
    <field name="keywords">compute_radial_profile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">set_ZLUT</field>
    <field name="args">(CPUTracker *tracker, LVArray3D&lt; float &gt; **pZlut, float *radii, int angular_steps, bool useCorrelation, LVArray&lt; float &gt; **radialweights, bool normalize)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ab2e00d5724c6ebf9b05268e85ad89bfe</field>
    <field name="keywords">set_ZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">get_ZLUT</field>
    <field name="args">(CPUTracker *tracker, int zlutIndex, LVArray2D&lt; float &gt; **dst)</field>
    <field name="url">lv__cputrack__api_8cpp.html#aa82a91d1374a6e7458900cd76e54c30d</field>
    <field name="keywords">get_ZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">generate_test_image</field>
    <field name="args">(LVArray2D&lt; float &gt; **img, float xp, float yp, float size, float photoncount)</field>
    <field name="url">lv__cputrack__api_8cpp.html#a4784d40c54a3789ae734118bde7bcc58</field>
    <field name="keywords">generate_test_image</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">generate_image_from_lut</field>
    <field name="args">(LVArray2D&lt; float &gt; **image, LVArray2D&lt; float &gt; **lut, float *LUTradii, vector3f *position, float pixel_max, int useSplineInterp, int samplesPerPixel)</field>
    <field name="url">lv__cputrack__api_8cpp.html#ab7a0288658f7e32c65983c23bf7ef2fc</field>
    <field name="keywords">generate_image_from_lut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_cputrack_api.cpp</field>
    <field name="url">lv__cputrack__api_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">LVArray&lt;float&gt; dst result bhit asym tracker ComputeAsymmetry vector2f center radialSteps dst dimSize radii radii dst elem boundaryHit boundaryHit bhit asym vector2f com tracker ComputeMeanAndCOM out com x out com y boundaryHit rw radialweights dimSize radialSteps rw elem position tracker ComputeQI position iterations radialSteps angularStepsPerQ minRadius maxRadius boundaryHit rw boundaryHit LVArray&lt;float&gt; dst result bhit tracker ComputeRadialProfile dst elem dst dimSize angularSteps radii radii vector2f center bhit boundaryHit boundaryHit bhit boundaryHit position tracker ComputeXCorInterpolated position iterations profileWidth boundaryHit boundaryHit boundaryHit profile ResizeLVArray profile tracker zlut_res errorCurve ResizeLVArray errorCurve tracker zlut_planes maxPos prof profile elem ALLOCA_ARRAY tracker zlut_res tracker ComputeRadialProfile prof tracker zlut_res angularSteps tracker zlut_minradius tracker zlut_maxradius vector2f center boundaryHit z tracker LUTProfileCompare prof zlut_index errorCurve elem CPUTracker::LUTProfMaxQuadraticFit maxPos bestIndex bestIndex maxPos error error boundaryHit z Sleep CPUTracker w h xcorw std::exception e dbgout std::string e what tracker std::exception e dbgout std::string e what ImageData img elem dimSizes dimSizes ImageData zlut elem dimSizes dimSizes GenerateImageFromLUT img zlut LUTradii LUTradii position useSplineInterp samplesPerPixel pixel_max img normalize ApplyPoissonNoise img pixel_max ImageData data elem dimSizes dimSizes GenerateTestImage data xp yp size photoncount std::exception e dbgout std::string e what src tracker GetDebugImage src ResizeLVArray2D pdbgImg tracker GetHeight tracker GetWidth LVArray2D&lt;float&gt; dst pdbgImg i i dst numElem i dst elem i src i zlut tracker GetRadialZLUT zlutIndex ResizeLVArray2D dst tracker zlut_planes tracker zlut_res std::copy zlut zlut tracker zlut_planes tracker zlut_res elem LVArray2D&lt;float&gt; data pData data dimSizes tracker GetWidth data dimSizes tracker GetHeight ArgumentErrorMsg error tracker SetImageFloat data elem LVArray2D&lt;uchar&gt; data pData data dimSizes tracker GetWidth data dimSizes tracker GetHeight ArgumentErrorMsg error tracker SetImage8Bit data elem tracker GetWidth LVArray2D&lt;ushort&gt; data pData data dimSizes tracker GetWidth data dimSizes tracker GetHeight ArgumentErrorMsg error tracker SetImage16Bit data elem tracker GetWidth ushort LVArray2D&lt;uchar&gt; data pData data dimSizes tracker GetWidth data dimSizes tracker GetHeight ArgumentErrorMsg error tracker SetImage8Bit data elem tracker GetWidth LVArray3D&lt;float&gt; zlut pZlut numLUTs zlut dimSizes planes zlut dimSizes res zlut dimSizes normalize NormalizeZLUT zlut elem numLUTs planes res tracker SetRadialZLUT zlut elem planes res numLUTs radii radii useCorrelation radialweights tracker SetRadialWeights dimSize elem</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lv_qtrk_api.h</field>
    <field name="url">lv__qtrk__api_8h.html</field>
    <field name="keywords">lv_qtrk_api.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">QueueFrameFlags</field>
    <field name="url">group__lab__functions.html#gafd9ebd216f1dd2994e68fa672feaaa41</field>
    <field name="keywords">QueueFrameFlags QueueFrameFlags</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QFF_Force32Bit</field>
    <field name="url">group__lab__functions.html#ggafd9ebd216f1dd2994e68fa672feaaa41a5af6f36a4614e54484ce400b403bb8c8</field>
    <field name="keywords">QFF_Force32Bit QFF_Force32Bit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CheckCUDAErrorLV</field>
    <field name="args">(cudaError err, ErrorCluster *e)</field>
    <field name="url">group__lab__functions.html#ga711129bac67367388d407aabb74d5734</field>
    <field name="keywords">CheckCUDAErrorLV CheckCUDAErrorLV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_create</field>
    <field name="args">(QTrkSettings *settings, LStrHandle warnings, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__general.html#gad40c61b77b7ed8e6f3f03b715b2f5fbc</field>
    <field name="keywords">qtrk_create qtrk_create qtrk_create</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_destroy</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *error)</field>
    <field name="url">group__lab___a_p_i__general.html#ga8b91b4749a009f7ebee0ead0090fbcc7</field>
    <field name="keywords">qtrk_destroy qtrk_destroy qtrk_destroy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_free_all</field>
    <field name="args">()</field>
    <field name="url">group__lab___a_p_i__general.html#ga78f2661a691099b0d0dd795793aea6e4</field>
    <field name="keywords">qtrk_free_all qtrk_free_all qtrk_free_all</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_localization_mode</field>
    <field name="args">(QueuedTracker *qtrk, uint locType, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__general.html#gafb354f87021e4eb3818a0eafd892f3fa</field>
    <field name="keywords">qtrk_set_localization_mode qtrk_set_localization_mode qtrk_set_localization_mode</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_find_beads</field>
    <field name="args">(uint8_t *image, int pitch, int w, int h, int *smpCornerPos, int roi, float imgRelDist, float acceptance, LVArray2D&lt; uint32_t &gt; **output)</field>
    <field name="url">group__lab___a_p_i__general.html#gad209896d54766bd0870afb0313c9e2c5</field>
    <field name="keywords">qtrk_find_beads qtrk_find_beads qtrk_find_beads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_ZLUT</field>
    <field name="args">(QueuedTracker *tracker, LVArray3D&lt; float &gt; **pZlut, LVArray&lt; float &gt; **zcmpWindow, int normalize, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__luts.html#gaf67d827ac63ac46740e2cbed37d7bb69</field>
    <field name="keywords">qtrk_set_ZLUT qtrk_set_ZLUT qtrk_set_ZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_ZLUT</field>
    <field name="args">(QueuedTracker *tracker, LVArray3D&lt; float &gt; **pzlut, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__luts.html#ga15e02fb27aa032ceb0e386ae2402a3aa</field>
    <field name="keywords">qtrk_get_ZLUT qtrk_get_ZLUT qtrk_get_ZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_image_lut</field>
    <field name="args">(QueuedTracker *qtrk, LVArrayND&lt; float, 4 &gt; **imageLUT, LVArray3D&lt; float &gt; **radialZLUT, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__luts.html#gaedb43e6842dc2b430de1e960570f7195</field>
    <field name="keywords">qtrk_set_image_lut qtrk_set_image_lut qtrk_set_image_lut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_image_lut</field>
    <field name="args">(QueuedTracker *qtrk, LVArrayND&lt; float, 4 &gt; **imageLUT, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__luts.html#ga323b9991fa0513abdd93388209054093</field>
    <field name="keywords">qtrk_get_image_lut qtrk_get_image_lut qtrk_get_image_lut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_build_lut_plane</field>
    <field name="args">(QueuedTracker *qtrk, LVArray3D&lt; float &gt; **data, uint flags, int plane, ErrorCluster *err)</field>
    <field name="url">group__lab___a_p_i__luts.html#gace72b3965bbca6fb616b9854fc466c29</field>
    <field name="keywords">qtrk_build_lut_plane qtrk_build_lut_plane qtrk_build_lut_plane</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_finalize_lut</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__luts.html#gac470f7f139ceab3aab95e7004ee67071</field>
    <field name="keywords">qtrk_finalize_lut qtrk_finalize_lut qtrk_finalize_lut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_queue_len</field>
    <field name="args">(QueuedTracker *qtrk, int *maxQueueLen, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__queueing.html#gafca63f9624ef82c7b493e8d0581f59b0</field>
    <field name="keywords">qtrk_get_queue_len qtrk_get_queue_len qtrk_get_queue_len</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_u16</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *error, LVArray2D&lt; ushort &gt; **data, const LocalizationJob *jobInfo)</field>
    <field name="url">group__lab___a_p_i__queueing.html#ga220bb182b5da1bbaaef08f305102279f</field>
    <field name="keywords">qtrk_queue_u16 qtrk_queue_u16 qtrk_queue_u16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_u8</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *error, LVArray2D&lt; uchar &gt; **data, const LocalizationJob *jobInfo)</field>
    <field name="url">group__lab___a_p_i__queueing.html#ga51dc3794c2a053752e586b5c24ffa399</field>
    <field name="keywords">qtrk_queue_u8 qtrk_queue_u8 qtrk_queue_u8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_float</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *error, LVArray2D&lt; float &gt; **data, const LocalizationJob *jobInfo)</field>
    <field name="url">group__lab___a_p_i__queueing.html#ga4e6c67bd7420373f0d1ca30520019b3b</field>
    <field name="keywords">qtrk_queue_float qtrk_queue_float qtrk_queue_float</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_pitchedmem</field>
    <field name="args">(QueuedTracker *qtrk, uchar *data, int pitch, uint pdt, const LocalizationJob *jobInfo)</field>
    <field name="url">group__lab___a_p_i__queueing.html#ga3ea977368ebc35640b91a056e8acf7c1</field>
    <field name="keywords">qtrk_queue_pitchedmem qtrk_queue_pitchedmem qtrk_queue_pitchedmem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_array</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *error, LVArray2D&lt; uchar &gt; **data, uint pdt, const LocalizationJob *jobInfo)</field>
    <field name="url">group__lab___a_p_i__queueing.html#gae6bcb1bb836ef522f989df4e9fc1a70a</field>
    <field name="keywords">qtrk_queue_array qtrk_queue_array qtrk_queue_array</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_queue_frame</field>
    <field name="args">(QueuedTracker *qtrk, uchar *image, int pitch, int w, int h, uint pdt, ROIPosition *pos, int numROI, const LocalizationJob *pJobInfo, QueueFrameFlags flags, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__queueing.html#gaaa1ef6991b7cb199e22fdd144515d4a0</field>
    <field name="keywords">qtrk_queue_frame qtrk_queue_frame qtrk_queue_frame</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_resultcount</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__results.html#ga33a0e9954018baa3ffafb67a220201cc</field>
    <field name="keywords">qtrk_resultcount qtrk_resultcount qtrk_resultcount</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_clear_results</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__results.html#ga6708075440ccad08374425f8fcba4cb7</field>
    <field name="keywords">qtrk_clear_results qtrk_clear_results qtrk_clear_results</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_flush</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__results.html#gaa3f11f474c85761260cfad56cf94b2fe</field>
    <field name="keywords">qtrk_flush qtrk_flush qtrk_flush</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_results</field>
    <field name="args">(QueuedTracker *qtrk, LocalizationResult *results, int maxResults, int sortByID, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__results.html#gaf831fa5ea4230503cda3e58fc6d69914</field>
    <field name="keywords">qtrk_get_results qtrk_get_results qtrk_get_results</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_idle</field>
    <field name="args">(QueuedTracker *qtrk, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__results.html#gaad53ec43b42316e2f8818b2a5ed9f88c</field>
    <field name="keywords">qtrk_idle qtrk_idle qtrk_idle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_logfile_path</field>
    <field name="args">(const char *path)</field>
    <field name="url">group__lab___a_p_i__debug.html#gae3a02cf21dcd7687422ee5efa6973f9b</field>
    <field name="keywords">qtrk_set_logfile_path qtrk_set_logfile_path qtrk_set_logfile_path</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_computed_config</field>
    <field name="args">(QueuedTracker *qtrk, QTrkComputedConfig *cc, ErrorCluster *err)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga90ed667a37106538670a129418b35ae0</field>
    <field name="keywords">qtrk_get_computed_config qtrk_get_computed_config qtrk_get_computed_config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_pixel_calib_factors</field>
    <field name="args">(QueuedTracker *qtrk, float offsetFactor, float gainFactor, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga62154852354a09aec2c8ce7b851077c7</field>
    <field name="keywords">qtrk_set_pixel_calib_factors qtrk_set_pixel_calib_factors qtrk_set_pixel_calib_factors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_pixel_calib</field>
    <field name="args">(QueuedTracker *qtrk, LVArray3D&lt; float &gt; **offset, LVArray3D&lt; float &gt; **gain, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga693f383596aafae5fe5c03291a3d7822</field>
    <field name="keywords">qtrk_set_pixel_calib qtrk_set_pixel_calib qtrk_set_pixel_calib</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_dump_memleaks</field>
    <field name="args">()</field>
    <field name="url">group__lab___a_p_i__debug.html#gaf623c2c8a4b96c1e96b793b3b51ef156</field>
    <field name="keywords">qtrk_dump_memleaks qtrk_dump_memleaks qtrk_dump_memleaks</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_profile_report</field>
    <field name="args">(QueuedTracker *qtrk, LStrHandle str)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga914c0af89be8b1c7141ecf48bf4afa02</field>
    <field name="keywords">qtrk_get_profile_report qtrk_get_profile_report qtrk_get_profile_report</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_enable_zlut_cmpprof</field>
    <field name="args">(QueuedTracker *qtrk, bool enable, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga3d8967aecae015a978eb5b9b3a2d5d8a</field>
    <field name="keywords">qtrk_enable_zlut_cmpprof qtrk_enable_zlut_cmpprof qtrk_enable_zlut_cmpprof</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_zlut_cmpprof</field>
    <field name="args">(QueuedTracker *qtrk, LVArray2D&lt; float &gt; **output, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga7e5628a91092157e55a4d4e3c2b439b3</field>
    <field name="keywords">qtrk_get_zlut_cmpprof qtrk_get_zlut_cmpprof qtrk_get_zlut_cmpprof</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_get_debug_image</field>
    <field name="args">(QueuedTracker *qtrk, int id, LVArray2D&lt; float &gt; **data, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#gabcfa384789bdb1a25f676865a82a22bb</field>
    <field name="keywords">qtrk_get_debug_image qtrk_get_debug_image qtrk_get_debug_image</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_compute_fisher</field>
    <field name="args">(LVArray2D&lt; float &gt; **lut, QTrkSettings *cfg, vector3f *pos, LVArray2D&lt; float &gt; **fisherMatrix, LVArray2D&lt; float &gt; **inverseMatrix, vector3f *xyzVariance, int Nsamples, float maxPixelValue)</field>
    <field name="url">group__lab___a_p_i__debug.html#gaf76ed4bf17c2771962211cc00e91d477</field>
    <field name="keywords">qtrk_compute_fisher qtrk_compute_fisher qtrk_compute_fisher</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_test_array_passing</field>
    <field name="args">(int n, LVArray&lt; float &gt; **flt1D, LVArray2D&lt; float &gt; **flt2D, LVArray&lt; int &gt; **int1D, LVArray2D&lt; int &gt; **int2D)</field>
    <field name="url">group__lab___a_p_i__debug.html#gaec891232f8ae7a2b7db830d58f5db1ee</field>
    <field name="keywords">qtrk_test_array_passing qtrk_test_array_passing qtrk_test_array_passing</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_simulate_tracking</field>
    <field name="args">(QueuedTracker *qtrk, int nsmp, int beadIndex, vector3f *centerPos, vector3f *range, vector3f *outBias, vector3f *outScatter, float photonsPerWell, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga938032753f72e883a98e574afcbd3038</field>
    <field name="keywords">qtrk_simulate_tracking qtrk_simulate_tracking qtrk_simulate_tracking</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_generate_gaussian_spot</field>
    <field name="args">(LVArray2D&lt; float &gt; **image, vector2f *pos, float sigma, float I0, float Ibg, int applyNoise)</field>
    <field name="url">group__lab___a_p_i__debug.html#ga87a8abed21f38e77c14a7613e4834076</field>
    <field name="keywords">qtrk_generate_gaussian_spot qtrk_generate_gaussian_spot qtrk_generate_gaussian_spot</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_generate_image_from_lut</field>
    <field name="args">(LVArray2D&lt; float &gt; **image, LVArray2D&lt; float &gt; **lut, float *LUTradii, vector2f *position, float z, float M, float sigma_noise)</field>
    <field name="url">group__lab___a_p_i__debug.html#gade04f1886b8f46a00f55eea6c06cf444</field>
    <field name="keywords">qtrk_generate_image_from_lut qtrk_generate_image_from_lut qtrk_generate_image_from_lut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_compute_zlut_bias_table</field>
    <field name="args">(QueuedTracker *qtrk, int bias_planes, LVArray2D&lt; float &gt; **lvresult, int smpPerPixel, int useSplineInterp, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__zbias.html#ga9345a57adcd58328cfb99da71157a367</field>
    <field name="keywords">qtrk_compute_zlut_bias_table qtrk_compute_zlut_bias_table qtrk_compute_zlut_bias_table</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_set_zlut_bias_table</field>
    <field name="args">(QueuedTracker *qtrk, LVArray2D&lt; float &gt; **biastbl, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__zbias.html#ga8269c5319547349aa6edaea30aa5ade8</field>
    <field name="keywords">qtrk_set_zlut_bias_table qtrk_set_zlut_bias_table qtrk_set_zlut_bias_table</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrkcuda_device_count</field>
    <field name="args">(ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__cuda.html#ga6bc07ac9e4143168fedeb20525e6666a</field>
    <field name="keywords">qtrkcuda_device_count qtrkcuda_device_count qtrkcuda_device_count</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrkcuda_set_device_list</field>
    <field name="args">(LVArray&lt; int &gt; **devices)</field>
    <field name="url">group__lab___a_p_i__cuda.html#ga02f1b69d824b6df8259a2b2db901b335</field>
    <field name="keywords">qtrkcuda_set_device_list qtrkcuda_set_device_list qtrkcuda_set_device_list</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrkcuda_get_device</field>
    <field name="args">(int device, CUDADeviceInfo *info, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__cuda.html#ga97b67d94df2bc7576bf804614e8f2667</field>
    <field name="keywords">qtrkcuda_get_device qtrkcuda_get_device qtrkcuda_get_device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrkcuda_enable_texture_cache</field>
    <field name="args">(QueuedTracker *qtrk, int enable, ErrorCluster *e)</field>
    <field name="url">group__lab___a_p_i__cuda.html#gad14bf5a96466146ea2b3fc21568df1ed</field>
    <field name="keywords">qtrkcuda_enable_texture_cache qtrkcuda_enable_texture_cache qtrkcuda_enable_texture_cache</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lv_queuetrk_api.cpp</field>
    <field name="url">lv__queuetrk__api_8cpp.html</field>
    <field name="keywords">lv_queuetrk_api.cpp</field>
    <field name="text">Labview API for the functionality in QueuedTracker.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CheckImageInput</field>
    <field name="args">(QueuedTracker *qtrk, LVArray2D&lt; T &gt; **data, ErrorCluster *error)</field>
    <field name="url">lv__queuetrk__api_8cpp.html#a55800f1bbe0e726aa36f39263e9a240a</field>
    <field name="keywords">CheckImageInput</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qtrk_read_timestamp</field>
    <field name="args">(uchar *image, int w, int h)</field>
    <field name="url">lv__queuetrk__api_8cpp.html#a3058ab5e108b697b890ab1b85f9509d8</field>
    <field name="keywords">qtrk_read_timestamp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">trackerListMutex</field>
    <field name="url">lv__queuetrk__api_8cpp.html#a21d8c99fba75f15e505c81963ff0ed05</field>
    <field name="keywords">trackerListMutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">trackerList</field>
    <field name="url">lv__queuetrk__api_8cpp.html#a4073ea3f0b6e969139041dca8b25c4cf</field>
    <field name="keywords">trackerList</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_queuetrk_api.cpp</field>
    <field name="url">lv__queuetrk__api_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">data ArgumentErrorMsg error dimSizes qtrk cfg width dimSizes qtrk cfg height ArgumentErrorMsg error SPrintf dimSizes dimSizes qtrk cfg width qtrk cfg height w h uint ts uchar timestamp uchar ts i i i timestamp i image i ts FillErrorCluster mgArgErr msg c_str e err error status LVBooleanTrue error code err SetLVString error message message err std::vector&lt;std::string&gt; result count x x count x uChar val LHStrBuf str x len LHStrLen str x result x std::string val len result msglen strlen text MgErr err NumericArrayResize uB UHandle str msglen err MoveBlock text LStrBuf str msglen LStrLen str msglen std::find trackerList begin trackerList end tracker trackerList end ArgumentErrorMsg e SPrintf funcname tracker QueuedTracker tracker QTrkComputedConfig cc settings cc WriteToLog tracker CreateQueuedTracker cc std::string w tracker GetWarnings w empty SetLVString warnings w c_str trackerListMutex lock trackerList push_back tracker trackerListMutex unlock std::runtime_error exc FillErrorCluster kAppErrorBase exc what e tracker trackerListMutex lock pos std::find trackerList begin trackerList end qtrk pos trackerList end ArgumentErrorMsg error SPrintf qtrk qtrk trackerList erase pos trackerListMutex unlock qtrk qtrk BeadFinder::Config cfg cfg img_distance imgRelDist cfg roi roi cfg similarity acceptance results BeadFinder::Find image pitch w h smpCornerPos smpCornerPos cfg ResizeLVArray2D output results size i i results size i get i results i x get i results i y trackerListMutex lock DeleteAllElems trackerList trackerListMutex unlock ValidateTracker qtrk e qtrk SetLocalizationMode LocMode_t locType ValidateTracker qtrk err dimSizes qtrk cfg width dimSizes qtrk cfg height ArgumentErrorMsg err SPrintf dimSizes dimSizes qtrk cfg width qtrk cfg height cnt planes rsteps qtrk GetRadialZLUTSize cnt planes rsteps dimSizes cnt ArgumentErrorMsg err SPrintf dimSizes cnt qtrk BuildLUT elem qtrk cfg width QTrkFloat plane ValidateTracker qtrk e qtrk FinalizeLUT ValidateTracker qtrk e dims qtrk GetImageZLUTSize dims ResizeLVArray imageLUT dims numElem qtrk GetImageZLUT elem ValidateTracker tracker e dims tracker GetRadialZLUTSize dims dims dims dims dims dims ResizeLVArray3D pzlut dims dims dims tracker GetRadialZLUT elem ValidateTracker qtrk e numElem qtrk SetImageZLUT qtrk SetImageZLUT elem elem dimSizes LVArray3D&lt;float&gt; zlut pZlut ValidateTracker tracker e numLUTs zlut dimSizes planes zlut dimSizes res zlut dimSizes dbgprintf numLUTs planes res zcmp zcmpWindow dimSize dimSize res ArgumentErrorMsg e SPrintf res zcmp elem numLUTs planes res tracker SetRadialZLUT res tracker cfg zlut_radialsteps ArgumentErrorMsg e SPrintf tracker cfg zlut_radialsteps res normalize NormalizeZLUT zlut elem numLUTs planes res tracker SetRadialZLUT zlut elem numLUTs planes tracker SetRadialWeights zcmp ValidateTracker qtrk e qtrk GetQueueLength maxQueueLen uint pitch pdt QTrkFloat pitch float pdt QTrkU16 pitch pitch CheckImageInput qtrk data error pitch dimSizes qtrk_queue_pitchedmem qtrk elem pitch pdt jobInfo CheckImageInput qtrk data error qtrk ScheduleLocalization uchar elem dimSizes QTrkFloat jobInfo LocalizationJob jobInfo pJobInfo nQueued nQueued qtrk ScheduleFrame image pitch w h pos numROI QTRK_PixelDataType pdt jobInfo numROI ArgumentErrorMsg e SPrintf nQueued numROI jobInfo timestamp qtrk ScheduleLocalization data pitch QTRK_PixelDataType pdt jobInfo CheckImageInput qtrk data error qtrk ScheduleLocalization uchar elem ushort dimSizes QTrkU16 jobInfo CheckImageInput qtrk data error qtrk ScheduleLocalization elem uchar dimSizes QTrkU8 jobInfo ValidateTracker qtrk e qtrk ClearResults ValidateTracker qtrk e qtrk Flush ValidateTracker qtrk e resultCount qtrk FetchResults results maxResults sortByID std::sort results results resultCount decltype results a decltype results b a job frame b job frame resultCount ValidateTracker qtrk e qtrk IsIdle ValidateTracker qtrk e qtrk GetResultCount QTrkComputedConfig cc cfg ImageData lutImg elem dimSizes dimSizes SampleFisherMatrix fm maxPixelValue Matrix3X3 mat fm ComputeAverageFisher pos Nsamples vector3f vector3f f cfg width cfg height ImageData out vector3f pos fisherMatrix ResizeLVArray2D fisherMatrix i i i elem i mat i inverseMatrix Matrix3X3 inv mat Inverse ResizeLVArray2D inverseMatrix i i i elem i inv i xyzVariance xyzVariance mat Inverse diag _CrtDumpMemoryLeaks ValidateTracker qtrk e qtrk EnableRadialZLUTCompareProfile enable ImageData img elem dimSizes dimSizes GenerateGaussianSpotImage img pos sigma I0 Ibg applyNoise ApplyPoissonNoise img ImageData img elem dimSizes dimSizes ImageData zlut elem dimSizes dimSizes vector3f pos position x position y z GenerateImageFromLUT img zlut LUTradii LUTradii pos sigma_noise ApplyGaussianNoise img sigma_noise ValidateTracker qtrk err cc qtrk cfg w h ValidateTracker qtrk e img qtrk GetDebugImage w h img ResizeLVArray2D data h w i i w h i elem i img i img SetLVString str qtrk GetProfileReport c_str ValidateTracker qtrk e cnt planes rsteps qtrk GetRadialZLUTSize cnt planes rsteps ResizeLVArray2D output cnt planes qtrk GetRadialZLUTCompareProfile elem dbgsetlogfile path ValidateTracker qtrk e count planes radialSteps qtrk GetRadialZLUTSize count planes radialSteps offset_data gain_data dimSizes qtrk cfg width dimSizes qtrk cfg height dimSizes ArgumentErrorMsg e SPrintf dimSizes dimSizes count dimSizes ArgumentErrorMsg e SPrintf count dimSizes offset_data elem dimSizes qtrk cfg width dimSizes qtrk cfg height dimSizes ArgumentErrorMsg e SPrintf dimSizes dimSizes count dimSizes ArgumentErrorMsg e SPrintf count dimSizes gain_data elem qtrk SetPixelCalibrationImages offset_data gain_data ValidateTracker qtrk e qtrk SetPixelCalibrationFactors offsetFactor gainFactor ValidateTracker qtrk e nZLUT nPlanes nRadialSteps qtrk GetRadialZLUTSize nZLUT nPlanes nRadialSteps lut nZLUT nPlanes nRadialSteps qtrk GetRadialZLUT lut ImageData img ImageData::alloc qtrk cfg width qtrk cfg height ImageData zlut zlut data lut nRadialSteps nPlanes beadIndex zlut w nRadialSteps zlut h nPlanes std::vector&lt;vector3f&gt; positions nsmp i i nsmp i vector3f pos centerPos range vector3f rand_uniform&lt;float&gt; rand_uniform&lt;float&gt; rand_uniform&lt;float&gt; positions i pos GenerateImageFromLUT img zlut qtrk cfg zlut_minradius qtrk cfg zlut_maxradius pos ApplyPoissonNoise img photonsPerWell qtrk ScheduleLocalization uchar img data img w QTrkFloat i i beadIndex img free qtrk Flush qtrk IsIdle LocalizationResult results LocalizationResult nsmp qtrk FetchResults results nsmp vector3f sumBias sumScatter i i nsmp i vector3f truepos positions results i job frame vector3f diff results i pos truepos sumBias diff vector3f meanBias sumBias nsmp i i nsmp i vector3f truepos positions results i job frame vector3f diff results i pos truepos diff meanBias sumScatter diff diff outScatter sqrt sumScatter nsmp outBias sumBias i i dimSizes i j j dimSizes j dbgprintf get i j dbgprintf ResizeLVArray flt1D n ResizeLVArray int1D n ResizeLVArray2D flt2D n n ResizeLVArray2D int2D n n i i n i elem i i i elem i sqrtf i j j n j get j i j i get j i j i ValidateTracker qtrk e CImageData result qtrk ComputeZBiasCorrection bias_planes result smpPerPixel useSplineInterp ResizeLVArray2D lvresult result h result w result copyTo elem ValidateTracker qtrk e numbeads planes radialsteps qtrk GetRadialZLUTSize numbeads planes radialsteps dimSizes numbeads ArgumentErrorMsg e SPrintf numbeads qtrk SetZLUTBiasCorrection ImageData elem dimSizes dimSizes c CheckCUDAErrorLV cudaGetDeviceCount c e c ValidateTracker qtrk e qtrk SetConfigValue enable cudaDeviceProp prop CheckCUDAErrorLV cudaGetDeviceProperties prop device e info multiProcCount prop multiProcessorCount info clockRate prop clockRate info major prop major info minor prop minor SetLVString info name prop name SetCUDADevices elem dimSize</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lv_resultmanager_api.cpp</field>
    <field name="url">lv__resultmanager__api_8cpp.html</field>
    <field name="keywords">lv_resultmanager_api.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ValidRM</field>
    <field name="args">(ResultManager *rm, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#ae24e96549aef9b709e568107a70a6c83</field>
    <field name="keywords">ValidRM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_destroy_all</field>
    <field name="args">()</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a9b7110a3e09d377049246eb52a152f7b</field>
    <field name="keywords">rm_destroy_all</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_create</field>
    <field name="args">(const char *file, const char *frameinfo, ResultManagerConfig *cfg, LStrHandle *names)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a6a655ba1fd6eea7ade6efde9ff10b917</field>
    <field name="keywords">rm_create</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_set_tracker</field>
    <field name="args">(ResultManager *rm, QueuedTracker *qtrk, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#af9f2a5da2226b6a18c78eada2b613844</field>
    <field name="keywords">rm_set_tracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_destroy</field>
    <field name="args">(ResultManager *rm, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#adf64b3bb02238f86ffaf04b9cd0440d8</field>
    <field name="keywords">rm_destroy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_store_frame_info</field>
    <field name="args">(ResultManager *rm, int frame, double timestamp, float *cols, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#aaf1c9c86e745f370b383bb574586dde8</field>
    <field name="keywords">rm_store_frame_info</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_getbeadresults</field>
    <field name="args">(ResultManager *rm, int start, int numFrames, int bead, LocalizationResult *results, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a54d08cffbebcfe761bd1a4e37e5c61c3</field>
    <field name="keywords">rm_getbeadresults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_getframecounters</field>
    <field name="args">(ResultManager *rm, int *startFrame, int *lastSaveFrame, int *endFrame, int *capturedFrames, int *localizationsDone, int *lostFrames, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a6fb19b5df69b9d8e71bb7ddcbefd50f8</field>
    <field name="keywords">rm_getframecounters</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_flush</field>
    <field name="args">(ResultManager *rm, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a6a6f09144785754a3525d35bf05568d2</field>
    <field name="keywords">rm_flush</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_getresults</field>
    <field name="args">(ResultManager *rm, int startFrame, int numFrames, LocalizationResult *results, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#aa1ce2fa9f66d18d167dddf7f4b6b6d45</field>
    <field name="keywords">rm_getresults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_removebead</field>
    <field name="args">(ResultManager *rm, int bead, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a115471d08544c315661e952ca7cb9347</field>
    <field name="keywords">rm_removebead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rm_getconfig</field>
    <field name="args">(ResultManager *rm, ResultManagerConfig *cfg, ErrorCluster *err)</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a972f9d65c4904c50c3fee1f9c4c978d5</field>
    <field name="keywords">rm_getconfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">rm_instances</field>
    <field name="url">lv__resultmanager__api_8cpp.html#a6b7a9f56a827db279c5fd45f5e86797e</field>
    <field name="keywords">rm_instances</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">lv_resultmanager_api.cpp</field>
    <field name="url">lv__resultmanager__api_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt;std::string&gt; colNames names colNames LVGetStringArray cfg numFrameInfoColumns names ResultManager rm ResultManager file frameinfo cfg colNames rm_instances insert rm rm ValidRM rm err rm_instances erase rm rm DeleteAllElems rm_instances ValidRM rm err rm Flush ValidRM rm err bead &lt; 0 || bead &gt; rm Config numBeads ArgumentErrorMsg err SPrintf bead rm Config numBeads rm GetBeadPositions start start numFrames bead results ValidRM rm err cfg rm Config ValidRM rm err r rm GetFrameCounters startFrame startFrame r startFrame lastSaveFrame lastSaveFrame r lastSaveFrame endFrame endFrame r processedFrames capturedFrames capturedFrames r capturedFrames localizationsDone localizationsDone r localizationsDone lostFrames lostFrames r lostFrames ValidRM rm err rm GetResults results startFrame numFrames ValidRM rm err rm GetTracker ArgumentErrorMsg err rm RemoveBeadResults bead ValidRM rm err rm SetTracker qtrk ValidRM rm err dbgprintf frame timestamp rm StoreFrameInfo frame timestamp cols rm_instances find rm rm_instances end ArgumentErrorMsg err</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">memdbg.cpp</field>
    <field name="url">memdbg_8cpp.html</field>
    <field name="keywords">memdbg.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">memdbg.h</field>
    <field name="url">memdbg_8h.html</field>
    <field name="keywords">memdbg.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">qtrk_c_api.cpp</field>
    <field name="url">qtrk__c__api_8cpp.html</field>
    <field name="keywords">qtrk_c_api.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkCreateInstance</field>
    <field name="args">(QTrkSettings *cfg)</field>
    <field name="url">group__c__api.html#ga6f577c7b65dcdcb107ccdd7bb1f8883f</field>
    <field name="keywords">QTrkCreateInstance QTrkCreateInstance QTrkCreateInstance</field>
    <field name="text">Create a QTrk instance and return a pointer to it Create a QTrk instance and return a pointer to it Create a QTrk instance and return a pointer to it cfg Pointer to the structure with the desired tracking settings Pointer to the created QTrk instance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkFreeInstance</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#ga4262000013c06b69780a3e24c1d6e5b4</field>
    <field name="keywords">QTrkFreeInstance QTrkFreeInstance QTrkFreeInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkSetLocalizationMode</field>
    <field name="args">(QueuedTracker *qtrk, LocMode_t locType)</field>
    <field name="url">group__c__api.html#ga4f179d9a21e4d0878fb0b7b93d2ca758</field>
    <field name="keywords">QTrkSetLocalizationMode QTrkSetLocalizationMode QTrkSetLocalizationMode</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkScheduleLocalization</field>
    <field name="args">(QueuedTracker *qtrk, void *data, int pitch, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo)</field>
    <field name="url">group__c__api.html#gacbe5d60ebb4af5dc16a061e94ed321ab</field>
    <field name="keywords">QTrkScheduleLocalization QTrkScheduleLocalization QTrkScheduleLocalization</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkClearResults</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#gaf26eb7c51cc81961c873246322dea1a4</field>
    <field name="keywords">QTrkClearResults QTrkClearResults QTrkClearResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkFlush</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#ga77a94e6a0f70958385240b81ca2d31c9</field>
    <field name="keywords">QTrkFlush QTrkFlush QTrkFlush</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkScheduleFrame</field>
    <field name="args">(QueuedTracker *qtrk, void *imgptr, int pitch, int width, int height, ROIPosition *positions, int numROI, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo)</field>
    <field name="url">group__c__api.html#gae5ef39f758a31d9fc493da07d358cc04</field>
    <field name="keywords">QTrkScheduleFrame QTrkScheduleFrame QTrkScheduleFrame</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkSetRadialZLUT</field>
    <field name="args">(QueuedTracker *qtrk, float *data, int count, int planes, float *zcmp)</field>
    <field name="url">group__c__api.html#ga1a3edf23919c33a549b2fb0b778684a9</field>
    <field name="keywords">QTrkSetRadialZLUT QTrkSetRadialZLUT QTrkSetRadialZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetRadialZLUT</field>
    <field name="args">(QueuedTracker *qtrk, float *dst)</field>
    <field name="url">group__c__api.html#gab5d2705f9d756f2c57568a50755e9212</field>
    <field name="keywords">QTrkGetRadialZLUT QTrkGetRadialZLUT QTrkGetRadialZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetRadialZLUTSize</field>
    <field name="args">(QueuedTracker *qtrk, int *count, int *planes, int *radialsteps)</field>
    <field name="url">group__c__api.html#ga870e97e334d0f265eeaa969286bbc32f</field>
    <field name="keywords">QTrkGetRadialZLUTSize QTrkGetRadialZLUTSize QTrkGetRadialZLUTSize</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkBuildLUT</field>
    <field name="args">(QueuedTracker *qtrk, void *data, int pitch, QTRK_PixelDataType pdt, bool imageLUT, int plane)</field>
    <field name="url">group__c__api.html#ga4c0fafa8ed3afa1f77145049c2fe399b</field>
    <field name="keywords">QTrkBuildLUT QTrkBuildLUT QTrkBuildLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkFinalizeLUT</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#ga001b7cce7559916db5198075f4b7ff21</field>
    <field name="keywords">QTrkFinalizeLUT QTrkFinalizeLUT QTrkFinalizeLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetResultCount</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#gacec9880407759cffad8c29ad2eeb1e19</field>
    <field name="keywords">QTrkGetResultCount QTrkGetResultCount QTrkGetResultCount</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkFetchResults</field>
    <field name="args">(QueuedTracker *qtrk, LocalizationResult *results, int maxResults)</field>
    <field name="url">group__c__api.html#ga8fac708f09e509fca0004a7dad8c2872</field>
    <field name="keywords">QTrkFetchResults QTrkFetchResults QTrkFetchResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetQueueLength</field>
    <field name="args">(QueuedTracker *qtrk, int *maxQueueLen)</field>
    <field name="url">group__c__api.html#ga3f127b31b11968ff65ce6593ecab2378</field>
    <field name="keywords">QTrkGetQueueLength QTrkGetQueueLength QTrkGetQueueLength</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkIsIdle</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">group__c__api.html#ga050d8107baef0439f34e34d951da83fd</field>
    <field name="keywords">QTrkIsIdle QTrkIsIdle QTrkIsIdle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetProfileReport</field>
    <field name="args">(QueuedTracker *qtrk, char *dst, int maxStrLen)</field>
    <field name="url">group__c__api.html#ga2e1032468e06d1f27e9484c8aa93a008</field>
    <field name="keywords">QTrkGetProfileReport QTrkGetProfileReport QTrkGetProfileReport</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetWarnings</field>
    <field name="args">(QueuedTracker *qtrk, char *dst, int maxStrLen)</field>
    <field name="url">group__c__api.html#gaba90d158e873117ee01076aef9ed99ae</field>
    <field name="keywords">QTrkGetWarnings QTrkGetWarnings QTrkGetWarnings</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkGetComputedConfig</field>
    <field name="args">(QueuedTracker *qtrk, QTrkComputedConfig *cfg)</field>
    <field name="url">group__c__api.html#ga2e4eb3e4449138cd29ff40e1c1b06535</field>
    <field name="keywords">QTrkGetComputedConfig QTrkGetComputedConfig QTrkGetComputedConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">qtrk_c_api.h</field>
    <field name="url">qtrk__c__api_8h.html</field>
    <field name="keywords">qtrk_c_api.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">QTrkCUDA_UseList</field>
    <field name="url">qtrk__c__api_8h.html#acc1340bb8a0e6db25194fc300e930b22</field>
    <field name="keywords">QTrkCUDA_UseList</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">QTrkCUDA_UseAll</field>
    <field name="url">qtrk__c__api_8h.html#a81a7a05010c5c6a3c0325892b3d569e9</field>
    <field name="keywords">QTrkCUDA_UseAll</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">QTrkCUDA_UseBest</field>
    <field name="url">qtrk__c__api_8h.html#adacab7cc5d7db0ead3d14f9862d7bbb7</field>
    <field name="keywords">QTrkCUDA_UseBest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">LocMode_t</field>
    <field name="url">qtrk__c__api_8h.html#a6ba72ec1daa19642f85a47defe8f0812</field>
    <field name="keywords">LocMode_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">LocalizeModeEnum</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3b</field>
    <field name="keywords">LocalizeModeEnum</field>
    <field name="text">Flags for selecting localization type</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_OnlyCOM</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3bab236233599e4b1d5ab369a574d63181d</field>
    <field name="keywords">LT_OnlyCOM</field>
    <field name="text">Use only COM</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_XCor1D</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba3c14d24d83bc2358bf41e071861620d2</field>
    <field name="keywords">LT_XCor1D</field>
    <field name="text">COM+XCor1D</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_QI</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba9eb0441a0c1e1086ff81512ea509e564</field>
    <field name="keywords">LT_QI</field>
    <field name="text">COM+QI</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_Gaussian2D</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba49983d8a534bbda61f861e1a2702a88a</field>
    <field name="keywords">LT_Gaussian2D</field>
    <field name="text">2D Gaussian localization</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_ZLUTAlign</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba85b5a8778da421d97ac8bf55dd0cf076</field>
    <field name="keywords">LT_ZLUTAlign</field>
    <field name="text">XYZ Alignment with ZLUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_LocalizeZ</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba5bee529eb0d2fa3bef01f31eeb613b92</field>
    <field name="keywords">LT_LocalizeZ</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_NormalizeProfile</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3bae1cac6e7cc97db83708edd0407e3e25f</field>
    <field name="keywords">LT_NormalizeProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_ClearFirstFourPixels</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba5b928b5bd4caff7d5f30322fdecae82b</field>
    <field name="keywords">LT_ClearFirstFourPixels</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_FourierLUT</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3baa412dc6660a1d4896acff68e660a77d2</field>
    <field name="keywords">LT_FourierLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_LocalizeZWeighted</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3ba4b74b9fec0fa98e60e03b783618111f4</field>
    <field name="keywords">LT_LocalizeZWeighted</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LT_Force32Bit</field>
    <field name="url">qtrk__c__api_8h.html#a9d32512eae44894026802d1a688c7e3badf60687c86e85d2ec139f3d37defa28c</field>
    <field name="keywords">LT_Force32Bit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">QTRK_PixelDataType</field>
    <field name="url">qtrk__c__api_8h.html#aad82367b3ea592a142bb50a2fb538b0b</field>
    <field name="keywords">QTRK_PixelDataType</field>
    <field name="text">Flags indicating the data type of image data</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QTrkU8</field>
    <field name="url">qtrk__c__api_8h.html#aad82367b3ea592a142bb50a2fb538b0baed6124f6daf00bc0e0f4817986bad3a1</field>
    <field name="keywords">QTrkU8</field>
    <field name="text">8 bit unsigned int</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QTrkU16</field>
    <field name="url">qtrk__c__api_8h.html#aad82367b3ea592a142bb50a2fb538b0ba6c91530bb59effda68594063a7a1d5a6</field>
    <field name="keywords">QTrkU16</field>
    <field name="text">16 bit unsigned int</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QTrkFloat</field>
    <field name="url">qtrk__c__api_8h.html#aad82367b3ea592a142bb50a2fb538b0bafeece00bcf1a42419e686ef0cf006a4e</field>
    <field name="keywords">QTrkFloat</field>
    <field name="text">64 bit float</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedCPUTracker.cpp</field>
    <field name="url">_queued_c_p_u_tracker_8cpp.html</field>
    <field name="keywords">QueuedCPUTracker.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedCPUTracker.h</field>
    <field name="url">_queued_c_p_u_tracker_8h.html</field>
    <field name="keywords">QueuedCPUTracker.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedTracker.cpp</field>
    <field name="url">_queued_tracker_8cpp.html</field>
    <field name="keywords">QueuedTracker.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">WRITEVAR</field>
    <field name="args">(v)</field>
    <field name="url">_queued_tracker_8cpp.html#ab7f8fd911b15411f3172a7811e2fc0c6</field>
    <field name="keywords">WRITEVAR WRITEVAR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedTracker.h</field>
    <field name="url">_queued_tracker_8h.html</field>
    <field name="keywords">QueuedTracker.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MIN_RADPROFILE_SMP_COUNT</field>
    <field name="url">_queued_tracker_8h.html#a1625167c310599739f4d73170413e64a</field>
    <field name="keywords">MIN_RADPROFILE_SMP_COUNT</field>
    <field name="text">Minimum number of samples for a profile radial bin Below this the image mean will be used</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">BUILDLUT_IMAGELUT</field>
    <field name="url">_queued_tracker_8h.html#ae264b7a73c89ed4c64ebd3cb6d2fb7f2</field>
    <field name="keywords">BUILDLUT_IMAGELUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">BUILDLUT_FOURIER</field>
    <field name="url">_queued_tracker_8h.html#a7ac0cdfdebce92a9636d9ba1fcff35d7</field>
    <field name="keywords">BUILDLUT_FOURIER</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">BUILDLUT_NORMALIZE</field>
    <field name="url">_queued_tracker_8h.html#a9f315d1d346715b20a55ef50c2021c0e</field>
    <field name="keywords">BUILDLUT_NORMALIZE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">BUILDLUT_BIASCORRECT</field>
    <field name="url">_queued_tracker_8h.html#a785877e02de7d5323dbf5d5dff703dbd</field>
    <field name="keywords">BUILDLUT_BIASCORRECT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">QI_LSQFIT_WEIGHTS</field>
    <field name="url">_queued_tracker_8h.html#a0fc1d2588a7b6a58916e8a1c8f0b806c</field>
    <field name="keywords">QI_LSQFIT_WEIGHTS</field>
    <field name="text">Polynomial least-square fit weights used for QI fitting Changes to this require rebuild of code</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">QI_LSQFIT_NWEIGHTS</field>
    <field name="url">_queued_tracker_8h.html#a60c92e3588eae0bb2d14c2ecb4caee32</field>
    <field name="keywords">QI_LSQFIT_NWEIGHTS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ZLUT_LSQFIT_NWEIGHTS</field>
    <field name="url">_queued_tracker_8h.html#a208ba9e2f1c0edb3a8d7f6c35d34765a</field>
    <field name="keywords">ZLUT_LSQFIT_NWEIGHTS</field>
    <field name="text">Polynomial least-square fit weights used for Z fitting Changes to this require rebuild of code</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ZLUT_LSQFIT_WEIGHTS</field>
    <field name="url">_queued_tracker_8h.html#a6357a5808d3da82bbd4a7bb94e5e7333</field>
    <field name="keywords">ZLUT_LSQFIT_WEIGHTS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ImageData</field>
    <field name="url">_queued_tracker_8h.html#a2d6726594ce64e82b9222b183f2571d1</field>
    <field name="keywords">ImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CopyImageToFloat</field>
    <field name="args">(uchar *data, int width, int height, int pitch, QTRK_PixelDataType pdt, float *dst)</field>
    <field name="url">_queued_tracker_8h.html#aa12cb78bf8b173dab3392d1e16944b6d</field>
    <field name="keywords">CopyImageToFloat</field>
    <field name="text">Copies image data from a generic QTRK_PixelDataType array to a float array data Array with the data in the pdt type width Width of the image height Height of the image pitch Width of the array in memory pdt QTRK_PixelDataType specifier for data dst Pre-allocated float array in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CreateQueuedTracker</field>
    <field name="args">(const QTrkComputedConfig &amp;cc)</field>
    <field name="url">_queued_tracker_8h.html#a04e7674e3705eefff30b5d6f5d3ab925</field>
    <field name="keywords">CreateQueuedTracker</field>
    <field name="text">Helper function to create a QueuedTracker instance Used to determine the creation of a CUDA or CPU instance through compiler definitions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SetCUDADevices</field>
    <field name="args">(int *devices, int numdev)</field>
    <field name="url">_queued_tracker_8h.html#aec87b5e9402a6c3eedaae14087935794</field>
    <field name="keywords">SetCUDADevices</field>
    <field name="text">Set the list of devices to be used when QTrkComputedConfig::cuda_device is set to QTrkCUDA_UseList Empty for CPU tracker devices numdev</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PDT_BytesPerPixel</field>
    <field name="args">(QTRK_PixelDataType pdt)</field>
    <field name="url">_queued_tracker_8h.html#adb31752069847fe598de8c312becda1b</field>
    <field name="keywords">PDT_BytesPerPixel</field>
    <field name="text">sizeof() equivalent for the QTRK_PixelDataType pdt The pixel data type used The size in bytes of the specified datatype</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">utils.cpp</field>
    <field name="url">utils_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pdt QTrkU8 y y height y x x width x dst x data x data pitch dst width pdt QTrkU16 y y height y ushort u ushort data x x width x dst x u x data pitch dst width y y height y fsrc data x x width x dst x fsrc x data pitch dst width k k img numPixels k v img data k sigma rand_normal&lt;float&gt; v f v f img data k v ratio maxval poissonMax x x img numPixels x img x int rand_poisson&lt;float&gt; poissonMax img x ratio sum sum2 moment x x len x v data x sum v sum2 v v invN f len mean sum invN stdev sqrtf sum2 invN mean mean sum f x x len x v data x v std::max f fabs v mean cf stdev sum v moment x v moment float sum vector2f radialDirs vector2f ALLOCA vector2f angularSteps j j angularSteps j ang f j float angularSteps radialDirs j vector2f cosf ang sinf ang i i radialSteps i dst i f map crpmap crpmap ALLOCA radialSteps angularSteps com ALLOCA angularSteps rstep maxradius minradius radialSteps comsum f a a angularSteps a r minradius sum f moment f i i radialSteps i x center x radialDirs a x r y center y radialDirs a y r v img interpolate x y r rstep map a radialSteps i v sum v moment i v com a moment sum comsum com a avgcom comsum angularSteps totalrmssum2 f i i radialSteps i sum f a a angularSteps a shift com a avgcom sum map a radialSteps i dst i sum angularSteps paddingValue totalrmssum2 dst i dst i invTotalrms f sqrt totalrmssum2 radialSteps i i radialSteps i dst i invTotalrms std::vector&lt;float&gt; wnd rsteps i i rsteps i x i float rsteps t2 f t1 f fall f expf sq x t2 rise f expf sq x t1 wnd i sqrtf fall rise x wnd vector2f radialDirs vector2f ALLOCA vector2f angularSteps j j angularSteps j ang f j float angularSteps radialDirs j vector2f cosf ang sinf ang i i radialSteps i dst i f trace rstep maxradius minradius radialSteps totalsmp i i radialSteps i sum f nsamples r minradius rstep i a a angularSteps a x center x radialDirs a x r y center y radialDirs a y r outside v img interpolate x y outside outside sum v nsamples trace dbgprintf sum nsamples dst i nsamples MIN_RADPROFILE_SMP_COUNT sum nsamples mean trace dbgprintf normalize NormalizeRadialProfile dst radialSteps pdt QTrkU8 y y height y x x width x dst x data x data pitch dst width pdt QTrkU16 y y height y ushort u ushort data x x width x dst x u x data pitch dst width y y height y fsrc data x x width x dst x fsrc x data pitch dst width OutputDebugString s c_str printf s c_str WriteToLog s c_str va_list ap va_start ap fmt buf VSNPRINTF buf buf fmt ap OutputDebugString buf fputs buf stdout WriteToLog buf va_end ap logFilename path l strlen f l f l f l l edenom sqrt sigma sigma y y img h y x x img w x DeltaX f erf x pos x f edenom f erf x pos x f edenom DeltaY f erf y pos y f edenom f erf y pos y f edenom img at x y Ibg I0 DeltaX DeltaY radialcov zlut w maxradius minradius zinterp ALLOCA zlut w splineInterp iz std::max std::min zlut h pos z weights fz pos z iz ComputeBSplineWeights weights fz r r zlut w r zlutv i i i zlutv weights i zlut at r i iz zinterp r zlutv iz int pos z if iz zinterp zlut data iz zlut h zinterp zlut data zlut h zlut w zlut0 zlut data pos z zlut w zlut1 zlut data int pos z zlut w zinterp ALLOCA zlut w r r zlut w r zinterp r Lerp zlut0 r zlut1 r pos z iz oversampleWidth oversampleSubdiv oversampleHeight oversampleSubdiv oxstep f oversampleWidth oystep f oversampleHeight y y image h y x x image w x s f ox ox oversampleWidth ox oy oy oversampleHeight oy X x ox f oxstep pos x f Y y oy f oystep pos y f pixr sqrtf X X Y Y r pixr minradius radialcov r zlut w r zlut w r r i int r s Lerp zinterp i zinterp i r i image at x y s oversampleWidth oversampleHeight S f sqrt size y y img h y x x img w x X x xp Y y yp r sqrtf X X Y Y v sinf r S expf r r S f img at x y v SNratio ApplyGaussianNoise img f SNratio img normalize std::string base std::string search base LPCSTR w_folder _T search c_str WIN32_FIND_DATA FindFileData HANDLE hFind hFind FindFirstFile w_folder FindFileData std::string dirName FindNextFile hFind FindFileData dirName FindFileData cFileName ext SPrintf base c_str dirName c_str SPrintf base c_str dirName c_str i fullpath size i i fullpath i fullpath i fullpath substr i time_t rawtime tm timeinfo time rawtime timeinfo localtime rawtime sprintf output timeinfo tm_year timeinfo tm_mon timeinfo tm_mday timeinfo tm_hour timeinfo tm_min timeinfo tm_sec path HMODULE hm NULL GetModuleHandleExA GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT LPCSTR GetLocalModuleFilename hm GetModuleFileNameA hm path path path std::string dllpath GetLocalModuleFilename GetDirectoryFromPath dllpath uint64_t freq time QueryPerformanceCounter LARGE_INTEGER time QueryPerformanceFrequency LARGE_INTEGER freq time double freq r r v r fabsf r v fabsf r v r r r r v r fabsf r v fabsf r v r r sum f i i rsteps i sum prof i mean sum rsteps rmssum2 i i rsteps i prof i mean rmssum2 prof i prof i invTotalrms f sqrt rmssum2 rsteps i i rsteps i prof i invTotalrms i i numBeads i j j planes j NormalizeRadialProfile zlut radialsteps planes i radialsteps j radialsteps std::list&lt; std::vector &lt;float&gt; data FILE f fopen filename f std::string buf std::vector&lt;float&gt; vals feof f c fgetc f c sep c vals push_back atof buf c_str buf clear c data push_back vals vals clear c sep c buf c fclose f std::vector&lt;std::vector&lt;float&gt; r r reserve data size r insert r begin data begin data end r w h uchar imgdata std::vector&lt;uchar&gt; jpgdata ReadToByteBuffer fn ReadJPEGFile jpgdata jpgdata size imgdata w h fbuf w h x x w h x fbuf x imgdata x f imgdata ImageData fbuf w h PathSeperator sep lutfile sep extension ReadJPEGFile lutfile std::string fn lutfile fn std::string fn begin fn begin fn find std::string num sep extension begin sep extension find sep extension end lutIndex atoi num c_str nbeads nplanes nsteps FILE f fopen fn c_str f std::runtime_error fn fread nbeads f fread nplanes f fread nsteps f fseek f nsteps nplanes lutIndex SEEK_SET ImageData lut ImageData::alloc nsteps nplanes fread lut data nsteps nplanes f fclose f lut normalize lut FILE f fopen filename f std::runtime_error SPrintf filename fseek f SEEK_END len ftell f fseek f SEEK_SET std::vector&lt;uchar&gt; buf len fread buf len f fclose f buf data ReadCSV file sep std::vector&lt;vector3f&gt; r data size i i data size i r i vector3f data i data i data i r va_list ap va_start ap fmt buf VSNPRINTF buf buf fmt ap va_end ap buf x x FILE f fopen file append f i i len i fprintf f d i fprintf f fclose f dbgprintf file FILE f fopen file f dbgprintf file labels i i w i fprintf f labels i fputs f y y h y x x w x i d y w x imag fprintf f d y w x real i x w fputs f fprintf f fclose f FILE f fopen file f labels i i w i fprintf f labels i fputs f y y h y x x w x fprintf f d y w x x w fputs f fprintf f fclose f dbgprintf file logFilename empty ps PathSeperator GetLocalModuleFilename logFilename ps directory ps filename str FILE f fopen logFilename c_str f fputs str f fclose f FILE f fopen filename c_str f std::runtime_error SPrintf filename c_str i i nResults i fprintf f results i x results i y results i z fclose f FILE f fopen file append f i i d size i fprintf f d i fprintf f fclose f dbgprintf file k k img numPixels k v img data k sigma rand_normal&lt;float&gt; v f v f img data k v ratio maxval poissonMax x x img numPixels x img x int rand_poisson&lt;float&gt; poissonMax img x ratio sum sum2 moment x x len x v data x sum v sum2 v v invN f len mean sum invN stdev sqrtf sum2 invN mean mean sum f x x len x v data x v std::max f fabs v mean cf stdev sum v moment x v moment float sum vector2f radialDirs vector2f ALLOCA vector2f angularSteps j j angularSteps j ang f j float angularSteps radialDirs j vector2f cosf ang sinf ang i i radialSteps i dst i f map crpmap crpmap ALLOCA radialSteps angularSteps com ALLOCA angularSteps rstep maxradius minradius radialSteps comsum f a a angularSteps a r minradius sum f moment f i i radialSteps i x center x radialDirs a x r y center y radialDirs a y r v img interpolate x y r rstep map a radialSteps i v sum v moment i v com a moment sum comsum com a avgcom comsum angularSteps totalrmssum2 f i i radialSteps i sum f a a angularSteps a shift com a avgcom sum map a radialSteps i dst i sum angularSteps paddingValue totalrmssum2 dst i dst i invTotalrms f sqrt totalrmssum2 radialSteps i i radialSteps i dst i invTotalrms std::vector&lt;float&gt; wnd rsteps i i rsteps i x i float rsteps t2 f t1 f fall f expf sq x t2 rise f expf sq x t1 wnd i sqrtf fall rise x wnd vector2f radialDirs vector2f ALLOCA vector2f angularSteps j j angularSteps j ang f j float angularSteps radialDirs j vector2f cosf ang sinf ang i i radialSteps i dst i f trace rstep maxradius minradius radialSteps totalsmp i i radialSteps i sum f nsamples r minradius rstep i a a angularSteps a x center x radialDirs a x r y center y radialDirs a y r outside v img interpolate x y outside outside sum v nsamples trace dbgprintf sum nsamples dst i nsamples MIN_RADPROFILE_SMP_COUNT sum nsamples mean trace dbgprintf normalize NormalizeRadialProfile dst radialSteps OutputDebugString s c_str printf s c_str WriteToLog s c_str va_list ap va_start ap fmt buf VSNPRINTF buf buf fmt ap OutputDebugString buf fputs buf stdout WriteToLog buf va_end ap logFilename path l strlen f l f l f l l edenom sqrt sigma sigma y y img h y x x img w x DeltaX f erf x pos x f edenom f erf x pos x f edenom DeltaY f erf y pos y f edenom f erf y pos y f edenom img at x y Ibg I0 DeltaX DeltaY radialcov zlut w maxradius minradius zinterp ALLOCA zlut w splineInterp iz std::max std::min zlut h pos z weights fz pos z iz ComputeBSplineWeights weights fz r r zlut w r zlutv i i i zlutv weights i zlut at r i iz zinterp r zlutv iz int pos z if iz zinterp zlut data iz zlut h zinterp zlut data zlut h zlut w zlut0 zlut data pos z zlut w zlut1 zlut data int pos z zlut w zinterp ALLOCA zlut w r r zlut w r zinterp r Lerp zlut0 r zlut1 r pos z iz oversampleWidth oversampleSubdiv oversampleHeight oversampleSubdiv oxstep f oversampleWidth oystep f oversampleHeight y y image h y x x image w x s f ox ox oversampleWidth ox oy oy oversampleHeight oy X x ox f oxstep pos x f Y y oy f oystep pos y f pixr sqrtf X X Y Y r pixr minradius radialcov r zlut w r zlut w r r i int r s Lerp zinterp i zinterp i r i image at x y s oversampleWidth oversampleHeight S f sqrt size y y img h y x x img w x X x xp Y y yp r sqrtf X X Y Y v sinf r S expf r r S f img at x y v SNratio ApplyGaussianNoise img f SNratio img normalize std::string base std::string search base LPCSTR w_folder _T search c_str WIN32_FIND_DATA FindFileData HANDLE hFind hFind FindFirstFile w_folder FindFileData std::string dirName FindNextFile hFind FindFileData dirName FindFileData cFileName ext SPrintf base c_str dirName c_str SPrintf base c_str dirName c_str i fullpath size i i fullpath i fullpath i fullpath substr i time_t rawtime tm timeinfo time rawtime timeinfo localtime rawtime sprintf output timeinfo tm_year timeinfo tm_mon timeinfo tm_mday timeinfo tm_hour timeinfo tm_min timeinfo tm_sec path HMODULE hm NULL GetModuleHandleExA GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT LPCSTR GetLocalModuleFilename hm GetModuleFileNameA hm path path path std::string dllpath GetLocalModuleFilename GetDirectoryFromPath dllpath uint64_t freq time QueryPerformanceCounter LARGE_INTEGER time QueryPerformanceFrequency LARGE_INTEGER freq time double freq r r v r fabsf r v fabsf r v r r r r v r fabsf r v fabsf r v r r sum f i i rsteps i sum prof i mean sum rsteps rmssum2 i i rsteps i prof i mean rmssum2 prof i prof i invTotalrms f sqrt rmssum2 rsteps i i rsteps i prof i invTotalrms i i numBeads i j j planes j NormalizeRadialProfile zlut radialsteps planes i radialsteps j radialsteps std::list&lt; std::vector &lt;float&gt; data FILE f fopen filename f std::string buf std::vector&lt;float&gt; vals feof f c fgetc f c sep c vals push_back atof buf c_str buf clear c data push_back vals vals clear c sep c buf c fclose f std::vector&lt;std::vector&lt;float&gt; r r reserve data size r insert r begin data begin data end r w h uchar imgdata std::vector&lt;uchar&gt; jpgdata ReadToByteBuffer fn ReadJPEGFile jpgdata jpgdata size imgdata w h fbuf w h x x w h x fbuf x imgdata x f imgdata ImageData fbuf w h PathSeperator sep lutfile sep extension ReadJPEGFile lutfile std::string fn lutfile fn std::string fn begin fn begin fn find std::string num sep extension begin sep extension find sep extension end lutIndex atoi num c_str nbeads nplanes nsteps FILE f fopen fn c_str f std::runtime_error fn fread nbeads f fread nplanes f fread nsteps f fseek f nsteps nplanes lutIndex SEEK_SET ImageData lut ImageData::alloc nsteps nplanes fread lut data nsteps nplanes f fclose f lut normalize lut FILE f fopen filename f std::runtime_error SPrintf filename fseek f SEEK_END len ftell f fseek f SEEK_SET std::vector&lt;uchar&gt; buf len fread buf len f fclose f buf data ReadCSV file sep std::vector&lt;vector3f&gt; r data size i i data size i r i vector3f data i data i data i r va_list ap va_start ap fmt buf VSNPRINTF buf buf fmt ap va_end ap buf FILE f fopen file append f i i len i fprintf f d i fprintf f fclose f dbgprintf file FILE f fopen file f dbgprintf file labels i i w i fprintf f labels i fputs f y y h y x x w x i d y w x imag fprintf f d y w x real i x w fputs f fprintf f fclose f FILE f fopen file f labels i i w i fprintf f labels i fputs f y y h y x x w x fprintf f d y w x x w fputs f fprintf f fclose f dbgprintf file FILE f fopen filename c_str f std::runtime_error SPrintf filename c_str i i nResults i fprintf f results i x results i y results i z fclose f FILE f fopen file append f i i d size i fprintf f d i fprintf f fclose f dbgprintf file filenameEnd fullpath size filenameStart i fullpath size i i fullpath i extension empty extension fullpath substr i filenameEnd i fullpath i fullpath i directory fullpath substr i filenameStart i filename fullpath substr filenameStart filenameEnd filenameStart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCUDATracker.cu</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QueuedCUDATracker cc cudaDeviceList assign dev dev numdev b threadIdx x blockIdx x blockDim x r threadIdx y blockIdx y blockDim y b nbeads r radialsteps zlut pixel r plane b d_src b radialsteps r uchar cp uchar ALLOCA elemsize numelem T cudaDeviceSynchronize cudaMemcpy cp data T elemsize numelem cudaMemcpyDeviceToHost dbgprintf name i i numelem i uchar elem cp elemsize T i dbgprintf i hash elem elemsize QueuedCUDATracker cc bestScore bestDev numDev cudaGetDeviceCount numDev a a numDev a score cudaDeviceProp prop cudaGetDeviceProperties prop a score prop multiProcessorCount prop clockRate a bestScore score bestScore score bestDev a bestDev cudaDeviceList assign dev dev numdev resultMutex jobQueueMutex cfg cc InitializeDeviceList cfg numThreads cfg numThreads devices size numStreams cfg numThreads cudaGetDeviceProperties deviceProp devices index deviceProp major std::runtime_error numThreads deviceProp warpSize batchSize batchSize int deviceProp maxTexture2D cfg height f batchSize batchSize dbgprintf deviceProp name deviceProp multiProcessorCount numStreams dbgprintf deviceProp warpSize deviceProp maxThreadsPerBlock batchSize qi Init cfg batchSize std::vector&lt;float2&gt; zlut_radialgrid cfg zlut_angularsteps i i cfg zlut_angularsteps i ang f i float cfg zlut_angularsteps zlut_radialgrid i make_float2 cos ang sin ang uint i i devices size i Device d devices i cudaSetDevice d index qi InitDevice d qi_instance cfg d zlut_trigtable zlut_radialgrid dbgprintf outputTotalGPUMemUse streams reserve numStreams i i numStreams i streams push_back CreateStream devices i devices size i DeleteAllElems streams std::runtime_error dbgprintf streams OutputMemoryUse dbgprintf outputTotalGPUMemUse dbgprintf batchesDone useTextureCache resultCount zlut_build_flags quitScheduler schedulingThread Threads::Create SchedulingThreadEntryPoint gc_offsetFactor gc_gainFactor f localizeMode LT_OnlyCOM ForceCUDAKernelsToLoad &lt;&lt;&lt; dim3(),dim3() &gt; quitScheduler Threads::WaitAndClose schedulingThread DeleteAllElems streams DeleteAllElems devices zlut_build_flags flags Device d streams device cudaSetDevice d index nbeads d radial_zlut count std::vector&lt;vector2f&gt; positions nbeads profiles nbeads cfg zlut_radialsteps memset profiles nbeads cfg zlut_radialsteps parallel_for nbeads i CPUTracker trk cfg width cfg height img_data uchar data pitch cfg height i if pdt QTrkFloat trk SetImage img_data pitch pdt QTrkU8 trk SetImage8Bit uchar img_data pitch trk SetImage16Bit ushort img_data pitch CPU_ApplyOffsetGain trk i known_pos positions i known_pos i vector2f com trk ComputeMeanAndCOM bhit positions i trk ComputeQI com cfg qi_iterations cfg qi_radialsteps cfg qi_angstepspq cfg qi_angstep_factor cfg qi_minradius cfg qi_maxradius bhit trk ComputeRadialProfile profiles i cfg zlut_radialsteps cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius positions i device_vec&lt;float&gt; d_profiles nbeads cfg zlut_radialsteps d_profiles copyToDevice profiles nbeads cfg zlut_radialsteps profiles dim3 numThreads dim3 numBlocks nbeads numThreads x numThreads x cfg zlut_radialsteps numThreads y numThreads y AddProfilesToZLUT numBlocks numThreads streams stream d_profiles data nbeads cfg zlut_radialsteps plane d radial_zlut cudaStreamSynchronize streams stream resultMutex lock results clear resultCount resultMutex unlock resultMutex lock a a s JobCount a LocalizationJob j s jobs a LocalizationResult r r job j r firstGuess vector2f s com a x s com a y r pos vector3f s results a x s results a y s results a z r imageMean s imgMeans a r pos z ZLUTBiasCorrection s results a z devices radial_zlut h j zlutIndex results push_back r resultCount s JobCount resultMutex unlock qi com imagecopy zcomp getResults cudaEventElapsedTime imagecopy s batchStart s imageCopyDone cudaEventElapsedTime com s imageCopyDone s comDone cudaEventElapsedTime qi s comDone s qiDone cudaEventElapsedTime zcomp s qiDone s zcomputeDone cudaEventElapsedTime getResults s zcomputeDone s localizationDone time com com time qi qi time imageCopy imagecopy time zcompute zcomp time getResults getResults batchesDone gc_offset empty gc_gain empty index cfg width cfg height beadIndex gc_mutex lock gf gc_gainFactor of gc_offsetFactor gc_mutex unlock trk ApplyOffsetGain gc_offset empty gc_offset index gc_gain empty gc_gain index of gf Stream s Stream streamIndex s device device cudaSetDevice device index cudaStreamCreate s stream s images cudaImageListf::alloc cfg width cfg height batchSize s images allocateHostImageBuffer s hostImageBuf s jobs reserve batchSize s results init batchSize s com init batchSize s d_com init batchSize s d_resultpos init batchSize s results init batchSize s locParams init batchSize s imgMeans init batchSize s d_imgmeans init batchSize s d_locParams init batchSize s d_radialprofiles init cfg zlut_radialsteps batchSize qi InitStream s qi_instance cfg s stream batchSize qalign InitStream s qalign_instance cfg s stream batchSize cudaEventCreate s localizationDone cudaEventCreate s comDone cudaEventCreate s imageCopyDone cudaEventCreate s zcomputeDone cudaEventCreate s qiDone cudaEventCreate s imapDone cudaEventCreate s batchStart s s s JobCount Device d s device cudaSetDevice d index BaseKernelParams kp kp imgmeans s d_imgmeans data kp images s images kp njobs s JobCount kp locParams s d_locParams data cudaEventRecord s batchStart s stream s d_locParams copyToDevice s locParams data s JobCount s stream ScopedCPUProfiler p cpu_time imageCopy s images copyToDevice s hostImageBuf data s stream d calib_gain isEmpty d calib_offset isEmpty dim3 numThreads dim3 numBlocks cfg width numThreads x numThreads x cfg height numThreads y numThreads y s JobCount numThreads z numThreads z gc_mutex lock of gc_offsetFactor gf gc_gainFactor gc_mutex unlock ApplyOffsetGain numBlocks numThreads s stream kp s device calib_gain s device calib_offset gf of cudaEventRecord s imageCopyDone s stream TImageSampler::BindTexture s images ScopedCPUProfiler p cpu_time com BgCorrectedCOM&lt;TImageSampler&gt; blocks s JobCount threads s stream s JobCount s images s d_com data cfg com_bgcorrection s d_imgmeans data checksum s d_com data s JobCount cudaEventRecord s comDone s stream device_vec&lt;float3&gt; curpos s d_com s localizeFlags LT_QI ScopedCPUProfiler p cpu_time qi qi Execute TImageSampler kp cfg s qi_instance s device qi_instance s d_com s d_resultpos curpos s d_resultpos s localizeFlags LT_Gaussian2D G2MLE_Compute&lt;TImageSampler&gt; blocks s JobCount threads s stream kp cfg gauss2D_sigma cfg gauss2D_iterations s d_com data s d_resultpos data curpos s d_resultpos cudaEventRecord s qiDone s stream numZIterations s localizeFlags LT_ZLUTAlign i i numZIterations i ScopedCPUProfiler p cpu_time zcompute ZLUTParams zp zp planes d radial_zlut h zp angularSteps cfg zlut_angularsteps zp maxRadius cfg zlut_maxradius zp minRadius cfg zlut_minradius zp img d radial_zlut zp trigtable d zlut_trigtable data zp zcmpwindow d zcompareWindow data s localizeFlags LT_LocalizeZ dim3 numThreads dim3 numBlocks s JobCount numThreads x numThreads x cfg zlut_radialsteps numThreads y numThreads y ZLUT_RadialProfileKernel&lt;TImageSampler&gt; numBlocks numThreads s stream s JobCount s images zp curpos data s d_radialprofiles data s d_imgmeans data ZLUT_NormalizeProfiles blocks s JobCount threads s stream s JobCount zp s d_radialprofiles data s localizeFlags LT_LocalizeZ dim3 numThreads ZLUT_ComputeProfileMatchScores dim3 s JobCount numThreads x numThreads x zp planes numThreads y numThreads y numThreads s stream s JobCount zp s d_radialprofiles data s d_zlutcmpscores data s d_locParams data ZLUT_ComputeZ blocks s JobCount threads s stream s JobCount zp curpos data s d_zlutcmpscores data i ScopedCPUProfiler p cpu_time zlutAlign qalign Execute TImageSampler kp cfg s qalign_instance s device qalign_instance s d_resultpos s d_resultpos TImageSampler::UnbindTexture s images cudaEventRecord s zcomputeDone s stream ScopedCPUProfiler p cpu_time getResults s d_com copyToHost s com data s stream curpos copyToHost s results data s stream s d_imgmeans copyToHost s imgMeans data s stream cudaEventRecord s localizationDone s stream resultMutex lock numResults numResults maxResults results empty dstResults numResults results front results pop_front resultCount resultMutex unlock numResults Device srcd devices cudaSetDevice srcd index cudaImageListf src srcd radial_zlut tmp src w src h src count srcd radial_zlut copyToHost tmp i i src h src count i NormalizeRadialProfile tmp src w i src w SetRadialZLUT tmp src count src h bead bead src count bead step step cfg zlut_radialsteps step dbgprintf tmp bead cfg zlut_radialsteps step dbgprintf tmp jobQueueMutex lock uint i i streams size i streams i JobCount streams i state Stream::StreamExecuting streams i state Stream::StreamPendingExec jobQueueMutex unlock ConfigValueMap cvm cvm useTextureCache cvm f f batchesDone deviceReport SPrintf batchesDone batchSize streams size SPrintf time imageCopy f cpu_time imageCopy f SPrintf time qi f cpu_time qi f SPrintf time com f cpu_time com f SPrintf time zcompute f cpu_time zcompute f jobQueueMutex lock qlen uint a a streams size a qlen streams a JobCount jobQueueMutex unlock maxQueueLen maxQueueLen streams size batchSize qlen cudaImageListf zlut devices radial_zlut zlut data i i zlut count i img data i cfg zlut_radialsteps zlut h zlut copyImageToHost i img count devices radial_zlut count planes devices radial_zlut h rsteps cfg zlut_radialsteps jobQueueMutex lock Stream best uint i i streams size i Stream s streams i s state Stream::StreamIdle best s JobCount best JobCount best s jobQueueMutex unlock best best Threads::Sleep resultMutex lock r resultCount resultMutex unlock r numDevices cudaGetDeviceCount numDevices cfg cuda_device QTrkCUDA_UseBest cfg cuda_device GetBestCUDADevice devices push_back Device cfg cuda_device cfg cuda_device QTrkCUDA_UseAll i i numDevices i devices push_back Device i cfg cuda_device QTrkCUDA_UseList uint i i cudaDeviceList size i devices push_back Device cudaDeviceList i devices push_back Device cfg cuda_device deviceReport uint i i devices size i cudaDeviceProp p cudaGetDeviceProperties p devices i index deviceReport SPrintf p name i devices size ql GetQueueLength ql Stream s GetReadyStream jobQueueMutex lock jobIndex s jobs size LocalizationJob job jobInfo s jobs push_back job s localizeFlags localizeMode s locParams jobIndex zlutIndex jobInfo zlutIndex s jobs size batchSize s state Stream::StreamPendingExec jobQueueMutex unlock s imageBufMutex lock hostbuf s hostImageBuf cfg height cfg width jobIndex CopyImageToFloat uchar data cfg width cfg height pitch pdt hostbuf localizeMode LT_ClearFirstFourPixels i i i hostbuf i s imageBufMutex unlock QueuedCUDATracker param SchedulingThreadMain std::vector&lt;Stream*&gt; activeStreams quitScheduler jobQueueMutex lock Stream s uint i i streams size i streams i state Stream::StreamPendingExec s streams i s state Stream::StreamExecuting jobQueueMutex unlock s s imageBufMutex lock useTextureCache ExecuteBatch&lt;ImageSampler_Tex&gt; s ExecuteBatch&lt;ImageSampler_MemCopy&gt; s s imageBufMutex unlock activeStreams push_back s uint a a activeStreams size a Stream s activeStreams a s IsExecutionDone CopyStreamResults s s localizeFlags jobQueueMutex lock s jobs clear s state Stream::StreamIdle jobQueueMutex unlock activeStreams erase std::find activeStreams begin activeStreams end s Threads::Sleep name useTextureCache atoi value c_str Flush IsIdle jobQueueMutex lock localizeMode mode jobQueueMutex unlock gc_mutex lock gc_gainFactor gainFactor gc_offsetFactor offsetFactor gc_mutex unlock uint i i devices size i devices i SetPixelCalibrationImages offset gain cfg width cfg height nelem devices radial_zlut count cfg width cfg height offset gc_offset size nelem gc_offset resize nelem gc_offset assign offset offset nelem offset gc_offset clear gain gc_gain size nelem gc_gain reserve nelem gc_gain assign gain gain nelem gain gc_gain clear uint i i devices size i devices i SetRadialWeights zcmp uint i i devices size i devices i SetRadialZLUT data cfg zlut_radialsteps planes numLUTs uint i i streams size i StreamUpdateZLUTSize streams i cudaSetDevice s device index s d_zlutcmpscores init s device radial_zlut h batchSize cudaSetDevice index radial_zlut free calib_gain free calib_offset free cudaSetDevice index offset calib_offset free gain calib_gain free radial_zlut count gain calib_gain cudaImageListf::alloc img_width img_height radial_zlut count offset calib_offset cudaImageListf::alloc img_width img_height radial_zlut count j j radial_zlut count j gain calib_gain copyImageToDevice j gain img_width img_height j offset calib_offset copyImageToDevice j offset img_width img_height j cudaSetDevice index zcmp zcompareWindow copyToDevice zcmp radial_zlut w zcompareWindow free cudaSetDevice index radial_zlut free radial_zlut cudaImageListf::alloc radialsteps planes numLUTs data i i numLUTs i radial_zlut copyImageToDevice i data planes radialsteps i radial_zlut clear imageBufMutex SPrintf streamIndex c_str device hostImageBuf images data stream state StreamIdle localizeFlags cudaSetDevice device index images data images free cudaEventDestroy localizationDone cudaEventDestroy qiDone cudaEventDestroy comDone cudaEventDestroy imageCopyDone cudaEventDestroy zcomputeDone cudaEventDestroy imapDone cudaEventDestroy batchStart stream cudaStreamDestroy stream cudaSetDevice device index cudaEventQuery localizationDone cudaSuccess deviceMem d_com memsize d_locParams memsize qi_instance memsize d_radialprofiles memsize d_resultpos memsize d_zlutcmpscores memsize images totalNumBytes hostMem hostImageBuf memsize com memsize locParams memsize results memsize dbgprintf hostMem deviceMem images totalNumBytes time time start GetPreciseTime end GetPreciseTime time start end</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">random_distr.h</field>
    <field name="url">random__distr_8h.html</field>
    <field name="keywords">random_distr.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rand_uniform</field>
    <field name="args">()</field>
    <field name="url">random__distr_8h.html#acb503a9e3a00d9e7d9da6864e91f1bfd</field>
    <field name="keywords">rand_uniform</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rand_normal</field>
    <field name="args">()</field>
    <field name="url">random__distr_8h.html#ae83163e30e8f71fae429917830a50763</field>
    <field name="keywords">rand_normal</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">rand_poisson</field>
    <field name="args">(T lambda)</field>
    <field name="url">random__distr_8h.html#af8d7b9bf635d185f355094d12378ffc0</field>
    <field name="keywords">rand_poisson</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ResultManager.cpp</field>
    <field name="url">_result_manager_8cpp.html</field>
    <field name="keywords">ResultManager.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">BINFILE_VERSION</field>
    <field name="url">_result_manager_8cpp.html#afad8d07e0bdee1c2c74172f16404edb3</field>
    <field name="keywords">BINFILE_VERSION</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ResultManager.h</field>
    <field name="url">_result_manager_8h.html</field>
    <field name="keywords">ResultManager.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">scalar_types.h</field>
    <field name="url">scalar__types_8h.html</field>
    <field name="keywords">scalar_types.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">scalar_t</field>
    <field name="url">scalar__types_8h.html#a03fcef84665498b9cfcf9c7cc25574e9</field>
    <field name="keywords">scalar_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">complex_t</field>
    <field name="url">scalar__types_8h.html#abaffcd8bea58063cc6c608dda082ad05</field>
    <field name="keywords">complex_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">std_incl.h</field>
    <field name="url">std__incl_8h.html</field>
    <field name="keywords">std_incl.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">_CRT_SECURE_NO_WARNINGS</field>
    <field name="url">std__incl_8h.html#af08ec37a8c99d747fb60fa15bc28678b</field>
    <field name="keywords">_CRT_SECURE_NO_WARNINGS _CRT_SECURE_NO_WARNINGS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">STRCASECMP</field>
    <field name="url">std__incl_8h.html#a96baadbb7d3a25a8a5b99aef8b342392</field>
    <field name="keywords">STRCASECMP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">STRNCASECMP</field>
    <field name="url">std__incl_8h.html#a9af901db56190e28d0bb87847215287c</field>
    <field name="keywords">STRNCASECMP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SNPRINTF</field>
    <field name="url">std__incl_8h.html#a770571e12ff9370899184528f4b4626d</field>
    <field name="keywords">SNPRINTF</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">VSNPRINTF</field>
    <field name="url">std__incl_8h.html#ac2e4f48c3da557e8b268aee96009e135</field>
    <field name="keywords">VSNPRINTF</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ALLOCA</field>
    <field name="args">(size)</field>
    <field name="url">std__incl_8h.html#a72fc0ed307a114ba9a46ebd095267d2f</field>
    <field name="keywords">ALLOCA</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ALLOCA_ARRAY</field>
    <field name="args">(T, N)</field>
    <field name="url">std__incl_8h.html#a37dbccb865134ee3a70c5044b365ded7</field>
    <field name="keywords">ALLOCA_ARRAY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">vector2f</field>
    <field name="url">std__incl_8h.html#aba974726076ec2d63a67114c536d123e</field>
    <field name="keywords">vector2f</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">vector2d</field>
    <field name="url">std__incl_8h.html#abebac00e777dd3633bde7c630e906a15</field>
    <field name="keywords">vector2d</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">vector3f</field>
    <field name="url">std__incl_8h.html#a2feaef1d85a74bd5cf80df91b1a9a914</field>
    <field name="keywords">vector3f</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">vector3d</field>
    <field name="url">std__incl_8h.html#a64f2913c767e784a10af09095c718cf3</field>
    <field name="keywords">vector3d</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">uint</field>
    <field name="url">std__incl_8h.html#a91ad9478d81a7aaf2593e8d9c3d06a14</field>
    <field name="keywords">uint</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ushort</field>
    <field name="url">std__incl_8h.html#ab95f123a6c9bcfee6a343170ef8c5f69</field>
    <field name="keywords">ushort</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ulong</field>
    <field name="url">std__incl_8h.html#a718b4eb2652c286f4d42dc18a8e71a1a</field>
    <field name="keywords">ulong</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">uchar</field>
    <field name="url">std__incl_8h.html#a65f85814a8290f9797005d3b28e7e5fc</field>
    <field name="keywords">uchar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sqrt</field>
    <field name="args">(const vector3&lt; T &gt; &amp;a)</field>
    <field name="url">std__incl_8h.html#a8a38721046513951c4bfc32bf101e180</field>
    <field name="keywords">sqrt</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">threads.h</field>
    <field name="url">threads_8h.html</field>
    <field name="keywords">threads.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ThreadHandle</field>
    <field name="url">threads_8h.html#a255f536acd94d39cb54244b63321ca80</field>
    <field name="keywords">ThreadHandle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">parallel_for</field>
    <field name="args">(int count, TF f)</field>
    <field name="url">threads_8h.html#a6693c34b211b5d81e0d7a362457d0449</field>
    <field name="keywords">parallel_for</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">utils.cpp</field>
    <field name="url">utils_8cpp.html</field>
    <field name="keywords">utils.cpp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetCurrentOutputPath</field>
    <field name="args">(bool ext)</field>
    <field name="url">utils_8cpp.html#a5db0cac9cdabe121a5e8f63bb22c3cc4</field>
    <field name="keywords">GetCurrentOutputPath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetFormattedTimeString</field>
    <field name="args">(char *output)</field>
    <field name="url">utils_8cpp.html#a54368b144ba7937abad8461e3b467659</field>
    <field name="keywords">GetFormattedTimeString</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgsetlogfile</field>
    <field name="args">(const char *path)</field>
    <field name="url">utils_8cpp.html#ab8de7c8e4f80ba5a6b1fcf8da603cd67</field>
    <field name="keywords">dbgsetlogfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetLocalModuleFilename</field>
    <field name="args">()</field>
    <field name="url">utils_8cpp.html#aeb7eb5c2a751102d58ea3d7b15bd5bcf</field>
    <field name="keywords">GetLocalModuleFilename</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteToLog</field>
    <field name="args">(const char *str)</field>
    <field name="url">utils_8cpp.html#a573f566a9717a199b5311d89e75aa010</field>
    <field name="keywords">WriteToLog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetDirectoryFromPath</field>
    <field name="args">(std::string fullpath)</field>
    <field name="url">utils_8cpp.html#abb79ff4e841148f46f68fed19d087169</field>
    <field name="keywords">GetDirectoryFromPath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetLocalModulePath</field>
    <field name="args">()</field>
    <field name="url">utils_8cpp.html#a94c5c46fa5ac0e27fa3f171b171fe8ae</field>
    <field name="keywords">GetLocalModulePath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">file_ext</field>
    <field name="args">(const char *f)</field>
    <field name="url">utils_8cpp.html#abb4af55bf064f76f19025b5d9a70f723</field>
    <field name="keywords">file_ext</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPrintf</field>
    <field name="args">(const char *fmt,...)</field>
    <field name="url">utils_8cpp.html#aba26a6b64035ef7962a63b760dd9013e</field>
    <field name="keywords">SPrintf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgout</field>
    <field name="args">(const std::string &amp;s)</field>
    <field name="url">utils_8cpp.html#a5b94ae341d9ebca67ebec2e52e6cc800</field>
    <field name="keywords">dbgout</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgprintf</field>
    <field name="args">(const char *fmt,...)</field>
    <field name="url">utils_8cpp.html#a4a7132c90e490d24edecb391a754a9c0</field>
    <field name="keywords">dbgprintf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateTestImage</field>
    <field name="args">(ImageData &amp;img, float xp, float yp, float size, float SNratio)</field>
    <field name="url">utils_8cpp.html#a2bb752417033483e1acda83da3bc800e</field>
    <field name="keywords">GenerateTestImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeCRP</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius, vector2f center, ImageData *img, float paddingValue, float *crpmap)</field>
    <field name="url">utils_8cpp.html#ab6d583c937db5602a34e949fcf64805d</field>
    <field name="keywords">ComputeCRP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeBgCorrectedCOM1D</field>
    <field name="args">(float *data, int len, float cf)</field>
    <field name="url">utils_8cpp.html#af2c5d75118d6b7de9ac5300c92124b2c</field>
    <field name="keywords">ComputeBgCorrectedCOM1D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NormalizeRadialProfile</field>
    <field name="args">(scalar_t *prof, int rsteps)</field>
    <field name="url">utils_8cpp.html#a404fa660440d30ed70566aebf9f9e94a</field>
    <field name="keywords">NormalizeRadialProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NormalizeZLUT</field>
    <field name="args">(float *zlut, int numBeads, int planes, int radialsteps)</field>
    <field name="url">utils_8cpp.html#a394f1ad70cd62465e18850f87c93351c</field>
    <field name="keywords">NormalizeZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeRadialProfile</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius, vector2f center, ImageData *img, float mean, bool normalize)</field>
    <field name="url">utils_8cpp.html#a58b8cd6cf896ba78d6e23d6ead96d1fb</field>
    <field name="keywords">ComputeRadialProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sq</field>
    <field name="args">(float x)</field>
    <field name="url">utils_8cpp.html#a5d9a285a9ed595c633d5fc06e622df8f</field>
    <field name="keywords">sq</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateImageFromLUT</field>
    <field name="args">(ImageData *image, ImageData *zlut, float minradius, float maxradius, vector3f pos, bool splineInterp, int oversampleSubdiv)</field>
    <field name="url">utils_8cpp.html#af574edb94793976b749c0240c79b1c48</field>
    <field name="keywords">GenerateImageFromLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateGaussianSpotImage</field>
    <field name="args">(ImageData *img, vector2f pos, float sigma, float I0, float Ibg)</field>
    <field name="url">utils_8cpp.html#a6203254588fe20c359c382ba4ddd9627</field>
    <field name="keywords">GenerateGaussianSpotImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ApplyPoissonNoise</field>
    <field name="args">(ImageData &amp;img, float poissonMax, float maxval)</field>
    <field name="url">utils_8cpp.html#ac2ddbf383f4539cdec45a8001a435a1a</field>
    <field name="keywords">ApplyPoissonNoise</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ApplyGaussianNoise</field>
    <field name="args">(ImageData &amp;img, float sigma)</field>
    <field name="url">utils_8cpp.html#a164d40d76379d0bb95a5ff0dd935aa1f</field>
    <field name="keywords">ApplyGaussianNoise</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadCSV</field>
    <field name="args">(const char *filename, char sep)</field>
    <field name="url">utils_8cpp.html#a97c4edb27d72c98256ae9ba9d9a92145</field>
    <field name="keywords">ReadCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadVector3CSV</field>
    <field name="args">(const char *file, char sep)</field>
    <field name="url">utils_8cpp.html#abc30341e16799156a1b3b6093ea7d3d5</field>
    <field name="keywords">ReadVector3CSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteTrace</field>
    <field name="args">(std::string filename, vector3f *results, int nResults)</field>
    <field name="url">utils_8cpp.html#ac53dbc16bbb47e927b088892e806dcf7</field>
    <field name="keywords">WriteTrace</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteVectorAsCSVRow</field>
    <field name="args">(const char *file, std::vector&lt; float &gt; d, bool append)</field>
    <field name="url">utils_8cpp.html#aeb2d139686549bd29fe86f72247eecf1</field>
    <field name="keywords">WriteVectorAsCSVRow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteArrayAsCSVRow</field>
    <field name="args">(const char *file, float *d, int len, bool append)</field>
    <field name="url">utils_8cpp.html#aa0fb8da4922e3042928ed9f6388bc09a</field>
    <field name="keywords">WriteArrayAsCSVRow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteImageAsCSV</field>
    <field name="args">(const char *file, float *d, int w, int h, const char *labels[])</field>
    <field name="url">utils_8cpp.html#ad594d63fab5898e75c6eeb533368aba8</field>
    <field name="keywords">WriteImageAsCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteComplexImageAsCSV</field>
    <field name="args">(const char *file, std::complex&lt; float &gt; *d, int w, int h, const char *labels[])</field>
    <field name="url">utils_8cpp.html#a1a1189014022a9f0fe2333757512155a</field>
    <field name="keywords">WriteComplexImageAsCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadToByteBuffer</field>
    <field name="args">(const char *filename)</field>
    <field name="url">utils_8cpp.html#afc3a35e21ebcc6c29a05f25c58c74157</field>
    <field name="keywords">ReadToByteBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadJPEGFile</field>
    <field name="args">(const char *fn)</field>
    <field name="url">utils_8cpp.html#a9d2506602d1c5b6419101f13380ddb59</field>
    <field name="keywords">ReadJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CopyImageToFloat</field>
    <field name="args">(uchar *data, int width, int height, int pitch, QTRK_PixelDataType pdt, float *dst)</field>
    <field name="url">utils_8cpp.html#aa12cb78bf8b173dab3392d1e16944b6d</field>
    <field name="keywords">CopyImageToFloat</field>
    <field name="text">Copies image data from a generic QTRK_PixelDataType array to a float array data Array with the data in the pdt type width Width of the image height Height of the image pitch Width of the array in memory pdt QTRK_PixelDataType specifier for data dst Pre-allocated float array in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetPreciseTime</field>
    <field name="args">()</field>
    <field name="url">utils_8cpp.html#a11abc9edca3542dd4e74dadf99340fa1</field>
    <field name="keywords">GetPreciseTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NearestPowerOf2</field>
    <field name="args">(int v)</field>
    <field name="url">utils_8cpp.html#a93409977ae90735769d0d2f37b19604e</field>
    <field name="keywords">NearestPowerOf2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NearestPowerOf3</field>
    <field name="args">(int v)</field>
    <field name="url">utils_8cpp.html#a5f7925a9c145be917c154215435e26fc</field>
    <field name="keywords">NearestPowerOf3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeRadialBinWindow</field>
    <field name="args">(int rsteps)</field>
    <field name="url">utils_8cpp.html#a8657c1536ca3621943042411f4644e21</field>
    <field name="keywords">ComputeRadialBinWindow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadLUTFile</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">utils_8cpp.html#afa12308b716c890001e2b072f45d4a74</field>
    <field name="keywords">ReadLUTFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">logFilename</field>
    <field name="url">utils_8cpp.html#ae003eabff7038472981e17852dc6aa82</field>
    <field name="keywords">logFilename</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">utils.h</field>
    <field name="url">utils_8h.html</field>
    <field name="keywords">utils.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ImageData</field>
    <field name="url">utils_8h.html#a2d6726594ce64e82b9222b183f2571d1</field>
    <field name="keywords">ImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ImageDatad</field>
    <field name="url">utils_8h.html#ae917689aa489b1309e56dbdc9bf6bbc0</field>
    <field name="keywords">ImageDatad</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">isNAN</field>
    <field name="args">(const T &amp;v)</field>
    <field name="url">utils_8h.html#aac23f61b5f16aea68d0f3501fd2541e8</field>
    <field name="keywords">isNAN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetFormattedTimeString</field>
    <field name="args">(char *output)</field>
    <field name="url">utils_8h.html#a54368b144ba7937abad8461e3b467659</field>
    <field name="keywords">GetFormattedTimeString</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetCurrentOutputPath</field>
    <field name="args">(bool ext=true)</field>
    <field name="url">utils_8h.html#aff271eeece388bbcd74533ec2f2a3863</field>
    <field name="keywords">GetCurrentOutputPath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgout</field>
    <field name="args">(const std::string &amp;s)</field>
    <field name="url">utils_8h.html#a5b94ae341d9ebca67ebec2e52e6cc800</field>
    <field name="keywords">dbgout</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPrintf</field>
    <field name="args">(const char *fmt,...)</field>
    <field name="url">utils_8h.html#aba26a6b64035ef7962a63b760dd9013e</field>
    <field name="keywords">SPrintf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgprintf</field>
    <field name="args">(const char *fmt,...)</field>
    <field name="url">utils_8h.html#a4a7132c90e490d24edecb391a754a9c0</field>
    <field name="keywords">dbgprintf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgsetlogfile</field>
    <field name="args">(const char *path)</field>
    <field name="url">utils_8h.html#ab8de7c8e4f80ba5a6b1fcf8da603cd67</field>
    <field name="keywords">dbgsetlogfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DeleteAllElems</field>
    <field name="args">(T &amp;c)</field>
    <field name="url">utils_8h.html#a79b36225c16ffe10c47c2aae8bee2d99</field>
    <field name="keywords">DeleteAllElems</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">normalize</field>
    <field name="args">(TPixel *d, uint w, uint h)</field>
    <field name="url">utils_8h.html#a32b5810b69072511c66006593bcf7a89</field>
    <field name="keywords">normalize</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Lerp</field>
    <field name="args">(T a, T b, float x)</field>
    <field name="url">utils_8h.html#a19361b487ecc29968d6a8924f5601bfa</field>
    <field name="keywords">Lerp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interpolate</field>
    <field name="args">(T *image, int width, int height, float x, float y, bool *outside=0)</field>
    <field name="url">utils_8h.html#aa9cfad3280334f04e799bb33b442f653</field>
    <field name="keywords">Interpolate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interpolate1D</field>
    <field name="args">(T *d, int len, float x)</field>
    <field name="url">utils_8h.html#aa68dad6ceda865eebe8f3e08f8fc86b0</field>
    <field name="keywords">Interpolate1D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interpolate1D</field>
    <field name="args">(const std::vector&lt; T &gt; &amp;d, float x)</field>
    <field name="url">utils_8h.html#aa89e8d99c3fc0547c71a7581e94e5613</field>
    <field name="keywords">Interpolate1D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StdDeviation</field>
    <field name="args">(T *start, T *end)</field>
    <field name="url">utils_8h.html#a94a47cedcb61227f25c64c5157508e85</field>
    <field name="keywords">StdDeviation</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeRadialBinWindow</field>
    <field name="args">(int rsteps)</field>
    <field name="url">utils_8h.html#a8657c1536ca3621943042411f4644e21</field>
    <field name="keywords">ComputeRadialBinWindow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeBgCorrectedCOM1D</field>
    <field name="args">(float *data, int len, float cf=2.0f)</field>
    <field name="url">utils_8h.html#aacbb63aefbb719d06ec7ec2839585744</field>
    <field name="keywords">ComputeBgCorrectedCOM1D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeCRP</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius, vector2f center, ImageData *src, float mean, float *crpmap=0)</field>
    <field name="url">utils_8h.html#a6bf23a91105b7578ec29a4f3d587ec89</field>
    <field name="keywords">ComputeCRP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeRadialProfile</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius, vector2f center, ImageData *src, float mean, bool normalize)</field>
    <field name="url">utils_8h.html#a7148d0b8e59fa406d35f0e193628773d</field>
    <field name="keywords">ComputeRadialProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NormalizeRadialProfile</field>
    <field name="args">(float *prof, int rsteps)</field>
    <field name="url">utils_8h.html#a61c3769ab239eae69caa17b97454aee3</field>
    <field name="keywords">NormalizeRadialProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NormalizeZLUT</field>
    <field name="args">(float *zlut, int numLUTs, int planes, int radialsteps)</field>
    <field name="url">utils_8h.html#a676d4c7bb55f26c3629e9f060b2cfef5</field>
    <field name="keywords">NormalizeZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateImageFromLUT</field>
    <field name="args">(ImageData *image, ImageData *zlut, float minradius, float maxradius, vector3f pos, bool useSplineInterp=true, int ovs=4)</field>
    <field name="url">utils_8h.html#aa47207cff3792968b81532f38f3e9b69</field>
    <field name="keywords">GenerateImageFromLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ApplyPoissonNoise</field>
    <field name="args">(ImageData &amp;img, float poissonMax, float maxValue=255)</field>
    <field name="url">utils_8h.html#a6c2fdf71d0616262a6706187851a69c1</field>
    <field name="keywords">ApplyPoissonNoise</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ApplyGaussianNoise</field>
    <field name="args">(ImageData &amp;img, float sigma)</field>
    <field name="url">utils_8h.html#a164d40d76379d0bb95a5ff0dd935aa1f</field>
    <field name="keywords">ApplyGaussianNoise</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteComplexImageAsCSV</field>
    <field name="args">(const char *file, std::complex&lt; float &gt; *d, int w, int h, const char *labels[]=0)</field>
    <field name="url">utils_8h.html#a5fc7ffd129b030e18b0cd2438a6205b1</field>
    <field name="keywords">WriteComplexImageAsCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteArrayAsCSVRow</field>
    <field name="args">(const char *file, float *d, int len, bool append)</field>
    <field name="url">utils_8h.html#aa0fb8da4922e3042928ed9f6388bc09a</field>
    <field name="keywords">WriteArrayAsCSVRow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteVectorAsCSVRow</field>
    <field name="args">(const char *file, std::vector&lt; float &gt; d, bool append)</field>
    <field name="url">utils_8h.html#aeb2d139686549bd29fe86f72247eecf1</field>
    <field name="keywords">WriteVectorAsCSVRow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteImageAsCSV</field>
    <field name="args">(const char *file, float *d, int w, int h, const char *labels[]=0)</field>
    <field name="url">utils_8h.html#a9896b62cf125008faeb27b5bad5b3c61</field>
    <field name="keywords">WriteImageAsCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadCSV</field>
    <field name="args">(const char *filename, char sep=&apos;\t&apos;)</field>
    <field name="url">utils_8h.html#af9643a3b319a2bd030772b21d187850c</field>
    <field name="keywords">ReadCSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadVector3CSV</field>
    <field name="args">(const char *file, char sep=&apos;\t&apos;)</field>
    <field name="url">utils_8h.html#ade675d97d337ee739562ee7ca4a50808</field>
    <field name="keywords">ReadVector3CSV</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteTrace</field>
    <field name="args">(std::string file, vector3f *results, int nResults)</field>
    <field name="url">utils_8h.html#a892e890722fec10f712158e4f7bdd0f0</field>
    <field name="keywords">WriteTrace</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateTestImage</field>
    <field name="args">(ImageData &amp;img, float xp, float yp, float size, float MaxPhotons)</field>
    <field name="url">utils_8h.html#a4295710d6f01ca4fd27a41dd51a6d3b9</field>
    <field name="keywords">GenerateTestImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetLocalModuleFilename</field>
    <field name="args">()</field>
    <field name="url">utils_8h.html#aeb7eb5c2a751102d58ea3d7b15bd5bcf</field>
    <field name="keywords">GetLocalModuleFilename</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetLocalModulePath</field>
    <field name="args">()</field>
    <field name="url">utils_8h.html#a94c5c46fa5ac0e27fa3f171b171fe8ae</field>
    <field name="keywords">GetLocalModulePath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetDirectoryFromPath</field>
    <field name="args">(std::string fullpath)</field>
    <field name="url">utils_8h.html#abb79ff4e841148f46f68fed19d087169</field>
    <field name="keywords">GetDirectoryFromPath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">file_ext</field>
    <field name="args">(const char *f)</field>
    <field name="url">utils_8h.html#abb4af55bf064f76f19025b5d9a70f723</field>
    <field name="keywords">file_ext</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadJPEGFile</field>
    <field name="args">(const char *fn)</field>
    <field name="url">utils_8h.html#a9d2506602d1c5b6419101f13380ddb59</field>
    <field name="keywords">ReadJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadLUTFile</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">utils_8h.html#afa12308b716c890001e2b072f45d4a74</field>
    <field name="keywords">ReadLUTFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadJPEGFile</field>
    <field name="args">(uchar *srcbuf, int srclen, uchar **data, int *width, int *height)</field>
    <field name="url">utils_8h.html#aca9c9daac87f0810622bb7e207e4587f</field>
    <field name="keywords">ReadJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteJPEGFile</field>
    <field name="args">(uchar *data, int w, int h, const char *filename, int quality)</field>
    <field name="url">utils_8h.html#a77db3a4044f8f77b5a550b6f05962172</field>
    <field name="keywords">WriteJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FloatToJPEGFile</field>
    <field name="args">(const char *name, const float *d, int w, int h)</field>
    <field name="url">utils_8h.html#a197d79f00fb185491c4d109e966ca9ef</field>
    <field name="keywords">FloatToJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">WriteJPEGFile</field>
    <field name="args">(const char *name, const ImageData &amp;img)</field>
    <field name="url">utils_8h.html#a1185e2d2592ebcef7e20900fde3198d9</field>
    <field name="keywords">WriteJPEGFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NearestPowerOf2</field>
    <field name="args">(int v)</field>
    <field name="url">utils_8h.html#a93409977ae90735769d0d2f37b19604e</field>
    <field name="keywords">NearestPowerOf2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NearestPowerOf3</field>
    <field name="args">(int v)</field>
    <field name="url">utils_8h.html#a5f7925a9c145be917c154215435e26fc</field>
    <field name="keywords">NearestPowerOf3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenerateGaussianSpotImage</field>
    <field name="args">(ImageData *img, vector2f pos, float sigma, float I0, float Ibg)</field>
    <field name="url">utils_8h.html#a6203254588fe20c359c382ba4ddd9627</field>
    <field name="keywords">GenerateGaussianSpotImage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ReadToByteBuffer</field>
    <field name="args">(const char *filename)</field>
    <field name="url">utils_8h.html#afc3a35e21ebcc6c29a05f25c58c74157</field>
    <field name="keywords">ReadToByteBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetPreciseTime</field>
    <field name="args">()</field>
    <field name="url">utils_8h.html#a11abc9edca3542dd4e74dadf99340fa1</field>
    <field name="keywords">GetPreciseTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">floatToNormalizedInt</field>
    <field name="args">(T *dst, const float *src, uint w, uint h, T maxValue)</field>
    <field name="url">utils_8h.html#a5fe3abd0cc452e818b27d31aa9e09e46</field>
    <field name="keywords">floatToNormalizedInt</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">floatToNormalizedInt</field>
    <field name="args">(const float *src, uint w, uint h, T maxValue)</field>
    <field name="url">utils_8h.html#a80836b4b4849147020be438d63743a6a</field>
    <field name="keywords">floatToNormalizedInt</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeStdDev</field>
    <field name="args">(T *data, int len)</field>
    <field name="url">utils_8h.html#a862170e4b42dfe51e108e159dde39e54</field>
    <field name="keywords">ComputeStdDev</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">qselect</field>
    <field name="args">(T *data, int start, int end, int k)</field>
    <field name="url">utils_8h.html#a4b0a27d7d56f378a09fa03dd12191278</field>
    <field name="keywords">qselect</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">erf</field>
    <field name="args">(T x)</field>
    <field name="url">utils_8h.html#ab395c4718c08b423258c297fe9b1cae8</field>
    <field name="keywords">erf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">test.cu</field>
    <field name="url">test_8cu.html</field>
    <field name="keywords">test.cu</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkParams</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#aa2e677b0099389a9137abf21b6a11b61</field>
    <field name="keywords">BenchmarkParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">getPath</field>
    <field name="args">(const char *file)</field>
    <field name="url">test_8cu.html#ac9bbcd500f70faf6c53a4d2a805bddd0</field>
    <field name="keywords">getPath</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">mul_conjugate</field>
    <field name="args">(float2 a, float2 b)</field>
    <field name="url">test_8cu.html#a417f15fefe4dac05048eac1780fd902c</field>
    <field name="keywords">mul_conjugate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ShowCUDAError</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a5ec21c062fbb718eb272432b5473813a</field>
    <field name="keywords">ShowCUDAError</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">compute</field>
    <field name="args">(int idx, float *buf, int s)</field>
    <field name="url">test_8cu.html#ab0b9205f1595a5487a58172abfab6925</field>
    <field name="keywords">compute</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">testWithGlobal</field>
    <field name="args">(int n, int s, float *result, float *buf)</field>
    <field name="url">test_8cu.html#a166bc95ca5b0b00fe336b75aff678668</field>
    <field name="keywords">testWithGlobal</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">testWithShared</field>
    <field name="args">(int n, int s, float *result)</field>
    <field name="url">test_8cu.html#a21ef64381376f5cd30c6672775586241</field>
    <field name="keywords">testWithShared</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestSharedMem</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a7d13a69e192df853a4d4d9ecd28dbd62</field>
    <field name="keywords">TestSharedMem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkCompareTest</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a72c3d946d0b5db06ff1a296d1eab3ec1</field>
    <field name="keywords">QTrkCompareTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">listDevices</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a99990087b79839ab70fcf166fa1ee811</field>
    <field name="keywords">listDevices</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SimpleKernel</field>
    <field name="args">(int N, float *a)</field>
    <field name="url">test_8cu.html#a225b948eb316b51ce89ef78d73bf1114</field>
    <field name="keywords">SimpleKernel</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestAsync</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a34793abe42580080c6393ec2b757d045</field>
    <field name="keywords">TestAsync</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">emptyKernel</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#ad9b2c50ca94fbb436128f97475148d84</field>
    <field name="keywords">emptyKernel</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SpeedTest</field>
    <field name="args">(const QTrkSettings &amp;cfg, QueuedTracker *qtrk, int count, bool haveZLUT, LocMode_t locType, float *scheduleTime, bool gaincorrection=false)</field>
    <field name="url">test_8cu.html#a7522ae4758ce1a51e910c5c7bc0754fc</field>
    <field name="keywords">SpeedTest</field>
    <field name="text">qtrk- ScheduleLocalization uchar* image cfg.width float QTrkFloat flags n 0 0 0 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NearestPowerOfTwo</field>
    <field name="args">(int v)</field>
    <field name="url">test_8cu.html#a734d595c55ad19e5588166314c407985</field>
    <field name="keywords">NearestPowerOfTwo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SmallestPowerOfTwo</field>
    <field name="args">(int minval)</field>
    <field name="url">test_8cu.html#a217db03f0523b4bb2d71cfacb0121b7c</field>
    <field name="keywords">SmallestPowerOfTwo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SpeedCompareTest</field>
    <field name="args">(int w, LocalizeModeEnum locMode, bool haveZLUT, int qi_iterations=5)</field>
    <field name="url">test_8cu.html#a386abc59c14c98a64bdb672b4e671a3f</field>
    <field name="keywords">SpeedCompareTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProfileSpeedVsROI</field>
    <field name="args">(LocalizeModeEnum locMode, const char *outputcsv, bool haveZLUT, int qi_iterations)</field>
    <field name="url">test_8cu.html#a398bf23d2be3e7a123ba643f6f3a0b3c</field>
    <field name="keywords">ProfileSpeedVsROI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CompareAccuracy</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">test_8cu.html#a52f6a285cdac289bef2e449cb1278da1</field>
    <field name="keywords">CompareAccuracy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BasicQTrkTest</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a2b63751ab1973447f1bffc03497065d3</field>
    <field name="keywords">BasicQTrkTest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BasicQTrkTest_RM</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a6c8a00f627901e0dcf63c20941b47703</field>
    <field name="keywords">BasicQTrkTest_RM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestGauss2D</field>
    <field name="args">(bool calib)</field>
    <field name="url">test_8cu.html#a65c40fb3fc43deca2fe22e72b77c5bfc</field>
    <field name="keywords">TestGauss2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestRadialLUTGradientMethod</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#afb0912d78b2802b324d5a8500fc84d87</field>
    <field name="keywords">TestRadialLUTGradientMethod</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QICompare</field>
    <field name="args">(const char *lutfile)</field>
    <field name="url">test_8cu.html#a4e36322bb381a1b9b9eae0e1e6b4a763</field>
    <field name="keywords">QICompare</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TestBenchmarkLUT</field>
    <field name="args">()</field>
    <field name="url">test_8cu.html#a8583e2509b7fd83174900ef3e1158c7d</field>
    <field name="keywords">TestBenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">check_arg</field>
    <field name="args">(const std::vector&lt; std::string &gt; &amp;args, const char *name, T *param)</field>
    <field name="url">test_8cu.html#adb9b960bf793e814eeeb65f6a67e0ab9</field>
    <field name="keywords">check_arg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">check_strarg</field>
    <field name="args">(const std::vector&lt; std::string &gt; &amp;args, const char *name, std::string *param)</field>
    <field name="url">test_8cu.html#a24cd40cfdf669f745fb58fda2a99469c</field>
    <field name="keywords">check_strarg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CmdLineRun</field>
    <field name="args">(int argc, char *argv[])</field>
    <field name="url">test_8cu.html#acd967d59fdcafc56712132e13ff15f55</field>
    <field name="keywords">CmdLineRun</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BuildZLUT</field>
    <field name="args">(std::string folder, outputter *output)</field>
    <field name="url">test_8cu.html#a4f42565c78afe260ab6c48197a692712</field>
    <field name="keywords">BuildZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">main</field>
    <field name="args">(int argc, char *argv[])</field>
    <field name="url">test_8cu.html#a0ddf1224851353fc92bfbff6f499fa97</field>
    <field name="keywords">main</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaSharedMem</field>
    <field name="args">[]</field>
    <field name="url">test_8cu.html#a0b31a228ca14964b01076fffd9d3b201</field>
    <field name="keywords">cudaSharedMem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cmp_cpu_qi_prof</field>
    <field name="url">test_8cu.html#a4504c3c7ffae71a4f843424dd228b123</field>
    <field name="keywords">cmp_cpu_qi_prof</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cmp_gpu_qi_prof</field>
    <field name="url">test_8cu.html#a0f78dfbff0fc38f749d5a83cf7293b89</field>
    <field name="keywords">cmp_gpu_qi_prof</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cmp_cpu_qi_fft_out</field>
    <field name="url">test_8cu.html#a9d2895908a386c1f380b8085f1e28340</field>
    <field name="keywords">cmp_cpu_qi_fft_out</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cmp_gpu_qi_fft_out</field>
    <field name="url">test_8cu.html#a968a1f45bfd391f01eaee72d1ba61237</field>
    <field name="keywords">cmp_gpu_qi_fft_out</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">test.cu</field>
    <field name="url">test_8cu_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QTrkComputedConfig cc cc width cc height cc Update QueuedCUDATracker qtrk cc zmin zmax ImageData img ImageData::alloc cc width cc height pos_x cc width pos_y cc height GenerateTestImage img pos_x pos_y zmin zmax N N t GetPreciseTime qtrk SetLocalizationMode LocMode_t LT_QI LT_NormalizeProfile i i N i LocalizationJob job i qtrk ScheduleLocalization uchar img data cc width QTrkFloat job i std::max N dbgprintf i N WaitForFinish qtrk N t GetPreciseTime t dbgprintf N t cc qi_iterations count qtrk GetResultCount LocalizationResult res qtrk FetchResults res res pos x pos_x f res pos x pos_x f res pos y pos_y f res pos y pos_y f count dbgprintf res job frame res pos x res pos y count dbgprintf count N count N img free QTrkComputedConfig cc cc width cc height cc Update QueuedCUDATracker qtrk cc zmin zmax ImageData img ImageData::alloc cc width cc height pos_x cc width pos_y cc height GenerateTestImage img pos_x pos_y zmin zmax N N qtrk SetLocalizationMode LocMode_t LT_QI LT_NormalizeProfile ResultManagerConfig RMcfg RMcfg numBeads RMcfg numFrameInfoColumns RMcfg scaling vector3f f f f RMcfg offset vector3f f f f RMcfg writeInterval RMcfg maxFramesInMemory RMcfg binaryOutput std::vector&lt;std::string&gt; colnames ii ii RMcfg numFrameInfoColumns ii colnames push_back SPrintf ii outputter output Files Images ResultManager RM SPrintf output folder c_str c_str SPrintf output folder c_str c_str RMcfg colnames RM SetTracker qtrk t GetPreciseTime i i N i LocalizationJob job i qtrk ScheduleLocalization uchar img data cc width QTrkFloat job printf qtrk Flush RM GetFrameCounters localizationsDone N t GetPreciseTime t RM Flush RM GetFrameCounters lastSaveFrame N dbgprintf N t cc qi_iterations img free ROISize std::vector&lt;BeadPos&gt; beads read_beadlist SPrintf folder c_str numImgInStack numPositions range f umPerImg range numImgInStack QTrkComputedConfig cfg cfg width cfg height ROISize cfg qi_angstep_factor cfg qi_iterations cfg qi_angular_coverage f cfg qi_roi_coverage cfg qi_radial_coverage f cfg qi_minradius cfg zlut_minradius cfg zlut_angular_coverage f cfg zlut_roi_coverage cfg zlut_radial_coverage f cfg zlut_minradius cfg qi_minradius cfg com_bgcorrection cfg xc1_profileLength ROISize f cfg xc1_profileWidth ROISize f cfg xc1_iterations cfg Update cfg WriteToFile zplanes QueuedCUDATracker qtrk QueuedCUDATracker cfg qtrk SetRadialZLUT beads size zplanes qtrk BeginLUT pxPerBead ROISize ROISize memSizePerBead pxPerBead float startFrame plane plane zplanes plane output outputString SPrintf plane zplanes frameNum startFrame int numImgInStack startFrame float plane zplanes std::string file SPrintf folder c_str frameNum ImageData frame ReadJPEGFile file c_str data beads size pxPerBead uint ii ii beads size ii vector2f pos pos x beads at ii x ROISize pos y beads at ii y ROISize ImageData crop CropImage frame pos x pos y ROISize ROISize memcpy data ii pxPerBead crop data memSizePerBead crop free qtrk BuildLUT data ROISize QTrkFloat plane frame free data qtrk FinalizeLUT luts beads size zplanes cfg zlut_radialsteps qtrk GetRadialZLUT luts ii ii beads size ii ImageData lut ImageData::alloc cfg zlut_radialsteps zplanes memcpy lut data luts ii cfg zlut_radialsteps zplanes cfg zlut_radialsteps zplanes output outputImage lut SPrintf ii lut free qtrk Flush qtrk uint i i args size i args i name param T atof args i c_str uint i i args size i args i name param args i QTrkSettings cfg std::vector&lt;std::string&gt; args argc i i argc i args i argv i check_arg args cfg width cfg height cfg width count check_arg args count std::string outputfile fixlutfile inputposfile bmlutfile rescaledlutfile std::string radialWeightsFile check_strarg args outputfile check_strarg args fixlutfile check_strarg args bmlutfile check_strarg args inputposfile check_strarg args rescaledlutfile check_strarg args radialWeightsFile std::string crlboutput check_strarg args crlboutput std::vector&lt; vector3f &gt; inputPos inputposfile empty inputPos ReadVector3CSV inputposfile c_str count inputPos size check_arg args cfg zlut_minradius check_arg args cfg zlut_radial_coverage check_arg args cfg zlut_angular_coverage check_arg args cfg zlut_roi_coverage check_arg args cfg qi_iterations check_arg args cfg qi_minradius check_arg args cfg qi_radial_coverage check_arg args cfg qi_angular_coverage check_arg args cfg qi_roi_coverage check_arg args cfg qi_angstep_factor check_arg args cfg downsample zlutAlign check_arg args zlutAlign pixelmax check_arg args pixelmax std::string lutsmpfile check_strarg args lutsmpfile cuda check_arg args cuda QueuedTracker qtrk cuda qtrk QueuedCUDATracker cfg qtrk QueuedCPUTracker cfg ImageData lut BenchmarkLUT bmlut fixlutfile empty lut ReadJPEGFile fixlutfile c_str rescaledlutfile empty ImageData newlut ResampleLUT qtrk lut lut h newlut rescaledlutfile c_str lut free lut newlut lut w qtrk cfg zlut_radialsteps lut free dbgprintf lut w qtrk cfg zlut_radialsteps qtrk qtrk SetRadialZLUT lut data lut h bmlutfile empty qtrk dbgprintf bmlut Load bmlutfile c_str lut ImageData::alloc qtrk cfg zlut_radialsteps bmlut lut_h bmlut GenerateLUT lut rescaledlutfile empty WriteJPEGFile rescaledlutfile c_str lut qtrk SetRadialZLUT lut data lut h inputPos empty inputPos resize count i i count i inputPos i vector3f cfg width cfg height lut h radialWeightsFile empty rwd ReadCSV radialWeightsFile c_str std::vector&lt;float&gt; rw rwd size rw size qtrk cfg zlut_radialsteps qtrk SetRadialWeights rw dbgprintf qtrk std::vector&lt;ImageData&gt; imgs inputPos size std::vector&lt;vector3f&gt; crlb inputPos size uint i i inputPos size i imgs i ImageData::alloc cfg width cfg height p inputPos i bmlut lut_w GenerateImageFromLUT imgs i lut qtrk cfg zlut_minradius qtrk cfg zlut_maxradius p crlboutput empty SampleFisherMatrix sfm pixelmax crlb i sfm Compute p vector3f f lut qtrk cfg width qtrk cfg height qtrk cfg zlut_minradius qtrk cfg zlut_maxradius Inverse diag bmlut GenerateSample imgs i p qtrk cfg zlut_minradius qtrk cfg zlut_maxradius imgs i normalize pixelmax ApplyPoissonNoise imgs i pixelmax i lutsmpfile empty WriteJPEGFile lutsmpfile c_str imgs i locMode LT_LocalizeZ LT_NormalizeProfile LT_LocalizeZWeighted qtrk cfg qi_iterations locMode LT_QI zlutAlign locMode LT_ZLUTAlign qtrk SetLocalizationMode LocMode_t locMode tstart GetPreciseTime uint i i inputPos size i LocalizationJob job i qtrk ScheduleImageData imgs i job WaitForFinish qtrk inputPos size tend GetPreciseTime std::vector&lt;vector3f&gt; results inputPos size uint i i inputPos size i LocalizationResult r qtrk FetchResults r results r job frame r pos vector3f meanErr stdevErr MeanStDevError inputPos results meanErr stdevErr dbgprintf meanErr x meanErr y stdevErr x stdevErr z crlboutput empty WriteTrace crlboutput crlb crlb size WriteTrace outputfile results inputPos size lut data lut free qtrk QTrkSettings cfg cfg width cfg height cfg numThreads cpu RunTracker&lt;QueuedCPUTracker&gt; lutfile cfg LT_QI gpu RunTracker&lt;QueuedCUDATracker&gt; lutfile cfg LT_QI i i std::min cpu output size i dbgprintf cpu output i x gpu output i x cpu output i y gpu output i y k f x x s x k cosf x f idx buf x k x x s x buf x buf x buf x sum f x s x x sum buf x fabsf buf x f sum std::string s file pos s length pos s pos s pos pos s substr pos cudaDeviceProp prop dc cudaGetDeviceCount dc k k dc k cudaGetDeviceProperties prop k dbgprintf k prop name dbgprintf prop maxTexture2D printf argc CmdLineRun argc argv BasicQTrkTest std::exception e dbgprintf e what system float2 r r x a x b x a y b y r y a y b x a x b y r r r v r fabsf r v fabsf r v r r std::vector&lt;float&gt; values roi roi roi SpeedInfo info SpeedCompareTest roi locMode haveZLUT qi_iterations values push_back roi values push_back info speed_cpu values push_back info speed_gpu labels WriteImageAsCSV outputcsv values values size labels QTrkSettings cfg cfg qi_iterations cfg width cfg height cfg numThreads QueuedCUDATracker gpu cfg QueuedCPUTracker cpu cfg ImageData lut ReadJPEGFile lutfile ImageData img ImageData::alloc cfg width cfg height srand N gpu SetLocalizationMode LT_QI cpu SetLocalizationMode LT_QI i i N i LocalizationJob job i vector3f pos cfg width cfg height lut h pos x rand_uniform&lt;float&gt; pos y rand_uniform&lt;float&gt; GenerateImageFromLUT img lut cfg width pos gpu ScheduleLocalization uchar img data img w QTrkFloat job cpu ScheduleLocalization uchar img data img w QTrkFloat job gpu Flush cpu Flush cpu GetResultCount N gpu GetResultCount N ImageData dbgImg cpu DebugImage FloatToJPEGFile dbgImg data dbgImg w dbgImg h rcpu FetchResults cpu rgpu FetchResults gpu i i N i vector3f d rcpu i rgpu i dbgprintf i rcpu i x rcpu i y rgpu i x rgpu i y d x d y uint i i cmp_cpu_qi_prof size i dbgprintf i cmp_cpu_qi_prof i cmp_gpu_qi_prof i cmp_gpu_qi_prof i cmp_cpu_qi_prof i uint i i cmp_cpu_qi_fft_out size i dbgprintf i cmp_cpu_qi_fft_out i real cmp_gpu_qi_fft_out i real cmp_gpu_qi_fft_out i real cmp_cpu_qi_fft_out i real img free lut free QTrkSettings cfg cfg width cfg height cfg qi_iterations cfg xc1_iterations cfg xc1_profileLength cfg numThreads cfg com_bgcorrection f haveZLUT cfg numThreads cfg qi_iterations total batchSize haveZLUT cfg numThreads total batchSize QueuedCUDATracker qtrk cfg batchSize QueuedCPUTracker qtrkcpu cfg ImageData img ImageData::alloc cfg width cfg height cpucmp qtrk EnableTextureCache srand zplanes zmin zmax qtrk SetRadialZLUT zplanes cpucmp qtrkcpu SetRadialZLUT zplanes haveZLUT x x zplanes x vector2f center cfg width cfg height s zmin zmax zmin x zplanes GenerateTestImage img center x center y s f WriteJPEGFile img qtrk BuildLUT img data img pitch QTrkFloat vector2f cpucmp qtrkcpu BuildLUT img data img pitch QTrkFloat qtrk FinalizeLUT cpucmp qtrkcpu FinalizeLUT rc qtrk GetResultCount rc zplanes Sleep dbgprintf cpucmp qtrkcpu GetResultCount zplanes zlut qtrk cfg zlut_radialsteps zplanes qtrk GetRadialZLUT zlut cpucmp zlutcpu qtrkcpu cfg zlut_radialsteps zplanes qtrkcpu GetRadialZLUT zlutcpu WriteImageAsCSV zlutcpu qtrkcpu cfg zlut_radialsteps zplanes WriteImageAsCSV zlut qtrkcpu cfg zlut_radialsteps zplanes zlutcpu qtrk ClearResults cpucmp qtrkcpu ClearResults FloatToJPEGFile zlut qtrk cfg zlut_radialsteps zplanes zlut dbgprintf total GenerateTestImage img cfg width cfg height zmin zmax tstart GetPreciseTime rc displayrc LocMode_t flags LocMode_t LT_NormalizeProfile LT_QI haveZLUT LT_LocalizeZ qtrk SetLocalizationMode flags qtrkcpu SetLocalizationMode flags n n total n LocalizationJob jobInfo jobInfo frame n jobInfo zlutIndex qtrk ScheduleLocalization uchar img data cfg width QTrkFloat jobInfo cpucmp qtrkcpu ScheduleLocalization uchar img data cfg width QTrkFloat jobInfo n rc qtrk GetResultCount displayrc rc displayrc total dbgprintf displayrc total displayrc cpucmp qtrkcpu Flush WaitForFinish qtrk total tend GetPreciseTime cpucmp dbgprintf total qtrkcpu GetResultCount Sleep img free NumResults LocalizationResult results NumResults resultscpu NumResults rcount std::min NumResults total i i rcount i qtrk FetchResults results i cpucmp qtrkcpu FetchResults resultscpu i std::sort results results rcount LocalizationResult a LocalizationResult b a job frame b job frame cpucmp std::sort resultscpu resultscpu rcount LocalizationResult a LocalizationResult b a job frame b job frame i i rcount i LocalizationResult r results i dbgprintf i r pos x r pos y r pos z r firstGuess x r firstGuess y cpucmp r resultscpu i dbgprintf i r pos x r pos y r pos z r firstGuess x r firstGuess y dbgprintf total tend tstart cudaError_t err cudaGetLastError dbgprintf cudaGetErrorString err idx blockIdx x blockDim x threadIdx x idx N x x x a idx asin a idx x r r minval r r cudaBatchSize count count cudaBatchSize LocMode_t locType LocMode_t locMode LT_NormalizeProfile QTrkComputedConfig cfg cfg width cfg height w cfg qi_iterations qi_iterations cfg qi_radial_coverage f cfg qi_angstep_factor f cfg qi_angular_coverage f cfg zlut_radial_coverage f cfg cuda_device QTrkCUDA_UseAll cfg numThreads cfg com_bgcorrection f cfg Update dbgprintf w cfg qi_maxradius cfg qi_radialsteps SpeedInfo info QueuedCPUTracker cputrk QueuedCPUTracker cfg info speed_cpu SpeedTest cfg cputrk count haveZLUT locType info sched_cpu cputrk QueuedCUDATracker cudatrk QueuedCUDATracker cfg cudaBatchSize info speed_gpu SpeedTest cfg cudatrk count haveZLUT locType info sched_gpu std::string report cudatrk GetProfileReport cudatrk dbgprintf info speed_cpu dbgprintf info speed_gpu info ImageData img ImageData::alloc cfg width cfg height srand zplanes zmin zmax qtrk SetRadialZLUT zplanes gaincorrection EnableGainCorrection qtrk haveZLUT x x zplanes x vector2f center cfg width cfg height s zmin zmax zmin x zplanes GenerateTestImage img center x center y s f qtrk BuildLUT img data img pitch QTrkFloat qtrk FinalizeLUT qtrk ClearResults dbgprintf count GenerateTestImage img cfg width cfg height zmin zmax tstart GetPreciseTime rc displayrc maxScheduleTime f sumScheduleTime2 f sumScheduleTime f qtrk SetLocalizationMode locType haveZLUT LT_LocalizeZ n n count n t0 GetPreciseTime ROIPosition roipos LocalizationJob job n qtrk ScheduleFrame uchar img data cfg width cfg width cfg height roipos QTrkFloat job dt GetPreciseTime t0 maxScheduleTime std::max maxScheduleTime dt sumScheduleTime dt sumScheduleTime2 dt dt n rc qtrk GetResultCount displayrc rc displayrc count dbgprintf displayrc count displayrc WaitForFinish qtrk count tend GetPreciseTime img free mean sumScheduleTime count stdev sqrt sumScheduleTime2 count mean mean dbgprintf mean maxScheduleTime stdev scheduleTime mean count tend tstart N nt pinned_array&lt;float&gt; a N device_vec&lt;float&gt; A N cudaStream_t s0 cudaEvent_t done cudaStreamCreate s0 cudaEventCreate done x x N x a x cos x f x x x MeasureTime mt A copyToDevice a data N MeasureTime mt SimpleKernel dim3 N nt nt dim3 nt N A data MeasureTime mt A copyToHost a data cudaEventRecord done MeasureTime cudaEventQuery done cudaSuccess cudaStreamDestroy s0 cudaEventDestroy done BenchmarkLUT bml ImageData img ImageData::alloc ImageData lut ImageData::alloc bml lut_w bml lut_h bml GenerateLUT lut WriteJPEGFile lut lut free bml GenerateSample img vector3f img w img h bml lut_h img w WriteJPEGFile img img free N R R std::vector&lt;vector3f&gt; rcpu Gauss2DTest&lt;QueuedCPUTracker&gt; N R calib std::vector&lt;vector3f&gt; rgpu Gauss2DTest&lt;QueuedCUDATracker&gt; N R calib i i std::min N i dbgprintf i rcpu i x rcpu i y rgpu i x rgpu i y rcpu i x rgpu i x rcpu i y rgpu i y n s dim3 nthreads nblocks n nthreads x nthreads x device_vec&lt;float&gt; buf n s device_vec&lt;float&gt; result_s n result_g n t0 GetPreciseTime testWithGlobal&lt;&lt;&lt;nblocks,nthreads&gt; n s result_g data buf data cudaDeviceSynchronize t1 GetPreciseTime testWithShared nblocks nthreads s float nthreads x n s result_s data cudaDeviceSynchronize t2 GetPreciseTime std::vector&lt;float&gt; rs result_s rg result_g x x n x dbgprintf x rs x x rg x dbgprintf n t2 t1 n t1 t0 idx threadIdx x blockIdx x blockDim x idx n result idx compute idx buf idx s s idx threadIdx x blockIdx x blockDim x idx n result idx compute idx cudaSharedMem threadIdx x s s</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cudaImageList.h</field>
    <field name="url">cuda_image_list_8h.html</field>
    <field name="keywords">cudaImageList.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpu_utils.h</field>
    <field name="url">gpu__utils_8h.html</field>
    <field name="keywords">gpu_utils.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">CUDA_SUPPORTED_FUNC</field>
    <field name="url">gpu__utils_8h.html#a69f41cb6c15f0e34b0889a5f6d5aae32</field>
    <field name="keywords">CUDA_SUPPORTED_FUNC</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">CUBOTH</field>
    <field name="url">gpu__utils_8h.html#ac50b87a58396e77c6168aa6f3be3c189</field>
    <field name="keywords">CUBOTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputTotalGPUMemUse</field>
    <field name="args">(std::string info=&quot;&quot;)</field>
    <field name="url">gpu__utils_8h.html#a62bdd2284842cb0edc350adef80e0d85</field>
    <field name="keywords">outputTotalGPUMemUse</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CheckCUDAError</field>
    <field name="args">(cufftResult_t err)</field>
    <field name="url">gpu__utils_8h.html#ae6b059a7637782d61577e695c9d6303e</field>
    <field name="keywords">CheckCUDAError</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CheckCUDAError</field>
    <field name="args">(cudaError_t err)</field>
    <field name="url">gpu__utils_8h.html#ac81ed8a6b8dd4ee9303e694b4a4a2421</field>
    <field name="keywords">CheckCUDAError</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CheckCUDAError</field>
    <field name="args">()</field>
    <field name="url">gpu__utils_8h.html#a2a2375f575eb720f0d58566b25d743a9</field>
    <field name="keywords">CheckCUDAError</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">dbgCUDAErrorCheck</field>
    <field name="args">(cudaError_t e)</field>
    <field name="url">gpu__utils_8h.html#a0e8c0c69887658f653eefbb80334bc3f</field>
    <field name="keywords">dbgCUDAErrorCheck</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DbgCopyResult</field>
    <field name="args">(device_vec&lt; float2 &gt; src, std::vector&lt; std::complex&lt; float &gt; &gt; &amp;dst)</field>
    <field name="url">gpu__utils_8h.html#a90bb5228a452340dd6a505cfb4db25c7</field>
    <field name="keywords">DbgCopyResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DbgCopyResult</field>
    <field name="args">(device_vec&lt; float &gt; src, std::vector&lt; float &gt; &amp;dst)</field>
    <field name="url">gpu__utils_8h.html#a73827a1df19f4e7128cd0818e2e8d80d</field>
    <field name="keywords">DbgCopyResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DbgOutputVectorToFile</field>
    <field name="args">(std::string loc, device_vec&lt; float &gt; &amp;src, bool append)</field>
    <field name="url">gpu__utils_8h.html#a0daa7f743247f9563aef777dbcc7e5f2</field>
    <field name="keywords">DbgOutputVectorToFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ImageSampler.h</field>
    <field name="url">_image_sampler_8h.html</field>
    <field name="keywords">ImageSampler.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ImageSampler_Tex</field>
    <field name="url">_image_sampler_8h.html#a6fc8b9d59f04cc17589b71a6a5bcfc72</field>
    <field name="keywords">ImageSampler_Tex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">image_sampler_texture_linear</field>
    <field name="args">(0, cudaFilterModeLinear)</field>
    <field name="url">_image_sampler_8h.html#aada512cb7ef9473ec9a876ef0d901525</field>
    <field name="keywords">image_sampler_texture_linear</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">image_sampler_texture_nearest</field>
    <field name="args">(0, cudaFilterModePoint)</field>
    <field name="url">_image_sampler_8h.html#a7de6f4af580ecfe3df9ef9e65faac7e8</field>
    <field name="keywords">image_sampler_texture_nearest</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">Kernels.h</field>
    <field name="url">_kernels_8h.html</field>
    <field name="keywords">Kernels.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">interpolate</field>
    <field name="args">(T a, T b, float x)</field>
    <field name="url">group__kernels.html#ga20d3b4d870a90595bb01e1429c5541f0</field>
    <field name="keywords">interpolate interpolate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BgCorrectedCOM</field>
    <field name="args">(int idx, cudaImageListf images, float correctionFactor, float *pMean)</field>
    <field name="url">group__kernels.html#gab68fb94c047f06d1244bdb99b82434b3</field>
    <field name="keywords">BgCorrectedCOM BgCorrectedCOM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BgCorrectedCOM</field>
    <field name="args">(int count, cudaImageListf images, float3 *d_com, float bgCorrectionFactor, float *d_imgmeans)</field>
    <field name="url">group__kernels.html#gaadfa5148ca9461daab04dbf9e0394791</field>
    <field name="keywords">BgCorrectedCOM BgCorrectedCOM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUT_ProfilesToZLUT</field>
    <field name="args">(int njobs, cudaImageListf images, ZLUTParams params, float3 *positions, LocalizationParams *locParams, float *profiles)</field>
    <field name="url">group__kernels.html#ga9b32b8197dc8895328e9850cafa295c3</field>
    <field name="keywords">ZLUT_ProfilesToZLUT ZLUT_ProfilesToZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUT_RadialProfileKernel</field>
    <field name="args">(int njobs, cudaImageListf images, ZLUTParams params, float3 *positions, float *profiles, float *means)</field>
    <field name="url">group__kernels.html#gadf9148f47982d2685fa156a957fc21c2</field>
    <field name="keywords">ZLUT_RadialProfileKernel ZLUT_RadialProfileKernel</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUT_ComputeZ</field>
    <field name="args">(int njobs, ZLUTParams params, float3 *positions, float *compareScoreBuf)</field>
    <field name="url">group__kernels.html#gad0ba2ca03fcfe17bda05c872842afaae</field>
    <field name="keywords">ZLUT_ComputeZ ZLUT_ComputeZ</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUT_ComputeProfileMatchScores</field>
    <field name="args">(int njobs, ZLUTParams params, float *profiles, float *compareScoreBuf, LocalizationParams *locParams)</field>
    <field name="url">group__kernels.html#gab39221cb109c517ef2c550742f25fae3</field>
    <field name="keywords">ZLUT_ComputeProfileMatchScores ZLUT_ComputeProfileMatchScores</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUT_NormalizeProfiles</field>
    <field name="args">(int njobs, ZLUTParams params, float *profiles)</field>
    <field name="url">group__kernels.html#ga4cdd8d9a41123399c9a91d90785d9274</field>
    <field name="keywords">ZLUT_NormalizeProfiles ZLUT_NormalizeProfiles</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ApplyOffsetGain</field>
    <field name="args">(BaseKernelParams kp, cudaImageListf calib_gain, cudaImageListf calib_offset, float gainFactor, float offsetFactor)</field>
    <field name="url">group__kernels.html#ga45301d4799d0b58381ecd58202724298</field>
    <field name="keywords">ApplyOffsetGain ApplyOffsetGain</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">G2MLE_Compute</field>
    <field name="args">(BaseKernelParams kp, float sigma, int iterations, float3 *initial, float3 *positions, float *I_bg, float *I_0)</field>
    <field name="url">group__kernels.html#gaf3546eed501c5227c765beb290ed2549</field>
    <field name="keywords">G2MLE_Compute G2MLE_Compute</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageLUT_Sample</field>
    <field name="args">(BaseKernelParams kp, float2 ilut_scale, float3 *positions, typename TImageLUT::KernelParams lut)</field>
    <field name="url">group__kernels.html#ga570d6e0ffb7ef89d65d8805d3ea82978</field>
    <field name="keywords">ImageLUT_Sample ImageLUT_Sample</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ForceCUDAKernelsToLoad</field>
    <field name="args">()</field>
    <field name="url">group__kernels.html#gac07cc2bda6c64ce2e0a496b3de40ab60</field>
    <field name="keywords">ForceCUDAKernelsToLoad ForceCUDAKernelsToLoad</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">image_lut_surface</field>
    <field name="url">_kernels_8h.html#aec033d7e15aebbae164cfe9c89b879eb</field>
    <field name="keywords">image_lut_surface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QI.h</field>
    <field name="url">_q_i_8h.html</field>
    <field name="keywords">QI.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">qivalue_t</field>
    <field name="url">_q_i_8h.html#ad93d92c9630ef2cebed8fe55e284e3ed</field>
    <field name="keywords">qivalue_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">qicomplex_t</field>
    <field name="url">_q_i_8h.html#ad57806420787f160bbbe768dbd72d115</field>
    <field name="keywords">qicomplex_t</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QI_impl.h</field>
    <field name="url">_q_i__impl_8h.html</field>
    <field name="keywords">QI_impl.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeQuadrantProfile</field>
    <field name="args">(cudaImageListf &amp;images, int idx, float *dst, const QIParams &amp;params, int quadrant, float2 center, float mean, int angularSteps)</field>
    <field name="url">group__kernels.html#gad03b2eea07c1b047c3d694f187532393</field>
    <field name="keywords">ComputeQuadrantProfile ComputeQuadrantProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_ComputeProfile</field>
    <field name="args">(BaseKernelParams kp, float3 *positions, float *quadrants, float2 *profiles, float2 *reverseProfiles, const QIParams qiParams, float *d_radialweights, int angularSteps)</field>
    <field name="url">group__kernels.html#ga491f07d70a63e0fb356201b5b76ae3d5</field>
    <field name="keywords">QI_ComputeProfile QI_ComputeProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_MultiplyWithConjugate</field>
    <field name="args">(int n, cufftComplex *a, cufftComplex *b)</field>
    <field name="url">group__kernels.html#gaf620f6888bd27603c02cbbcc6cb77cce</field>
    <field name="keywords">QI_MultiplyWithConjugate QI_MultiplyWithConjugate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_ComputeAxisOffset</field>
    <field name="args">(cufftComplex *autoconv, int fftlen, float *shiftbuf)</field>
    <field name="url">group__kernels.html#ga3cb19a139f4a1e91c1803511ae585161</field>
    <field name="keywords">QI_ComputeAxisOffset QI_ComputeAxisOffset</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_OffsetPositions</field>
    <field name="args">(int njobs, float3 *current, float3 *dst, cufftComplex *autoconv, int fftLength, float2 *offsets, float pixelsPerProfLen, float *shiftbuf)</field>
    <field name="url">group__kernels.html#ga095edb116bff714a009b7cf60b52cb3b</field>
    <field name="keywords">QI_OffsetPositions QI_OffsetPositions</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_ComputeQuadrants</field>
    <field name="args">(BaseKernelParams kp, float3 *positions, float *dst_quadrants, const QIParams *params, int angularSteps)</field>
    <field name="url">group__kernels.html#gaa7f87ffff59ddad03f962165afc5ee08</field>
    <field name="keywords">QI_ComputeQuadrants QI_ComputeQuadrants</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI_QuadrantsToProfiles</field>
    <field name="args">(BaseKernelParams kp, float *quadrants, float2 *profiles, float2 *reverseProfiles, float *d_radialweights, const QIParams *params)</field>
    <field name="url">group__kernels.html#ga0a68cdd1dd0c10476711ae6d4316fb40</field>
    <field name="keywords">QI_QuadrantsToProfiles QI_QuadrantsToProfiles</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedCUDATracker.cu</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html</field>
    <field name="keywords">QueuedCUDATracker.cu</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">TRK_PROFILE</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#af56066d48cd335420540dfaad1b7bbc9</field>
    <field name="keywords">TRK_PROFILE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SetCUDADevices</field>
    <field name="args">(int *dev, int numdev)</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#abda9d81bb47d6fd2b504bd3df9b2edae</field>
    <field name="keywords">SetCUDADevices</field>
    <field name="text">Set the list of devices to be used when QTrkComputedConfig::cuda_device is set to QTrkCUDA_UseList Empty for CPU tracker devices numdev</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CreateQueuedTracker</field>
    <field name="args">(const QTrkComputedConfig &amp;cc)</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#a04e7674e3705eefff30b5d6f5d3ab925</field>
    <field name="keywords">CreateQueuedTracker</field>
    <field name="text">Helper function to create a QueuedTracker instance Used to determine the creation of a CUDA or CPU instance through compiler definitions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GetBestCUDADevice</field>
    <field name="args">()</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#a19fc494f75b9dffe835d70fa70daae57</field>
    <field name="keywords">GetBestCUDADevice</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddProfilesToZLUT</field>
    <field name="args">(float *d_src, int nbeads, int radialsteps, int plane, cudaImageListf zlut)</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#aec3fff30d0a584140aaa1d322cc4a047</field>
    <field name="keywords">AddProfilesToZLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">checksum</field>
    <field name="args">(T *data, int elemsize, int numelem, const char *name)</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#a92f77d4c98e5e45869270339e47aa069</field>
    <field name="keywords">checksum</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaDeviceList</field>
    <field name="url">_queued_c_u_d_a_tracker_8cu.html#ab36f2f7f7b4b97a02a4597f7baef4f7a</field>
    <field name="keywords">cudaDeviceList</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">QueuedCUDATracker.h</field>
    <field name="url">_queued_c_u_d_a_tracker_8h.html</field>
    <field name="keywords">QueuedCUDATracker.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">cudaImageListf</field>
    <field name="url">_queued_c_u_d_a_tracker_8h.html#a84de79f5d4b6e4c8d5622fe712c1bd69</field>
    <field name="keywords">cudaImageListf</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">simplefft.h</field>
    <field name="url">simplefft_8h.html</field>
    <field name="keywords">simplefft.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SFFT_BOTH</field>
    <field name="url">simplefft_8h.html#acfebaca1d9d8f48864704773594876b7</field>
    <field name="keywords">SFFT_BOTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::swap</field>
    <field name="args">(T &amp;a, T &amp;b)</field>
    <field name="url">namespacesfft.html#a6fd4eed54bb67483098b21032bf68bf5</field>
    <field name="keywords">swap sfft::swap sfft swap sfft::swap sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::fft</field>
    <field name="args">(size_t N, std::complex&lt; T &gt; *zs, complex&lt; T &gt; *twiddles)</field>
    <field name="url">namespacesfft.html#afe126ab208ddda6ebf1082ba5fccf97c</field>
    <field name="keywords">fft sfft::fft sfft fft sfft::fft sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::fill_twiddles</field>
    <field name="args">(int N)</field>
    <field name="url">namespacesfft.html#adb7a1a523f70985b8e7c17bcb6e1c30f</field>
    <field name="keywords">fill_twiddles sfft::fill_twiddles sfft fill_twiddles sfft::fill_twiddles sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::fft_forward</field>
    <field name="args">(size_t N, complex&lt; T &gt; *zs, complex&lt; T &gt; *twiddles)</field>
    <field name="url">namespacesfft.html#af570d5b3d61e3da21700a7ba5773e00a</field>
    <field name="keywords">fft_forward sfft::fft_forward sfft fft_forward sfft::fft_forward sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::fft_inverse</field>
    <field name="args">(size_t N, complex&lt; T &gt; *zs, complex&lt; T &gt; *twiddles)</field>
    <field name="url">namespacesfft.html#aa248f213f81b23b17801fc26fd2e0324</field>
    <field name="keywords">fft_inverse sfft::fft_inverse sfft fft_inverse sfft::fft_inverse sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">todo</field>
    <field name="url">todo.html</field>
    <field name="keywords"></field>
    <field name="text">Todo List Member QTrkSettings testRun Add to LabVIEW cluster Class ResultFile Actually make the implementation Rewrite resultmanager to use these classes Member ResultManager RemoveBeadResults int bead We need to modify the saved data file</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">citelist</field>
    <field name="url">citelist.html</field>
    <field name="keywords"></field>
    <field name="text">Bibliography 1 J.P Cnossen D Dulin and N H Dekker An optimized software framework for real-time high-throughput tracking of spherical beads Review of Scientific Instruments 2014</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_functions</field>
    <field name="url">group__lab__functions.html</field>
    <field name="keywords">LabVIEW datatypes and helper functions</field>
    <field name="text">Definitions of datatypes and helper functions required for communication with LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API</field>
    <field name="url">group__lab___a_p_i.html</field>
    <field name="keywords">API LabVIEW</field>
    <field name="text">API functions available to LabVIEW These DLLs are compiled by the lvcputrack and lvcudatrack projects</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_general</field>
    <field name="url">group__lab___a_p_i__general.html</field>
    <field name="keywords">General</field>
    <field name="text">General API functions available to LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_luts</field>
    <field name="url">group__lab___a_p_i__luts.html</field>
    <field name="keywords">ZLUT</field>
    <field name="text">ZLUT API functions available to LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_queueing</field>
    <field name="url">group__lab___a_p_i__queueing.html</field>
    <field name="keywords">Queueing</field>
    <field name="text">Queue API functions available to LabVIEW Use to queue images to be handled by the tracker</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_results</field>
    <field name="url">group__lab___a_p_i__results.html</field>
    <field name="keywords">Results</field>
    <field name="text">Result API functions available to LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_debug</field>
    <field name="url">group__lab___a_p_i__debug.html</field>
    <field name="keywords">Debugging</field>
    <field name="text">Debug API functions available to LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_zbias</field>
    <field name="url">group__lab___a_p_i__zbias.html</field>
    <field name="keywords">Z Bias</field>
    <field name="text">Z bias API functions available to LabVIEW See also ZLUT Bias Correction</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">lab_API_cuda</field>
    <field name="url">group__lab___a_p_i__cuda.html</field>
    <field name="keywords">CUDA</field>
    <field name="text">Cuda API functions available to LabVIEW</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">c_api</field>
    <field name="url">group__c__api.html</field>
    <field name="keywords">API C</field>
    <field name="text">API functions available to a C or NET program These DLLs are compiled by the cputrack and cudatrack projects</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">qtrk_c_api.cpp</field>
    <field name="url">qtrk__c__api_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">qtrk BuildLUT data pitch pdt plane qtrk ClearResults CreateQueuedTracker cfg qtrk FetchResults results maxResults qtrk FinalizeLUT qtrk Flush qtrk cfg qtrk cfg strncpy dst qtrk GetProfileReport c_str maxStrLen qtrk GetQueueLength maxQueueLen qtrk GetRadialZLUT dst qtrk GetRadialZLUTSize count planes radialsteps qtrk GetResultCount strncpy dst qtrk GetWarnings c_str maxStrLen qtrk IsIdle qtrk ScheduleFrame imgptr pitch width height positions numROI pdt jobInfo qtrk ScheduleLocalization data pitch pdt jobInfo qtrk SetLocalizationMode locType qtrk SetRadialZLUT data count planes</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">zbias</field>
    <field name="url">group__zbias.html</field>
    <field name="keywords">ZLUT Bias Correction</field>
    <field name="text">Functions related to correcting the bias in the z lookup table scheme For more information see Jelmer s paper on this software environment This is not used on setups as far as I Jordi am aware since it was still in a development stage when Jelmer left</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ComputeZBiasCorrection</field>
    <field name="args">(int bias_planes, CImageData *result, int smpPerPixel, bool useSplineInterp)</field>
    <field name="url">group__zbias.html#ga8dbbbccee47ca764db7cd0b9c5fa140e</field>
    <field name="keywords">ComputeZBiasCorrection QueuedTracker::ComputeZBiasCorrection QueuedTracker ComputeZBiasCorrection QueuedTracker::ComputeZBiasCorrection QueuedTracker ComputeZBiasCorrection QueuedTracker::ComputeZBiasCorrection QueuedTracker ComputeZBiasCorrection QueuedTracker::ComputeZBiasCorrection QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ZLUTBiasCorrection</field>
    <field name="args">(float z, int zlut_planes, int bead)</field>
    <field name="url">group__zbias.html#ga5db67617f39aba7d9874222d3fa1c02f</field>
    <field name="keywords">ZLUTBiasCorrection QueuedTracker::ZLUTBiasCorrection QueuedTracker ZLUTBiasCorrection QueuedTracker::ZLUTBiasCorrection QueuedTracker ZLUTBiasCorrection QueuedTracker::ZLUTBiasCorrection QueuedTracker ZLUTBiasCorrection QueuedTracker::ZLUTBiasCorrection QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetZLUTBiasCorrection</field>
    <field name="args">(const CImageData &amp;data)</field>
    <field name="url">group__zbias.html#ga44b2acf1496f571f7139141c11e39ba0</field>
    <field name="keywords">SetZLUTBiasCorrection QueuedTracker::SetZLUTBiasCorrection QueuedTracker SetZLUTBiasCorrection QueuedTracker::SetZLUTBiasCorrection QueuedTracker SetZLUTBiasCorrection QueuedTracker::SetZLUTBiasCorrection QueuedTracker SetZLUTBiasCorrection QueuedTracker::SetZLUTBiasCorrection QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetZLUTBiasCorrection</field>
    <field name="args">()</field>
    <field name="url">group__zbias.html#ga15e820c55638c970a8ed5a441a16d41e</field>
    <field name="keywords">GetZLUTBiasCorrection QueuedTracker::GetZLUTBiasCorrection QueuedTracker GetZLUTBiasCorrection QueuedTracker::GetZLUTBiasCorrection QueuedTracker GetZLUTBiasCorrection QueuedTracker::GetZLUTBiasCorrection QueuedTracker GetZLUTBiasCorrection QueuedTracker::GetZLUTBiasCorrection QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedTracker::zlut_bias_correction</field>
    <field name="url">group__zbias.html#ga6f5a5a506c622ee1c174cd497c5152b9</field>
    <field name="keywords">zlut_bias_correction QueuedTracker::zlut_bias_correction QueuedTracker zlut_bias_correction QueuedTracker::zlut_bias_correction QueuedTracker zlut_bias_correction QueuedTracker::zlut_bias_correction QueuedTracker zlut_bias_correction QueuedTracker::zlut_bias_correction QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedTracker.cpp</field>
    <field name="url">_queued_tracker_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">count zlut_planes radialsteps GetRadialZLUTSize count zlut_planes radialsteps zlut_data count zlut_planes radialsteps GetRadialZLUT zlut_data std::vector&lt;float&gt; qi_rweights ComputeRadialBinWindow cfg qi_radialsteps std::vector&lt;float&gt; zlut_rweights ComputeRadialBinWindow cfg zlut_radialsteps zlut_bias_correction zlut_bias_correction zlut_bias_correction CImageData bias_planes count parallel_for count bias_planes job bead job bias_planes plane job bias_planes zlut_ptr zlut_data bead zlut_planes radialsteps CPUTracker trk cfg width cfg height ImageData zlut zlut_ptr radialsteps zlut_planes trk SetRadialZLUT zlut data zlut h zlut w cfg zlut_minradius cfg zlut_maxradius trk SetRadialWeights zlut_rweights vector3f pos cfg width cfg height plane bias_planes zlut_planes ImageData img ImageData::alloc cfg width cfg height GenerateImageFromLUT img zlut cfg zlut_minradius cfg zlut_maxradius pos useSplineInterp smpPerPixel bhit trk SetImageFloat img data vector2f com trk ComputeMeanAndCOM vector2f qi trk ComputeQI com cfg qi_radialsteps cfg qi_angstepspq cfg qi_angstep_factor cfg qi_minradius cfg qi_maxradius bhit qi_rweights z trk ComputeZ qi cfg zlut_angularsteps zlut_bias_correction at plane bead z pos z img free job count bias_planes dbgprintf job result result zlut_bias_correction zlut_bias_correction CImageData zlut_bias_correction zlut_bias_correction zlut_bias_correction zlut_bias_correction CImageData bc zlut_bias_correction z pos z k k k tblpos pos float zlut_planes zlut_bias_correction w bias zlut_bias_correction interpolate1D bead tblpos pos z bias pos roi width zlut_maxradius roi zlut_roi_coverage zlut_perimeter f zlut_maxradius zlut_angularsteps zlut_perimeter zlut_angular_coverage zlut_radialsteps zlut_maxradius zlut_minradius zlut_radial_coverage qi_maxradius roi qi_roi_coverage qi_perimeter f qi_maxradius qi_angstepspq qi_perimeter qi_angular_coverage qi_radialsteps qi_maxradius qi_minradius qi_radial_coverage qi_radialsteps NearestPowerOf2 qi_radialsteps std::string path GetCurrentOutputPath FILE f fopen SPrintf path c_str c_str WRITEVAR width WRITEVAR height WRITEVAR numThreads WRITEVAR cuda_device WRITEVAR com_bgcorrection WRITEVAR zlut_minradius WRITEVAR zlut_radial_coverage WRITEVAR zlut_angular_coverage WRITEVAR zlut_roi_coverage WRITEVAR qi_iterations WRITEVAR qi_minradius WRITEVAR qi_radial_coverage WRITEVAR qi_angular_coverage WRITEVAR qi_roi_coverage WRITEVAR qi_angstep_factor WRITEVAR xc1_profileLength WRITEVAR xc1_profileWidth WRITEVAR xc1_iterations WRITEVAR gauss2D_iterations WRITEVAR gauss2D_sigma WRITEVAR zlut_radialsteps WRITEVAR zlut_angularsteps WRITEVAR zlut_maxradius WRITEVAR qi_radialsteps WRITEVAR qi_angstepspq WRITEVAR qi_maxradius WRITEVAR downsample fclose f WRITEVAR width WRITEVAR height WRITEVAR numThreads WRITEVAR cuda_device WRITEVAR com_bgcorrection WRITEVAR zlut_minradius WRITEVAR zlut_radial_coverage WRITEVAR zlut_angular_coverage WRITEVAR zlut_roi_coverage WRITEVAR qi_iterations WRITEVAR qi_minradius WRITEVAR qi_radial_coverage WRITEVAR qi_angular_coverage WRITEVAR qi_roi_coverage WRITEVAR qi_angstep_factor WRITEVAR xc1_profileLength WRITEVAR xc1_profileWidth WRITEVAR xc1_iterations WRITEVAR gauss2D_iterations WRITEVAR gauss2D_sigma WRITEVAR zlut_radialsteps WRITEVAR zlut_angularsteps WRITEVAR zlut_maxradius WRITEVAR qi_radialsteps WRITEVAR qi_angstepspq WRITEVAR qi_maxradius WRITEVAR downsample zlut_bias_correction ImageData img GetDebugImage ID img w img h img data img uchar img uchar imgptr bpp PDT_BytesPerPixel pdt count i i numROI i ROIPosition pos positions i pos x pos y pos x cfg width width pos y cfg height height dbgprintf i uchar roiptr img pitch pos y pos x bpp LocalizationJob job jobInfo job zlutIndex i jobInfo zlutIndex ScheduleLocalization roiptr pitch pdt job count count ScheduleLocalization data data data pitch QTrkFloat job LocalizationJob j j frame frame j timestamp timestamp initial j initialPos initial j zlutIndex zlutIndex ScheduleLocalization data pitch pdt j</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">RM</field>
    <field name="url">group___r_m.html</field>
    <field name="keywords">Result Manager</field>
    <field name="text">Module that handles data gathering and saving for QueuedTracker instances</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">kernels</field>
    <field name="url">group__kernels.html</field>
    <field name="keywords">CUDA Kernels</field>
    <field name="text">All available CUDA Kernels to run on the GPU</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Atomic</field>
    <field name="url">class_atomic.html</field>
    <field name="keywords">Atomic</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Atomic::Atomic</field>
    <field name="args">(const T &amp;o=T())</field>
    <field name="url">class_atomic.html#a2dfd3129fef6bcbfb132945505058955</field>
    <field name="keywords">Atomic Atomic::Atomic Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Atomic::operator T</field>
    <field name="args">() const </field>
    <field name="url">class_atomic.html#a6ffb6a65b9abcfb3d41836336edf2664</field>
    <field name="keywords">operator T Atomic::operator T Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Atomic::operator=</field>
    <field name="args">(const T &amp;x)</field>
    <field name="url">class_atomic.html#a41ed023d1866301cfae9d000ae813acd</field>
    <field name="keywords">operator= Atomic::operator= Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Atomic::set</field>
    <field name="args">(const T &amp;x)</field>
    <field name="url">class_atomic.html#a959cd3820b21468204617d66c27d84c9</field>
    <field name="keywords">set Atomic::set Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Atomic::get</field>
    <field name="args">() const </field>
    <field name="url">class_atomic.html#a50d5b1eadc07bf419245a5e11d718486</field>
    <field name="keywords">get Atomic::get Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Atomic::m</field>
    <field name="url">class_atomic.html#abae1e58efe0a8b71805ed84d8e8f155a</field>
    <field name="keywords">m Atomic::m Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Atomic::data</field>
    <field name="url">class_atomic.html#aeb248989b8f2d011dbd057dc66b82d8e</field>
    <field name="keywords">data Atomic::data Atomic&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">BaseKernelParams</field>
    <field name="url">struct_base_kernel_params.html</field>
    <field name="keywords">BaseKernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BaseKernelParams::njobs</field>
    <field name="url">struct_base_kernel_params.html#aec40d44810d0e0a6640c66038af1fbf2</field>
    <field name="keywords">njobs BaseKernelParams::njobs BaseKernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BaseKernelParams::locParams</field>
    <field name="url">struct_base_kernel_params.html#a199494e0d0548c8b69ee23350e6ece95</field>
    <field name="keywords">locParams BaseKernelParams::locParams BaseKernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BaseKernelParams::imgmeans</field>
    <field name="url">struct_base_kernel_params.html#aa0c58be6d25ab55207ca83bb0047f4d9</field>
    <field name="keywords">imgmeans BaseKernelParams::imgmeans BaseKernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BaseKernelParams::images</field>
    <field name="url">struct_base_kernel_params.html#abdd6b8722cb871a13069ba0e3cd3ab0b</field>
    <field name="keywords">images BaseKernelParams::images BaseKernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">BenchmarkLUT</field>
    <field name="url">class_benchmark_l_u_t.html</field>
    <field name="keywords">BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::BenchmarkLUT</field>
    <field name="args">()</field>
    <field name="url">class_benchmark_l_u_t.html#a4cc66179032674a228cc5245ced451f7</field>
    <field name="keywords">BenchmarkLUT BenchmarkLUT::BenchmarkLUT BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::BenchmarkLUT</field>
    <field name="args">(ImageData *lut)</field>
    <field name="url">class_benchmark_l_u_t.html#a1ac0338c2339b5590ae51e15ad528dcb</field>
    <field name="keywords">BenchmarkLUT BenchmarkLUT::BenchmarkLUT BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::BenchmarkLUT</field>
    <field name="args">(const char *file)</field>
    <field name="url">class_benchmark_l_u_t.html#a83492c3b8f6966a377a705ed74dc7721</field>
    <field name="keywords">BenchmarkLUT BenchmarkLUT::BenchmarkLUT BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::Load</field>
    <field name="args">(ImageData *lut)</field>
    <field name="url">class_benchmark_l_u_t.html#a1ab15013a6b6883a134a5ed14ca89341</field>
    <field name="keywords">Load BenchmarkLUT::Load BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::Load</field>
    <field name="args">(const char *file)</field>
    <field name="url">class_benchmark_l_u_t.html#a8e7f2872ae37a4e0522ce8de7361dbdf</field>
    <field name="keywords">Load BenchmarkLUT::Load BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::GenerateLUT</field>
    <field name="args">(ImageData *lut)</field>
    <field name="url">class_benchmark_l_u_t.html#a25aa2a5d399a7c69ce755ee41384558a</field>
    <field name="keywords">GenerateLUT BenchmarkLUT::GenerateLUT BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::GenerateSample</field>
    <field name="args">(ImageData *image, vector3f pos, float minRadius, float maxRadius)</field>
    <field name="url">class_benchmark_l_u_t.html#ac2994fc6e33a4340057793a7d020a117</field>
    <field name="keywords">GenerateSample BenchmarkLUT::GenerateSample BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BenchmarkLUT::CleanupLUT</field>
    <field name="args">(ImageData &amp;lut)</field>
    <field name="url">class_benchmark_l_u_t.html#a0603ca70a5218b22809d9956ef226905</field>
    <field name="keywords">CleanupLUT BenchmarkLUT::CleanupLUT BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::normprof</field>
    <field name="url">class_benchmark_l_u_t.html#ad5ef40ecabab7c747d42180e9e82fe21</field>
    <field name="keywords">normprof BenchmarkLUT::normprof BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::max_a</field>
    <field name="url">class_benchmark_l_u_t.html#a0db0d7dfca5146b0d10b2c2f11364203</field>
    <field name="keywords">max_a BenchmarkLUT::max_a BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::max_b</field>
    <field name="url">class_benchmark_l_u_t.html#a9c4c87c9ba7e98d01109e5db7a8538bd</field>
    <field name="keywords">max_b BenchmarkLUT::max_b BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::max_c</field>
    <field name="url">class_benchmark_l_u_t.html#a279c5583569ce6db1f1b921906de7ce5</field>
    <field name="keywords">max_c BenchmarkLUT::max_c BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::lut_w</field>
    <field name="url">class_benchmark_l_u_t.html#a3ea5fe14b9dbfb664d7adc6697bf55d6</field>
    <field name="keywords">lut_w BenchmarkLUT::lut_w BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BenchmarkLUT::lut_h</field>
    <field name="url">class_benchmark_l_u_t.html#af73ab30379754bab8b5b114cb2fbfc80</field>
    <field name="keywords">lut_h BenchmarkLUT::lut_h BenchmarkLUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">BenchmarkLUT.cpp</field>
    <field name="url">_benchmark_l_u_t_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Load lut Load file BenchmarkLUT bm lut bm GenerateLUT lut M lut w float lut_w y y lut h y x x lut w x maxline M max_a y y max_b y max_c max_c lut at x y Interpolate1D normprof x maxline radialDensity lut_w maxRadius minRadius pos z f pos z f pos z lut_h pos z lut_h y y image h y x x image w x dx x pos x dy y pos y r sqrt dx dx dy dy minRadius radialDensity maxline max_a pos z pos z max_b pos z max_c max_c profpos r maxline image at x y Interpolate1D normprof profpos std::vector&lt;float&gt; max_x max_y lut_w lut w lut_h lut h i lut h i&lt;lut-&gt; h i maxpos maxval lut at i x x lut w x maxval &lt; lut-&gt; at x i maxval lut at x i maxpos x max_x push_back maxpos max_y push_back i LsqSqQuadFit&lt;float&gt; fit max_x size max_y max_x max_a fit a max_b fit b max_c fit c std::vector&lt;int&gt; numsmp lut w normprof resize lut w r r lut w r sum f nsmp y y lut h y x r fit compute y fit c outside v lut interpolate x y outside outside sum v nsmp numsmp r nsmp normprof r sum i i lut w i numsmp i i normprof i normprof i normprof i normprof i numsmp i ImageData d ReadJPEGFile file Load d d free</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">BinaryResultFile</field>
    <field name="url">class_binary_result_file.html</field>
    <field name="keywords">BinaryResultFile</field>
    <field name="text">Placeholder Handler for a binary output file Currently empty shell</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BinaryResultFile::BinaryResultFile</field>
    <field name="args">(const char *fn, bool write)</field>
    <field name="url">class_binary_result_file.html#a1fe910a577f64347ab32b38b17ec1b0e</field>
    <field name="keywords">BinaryResultFile BinaryResultFile::BinaryResultFile BinaryResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BinaryResultFile::LoadRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)</field>
    <field name="url">class_binary_result_file.html#aed703ab14e081fe4adfea853031191bc</field>
    <field name="keywords">LoadRow BinaryResultFile::LoadRow BinaryResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BinaryResultFile::SaveRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)</field>
    <field name="url">class_binary_result_file.html#a485208fbf3ae20eb68f0341ec6632a1f</field>
    <field name="keywords">SaveRow BinaryResultFile::SaveRow BinaryResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultFile::ResultFile</field>
    <field name="args">()</field>
    <field name="url">class_result_file.html#acb7a37621dfa56260e20d6742a74e616</field>
    <field name="keywords">ResultFile ResultFile::ResultFile ResultFile ResultFile ResultFile::ResultFile ResultFile ResultFile ResultFile::ResultFile ResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultFile::~ResultFile</field>
    <field name="args">()</field>
    <field name="url">class_result_file.html#afc2e88e562796e605707e12f2cc1b9fd</field>
    <field name="keywords">ResultFile::~ResultFile ResultFile ResultFile::~ResultFile ResultFile ResultFile::~ResultFile ResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BinaryResultFile::f</field>
    <field name="url">class_binary_result_file.html#a52c8b61cea0019e62f0e6c3530c2937d</field>
    <field name="keywords">f BinaryResultFile::f BinaryResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ResultManager.cpp</field>
    <field name="url">_result_manager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">config cfg outputFile outfile frameInfoFile frameInfoFile qtrk thread Threads::Create ThreadLoop quit outputFile empty outfile frameInfoFile empty frameInfoFile frameInfoNames colnames config binaryOutput WriteBinaryFileHeader dbgprintf cfg numBeads cfg numFrameInfoColumns cfg writeInterval quit Threads::WaitAndClose thread DeleteAllElems frameResults fr cnt startFrame fr cnt processedFrames dbgprintf fr fr cnt startFrame frameResults size frameResults push_back FrameResult config numBeads config numFrameInfoColumns trackerMutex lock qtrk qtrk Flush trackerMutex unlock Update resultMutex lock Write uint i i frameResults size i FrameResult fr frameResults i fr count config numBeads j j fr results size j fr results j job frame dbgprintf j dbgprintf resultMutex unlock count end startfr resultMutex lock end cnt processedFrames end cnt processedFrames start startfr cnt startFrame start start count cnt processedFrames cnt startFrame count cnt processedFrames cnt startFrame i i count i results i frameResults i start results bead resultMutex unlock count resultMutex lock nfr cnt capturedFrames resultMutex unlock nfr resultMutex lock FrameCounters c cnt resultMutex unlock c resultMutex lock startFrame cnt startFrame numFrames startFrame cnt processedFrames f f numFrames f index f startFrame cnt startFrame j j config numBeads j results config numBeads f j frameResults index results j resultMutex unlock numFrames trackerMutex lock QueuedTracker trk qtrk trackerMutex unlock trk uint i i frameResults size i fr frameResults i fr count fr results erase fr results begin bead trackerMutex lock qtrk qtrk trackerMutex unlock resultMutex lock CheckResultSpace frame FrameResult fr frameResults frame cnt startFrame fr hasFrameInfo fr timestamp timestamp i i config numFrameInfoColumns i fr frameInfo i columns i cnt capturedFrames fr hasFrameInfo resultMutex unlock CheckResultSpace r job frame LocalizationResult scaled r scaled pos scaled pos vector3f qtrk cfg width f qtrk cfg height f scaled pos scaled pos config offset config scaling FrameResult fr frameResults r job frame cnt startFrame fr results r job zlutIndex scaled fr count while cnt processedFrames cnt startFrame frameResults size frameResults cnt processedFrames cnt startFrame count config numBeads cnt capturedFrames cnt processedFrames frameResults cnt processedFrames cnt startFrame count config numBeads cnt lostFrames cnt processedFrames cnt localizationsDone cnt lostFrames ResultManager rm ResultManager param rm Update Threads::Sleep rm quit trackerMutex lock qtrk trackerMutex unlock NResultBuf LocalizationResult resultbuf NResultBuf count qtrk FetchResults resultbuf NResultBuf resultMutex lock i i count i StoreResult resultbuf i trackerMutex unlock cnt processedFrames cnt lastSaveFrame config writeInterval Write config maxFramesInMemory frameResults size config maxFramesInMemory del frameResults size config maxFramesInMemory cnt processedFrames cnt startFrame lost cnt startFrame cnt processedFrames cnt processedFrames lost cnt lostFrames lost Write i i del i frameResults i frameResults erase frameResults begin frameResults begin del cnt startFrame del resultMutex unlock count resultMutex lock config binaryOutput WriteBinaryResults WriteTextResults dbgprintf cnt lastSaveFrame cnt processedFrames cnt lastSaveFrame cnt processedFrames resultMutex unlock FILE f fopen outputFile c_str f std::runtime_error SPrintf outputFile c_str version BINFILE_VERSION fwrite version f fwrite config numBeads f fwrite config numFrameInfoColumns f data_offset_pos ftell f tmp fwrite tmp f i i config numFrameInfoColumns i n frameInfoNames i fwrite n c_str n length f data_offset ftell f dbgprintf data_offset fseek f data_offset_pos SEEK_SET fwrite data_offset f dbgprintf config numBeads config numFrameInfoColumns outputFile c_str fclose f outputFile empty FILE f fopen outputFile c_str f dbgprintf outputFile c_str cnt fileError j cnt lastSaveFrame j cnt processedFrames j fr frameResults j cnt startFrame f fwrite j uint f fwrite fr timestamp f fwrite fr frameInfo config numFrameInfoColumns f i i config numBeads i LocalizationResult r fr results i fwrite r pos vector3f f i i config numBeads i fwrite fr results i error f i i config numBeads i fwrite fr results i imageMean f fclose f FILE f outputFile empty fopen outputFile c_str FILE finfo frameInfoFile empty fopen frameInfoFile c_str k cnt lastSaveFrame k cnt processedFrames k fr frameResults k cnt startFrame f fprintf f k fr timestamp i i config numBeads i LocalizationResult r fr results i fprintf f r pos x r pos y r pos z fputs f finfo fprintf finfo k fr timestamp i i config numFrameInfoColumns i fprintf finfo fr frameInfo i fputs finfo finfo fclose finfo f fclose f startFrame lastSaveFrame processedFrames capturedFrames localizationsDone lostFrames fileError f fopen fn write</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">CImageData</field>
    <field name="url">class_c_image_data.html</field>
    <field name="keywords">CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::CImageData</field>
    <field name="args">(int w, int h)</field>
    <field name="url">class_c_image_data.html#a7aeb8d37e489584c23a9fa3978d81daa</field>
    <field name="keywords">CImageData CImageData::CImageData CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::CImageData</field>
    <field name="args">(const CImageData &amp;other)</field>
    <field name="url">class_c_image_data.html#afbaf8178890c617cbecaaf5eacaaf680</field>
    <field name="keywords">CImageData CImageData::CImageData CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::CImageData</field>
    <field name="args">()</field>
    <field name="url">class_c_image_data.html#acd1d3e5ea816f60e32c46bfcb7400f7e</field>
    <field name="keywords">CImageData CImageData::CImageData CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::~CImageData</field>
    <field name="args">()</field>
    <field name="url">class_c_image_data.html#a2acb71bd47b7a401d313422095c3b6d4</field>
    <field name="keywords">CImageData::~CImageData CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::CImageData</field>
    <field name="args">(const TImageData&lt; float &gt; &amp;src)</field>
    <field name="url">class_c_image_data.html#a9ea043ce5278c6a0b671cf88bcd5cd40</field>
    <field name="keywords">CImageData CImageData::CImageData CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::operator=</field>
    <field name="args">(const CImageData &amp;src)</field>
    <field name="url">class_c_image_data.html#ae2f0ccb7b2f2ea0711e26518e3540f83</field>
    <field name="keywords">operator= CImageData::operator= CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CImageData::operator=</field>
    <field name="args">(const TImageData&lt; float &gt; &amp;src)</field>
    <field name="url">class_c_image_data.html#aaa5ced0c590f609f69c88de7c664956e</field>
    <field name="keywords">operator= CImageData::operator= CImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::TImageData</field>
    <field name="args">()</field>
    <field name="url">struct_t_image_data.html#ab452fff333ec33dfd813202aab9c83b5</field>
    <field name="keywords">TImageData TImageData&lt; float &gt;::TImageData TImageData&lt; float &gt; TImageData TImageData::TImageData TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::TImageData</field>
    <field name="args">(float *d, int w, int h)</field>
    <field name="url">struct_t_image_data.html#ac988f01fb11de12f34721e76e25b5513</field>
    <field name="keywords">TImageData TImageData&lt; float &gt;::TImageData TImageData&lt; float &gt; TImageData TImageData::TImageData TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::set</field>
    <field name="args">(Ta *src)</field>
    <field name="url">struct_t_image_data.html#a92b0f42f80923c2e2539b509b44d150f</field>
    <field name="keywords">set TImageData&lt; float &gt;::set TImageData&lt; float &gt; set TImageData::set TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::set</field>
    <field name="args">(const TImageData&lt; Ta &gt; &amp;src)</field>
    <field name="url">struct_t_image_data.html#afa44d16ecad563302e14bd79bede5ce1</field>
    <field name="keywords">set TImageData&lt; float &gt;::set TImageData&lt; float &gt; set TImageData::set TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::copyTo</field>
    <field name="args">(float *dst)</field>
    <field name="url">struct_t_image_data.html#a59e49f2c23986fde59baccd287e1328c</field>
    <field name="keywords">copyTo TImageData&lt; float &gt;::copyTo TImageData&lt; float &gt; copyTo TImageData::copyTo TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::at</field>
    <field name="args">(int x, int y)</field>
    <field name="url">struct_t_image_data.html#ad13c1527ffabe17b997c38090ec5e6b9</field>
    <field name="keywords">at TImageData&lt; float &gt;::at TImageData&lt; float &gt; at TImageData::at TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::interpolate</field>
    <field name="args">(float x, float y, bool *outside=0)</field>
    <field name="url">struct_t_image_data.html#ac92ac7641d694ac8842bbf4b186ad49a</field>
    <field name="keywords">interpolate TImageData&lt; float &gt;::interpolate TImageData&lt; float &gt; interpolate TImageData::interpolate TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::interpolate1D</field>
    <field name="args">(int y, float x)</field>
    <field name="url">struct_t_image_data.html#adf096e9a5565d9949c10dd8f3aa31a14</field>
    <field name="keywords">interpolate1D TImageData&lt; float &gt;::interpolate1D TImageData&lt; float &gt; interpolate1D TImageData::interpolate1D TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::numPixels</field>
    <field name="args">() const</field>
    <field name="url">struct_t_image_data.html#a778a4b0170c0a225b89692c7cedd2440</field>
    <field name="keywords">numPixels TImageData&lt; float &gt;::numPixels TImageData&lt; float &gt; numPixels TImageData::numPixels TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::pitch</field>
    <field name="args">() const</field>
    <field name="url">struct_t_image_data.html#aef0a87643a69b40e19ba11590d51318d</field>
    <field name="keywords">pitch TImageData&lt; float &gt;::pitch TImageData&lt; float &gt; pitch TImageData::pitch TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::normalize</field>
    <field name="args">()</field>
    <field name="url">struct_t_image_data.html#ac987182fb87787d7d274a30cf4a198d4</field>
    <field name="keywords">normalize TImageData&lt; float &gt;::normalize TImageData&lt; float &gt; normalize TImageData::normalize TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::mean</field>
    <field name="args">()</field>
    <field name="url">struct_t_image_data.html#a3b6f4073306aa6f7f819b270196b9bae</field>
    <field name="keywords">mean TImageData&lt; float &gt;::mean TImageData&lt; float &gt; mean TImageData::mean TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::operator[]</field>
    <field name="args">(int i)</field>
    <field name="url">struct_t_image_data.html#a2f381200e0a64cbcbe04d83790dd96ba</field>
    <field name="keywords">operator[] TImageData&lt; float &gt;::operator[] TImageData&lt; float &gt; operator[] TImageData::operator[] TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::free</field>
    <field name="args">()</field>
    <field name="url">struct_t_image_data.html#a60a60e309657216a2e35809fdc582b11</field>
    <field name="keywords">free TImageData&lt; float &gt;::free TImageData&lt; float &gt; free TImageData::free TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::writeAsCSV</field>
    <field name="args">(const char *filename, const char *labels[]=0)</field>
    <field name="url">struct_t_image_data.html#aa324cc320e1a5b2d8f42ae56a197dca9</field>
    <field name="keywords">writeAsCSV TImageData&lt; float &gt;::writeAsCSV TImageData&lt; float &gt; writeAsCSV TImageData::writeAsCSV TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TImageData&lt; float &gt;::alloc</field>
    <field name="args">(int w, int h)</field>
    <field name="url">struct_t_image_data.html#a8ae528964e70c0d0a98b8481cc8b083e</field>
    <field name="keywords">alloc TImageData&lt; float &gt;::alloc TImageData&lt; float &gt; alloc TImageData::alloc TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">TImageData&lt; float &gt;::data</field>
    <field name="url">struct_t_image_data.html#a78c7415ecee3965da7e25149cea6f4d8</field>
    <field name="keywords">data TImageData&lt; float &gt;::data TImageData&lt; float &gt; data TImageData::data TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">TImageData&lt; float &gt;::w</field>
    <field name="url">struct_t_image_data.html#aa46faa6f66f9d6f93c65e14aea643eb3</field>
    <field name="keywords">w TImageData&lt; float &gt;::w TImageData&lt; float &gt; w TImageData::w TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">TImageData&lt; float &gt;::h</field>
    <field name="url">struct_t_image_data.html#a252235d07e487e8d02908aed062147bd</field>
    <field name="keywords">h TImageData&lt; float &gt;::h TImageData&lt; float &gt; h TImageData::h TImageData&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ComputeMaxInterp</field>
    <field name="url">class_compute_max_interp.html</field>
    <field name="keywords">ComputeMaxInterp</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeMaxInterp::max_</field>
    <field name="args">(T a, T b)</field>
    <field name="url">class_compute_max_interp.html#aca1d7eb7e01f35799fb57a6ba12703a2</field>
    <field name="keywords">max_ ComputeMaxInterp::max_ ComputeMaxInterp&lt; T, numPts &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeMaxInterp::min_</field>
    <field name="args">(T a, T b)</field>
    <field name="url">class_compute_max_interp.html#a7182479e13541d98b5d0ba6f65eff902</field>
    <field name="keywords">min_ ComputeMaxInterp::min_ ComputeMaxInterp&lt; T, numPts &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ComputeMaxInterp::Compute</field>
    <field name="args">(T *data, int len, const T *weights, LsqSqQuadFit&lt; T &gt; *fit=0)</field>
    <field name="url">class_compute_max_interp.html#aa1ec2481d8a866f624f05ba53fb2d3bc</field>
    <field name="keywords">Compute ComputeMaxInterp::Compute ComputeMaxInterp&lt; T, numPts &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">CPUTracker</field>
    <field name="url">class_c_p_u_tracker.html</field>
    <field name="keywords">CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">CPUTracker::LUTProfileMaxComputeMode</field>
    <field name="url">class_c_p_u_tracker.html#a196ac690351a7a8449fe21012de9efdf</field>
    <field name="keywords">LUTProfileMaxComputeMode CPUTracker::LUTProfileMaxComputeMode CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTracker::LUTProfMaxQuadraticFit</field>
    <field name="url">class_c_p_u_tracker.html#a196ac690351a7a8449fe21012de9efdfa699b606aff628359036eef4585adba0e</field>
    <field name="keywords">LUTProfMaxQuadraticFit CPUTracker::LUTProfMaxQuadraticFit CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTracker::LUTProfMaxSplineFit</field>
    <field name="url">class_c_p_u_tracker.html#a196ac690351a7a8449fe21012de9efdfac91717f744a9d4cd4403cb334ed8f736</field>
    <field name="keywords">LUTProfMaxSplineFit CPUTracker::LUTProfMaxSplineFit CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTracker::LUTProfMaxSimpleInterp</field>
    <field name="url">class_c_p_u_tracker.html#a196ac690351a7a8449fe21012de9efdfac33bc6099016f7da393c53fe4c7ecd5c</field>
    <field name="keywords">LUTProfMaxSimpleInterp CPUTracker::LUTProfMaxSimpleInterp CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::GetRadialZLUT</field>
    <field name="args">(int index)</field>
    <field name="url">class_c_p_u_tracker.html#a8a8ca2636eca91688ff90d68d04ad69d</field>
    <field name="keywords">GetRadialZLUT CPUTracker::GetRadialZLUT CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::GetPixel</field>
    <field name="args">(int x, int y)</field>
    <field name="url">class_c_p_u_tracker.html#afd0e07572adc7f6f70e5e130ff01402b</field>
    <field name="keywords">GetPixel CPUTracker::GetPixel CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::GetWidth</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker.html#a1f380a0c3d1826e7ef6f7299ce9e5999</field>
    <field name="keywords">GetWidth CPUTracker::GetWidth CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::GetHeight</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker.html#a6da03daaee4bcdfdf8439f3adbc36aa7</field>
    <field name="keywords">GetHeight CPUTracker::GetHeight CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::CPUTracker</field>
    <field name="args">(int w, int h, int xcorwindow=128, bool testRun=false)</field>
    <field name="url">class_c_p_u_tracker.html#a1efdc9c713bc19ea67b5ab1e2a82588f</field>
    <field name="keywords">CPUTracker CPUTracker::CPUTracker CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::~CPUTracker</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker.html#adfd0dc510c6791891d247362ab751dd7</field>
    <field name="keywords">CPUTracker::~CPUTracker CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::KeepInsideBoundaries</field>
    <field name="args">(vector2f *center, float radius)</field>
    <field name="url">class_c_p_u_tracker.html#a5dd95e6830eb86a06e5302e04e411c1a</field>
    <field name="keywords">KeepInsideBoundaries CPUTracker::KeepInsideBoundaries CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::CheckBoundaries</field>
    <field name="args">(vector2f center, float radius)</field>
    <field name="url">class_c_p_u_tracker.html#a7d853e9c7142eefcbd227f18c05b60e7</field>
    <field name="keywords">CheckBoundaries CPUTracker::CheckBoundaries CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeXCorInterpolated</field>
    <field name="args">(vector2f initial, int iterations, int profileWidth, bool &amp;boundaryHit)</field>
    <field name="url">class_c_p_u_tracker.html#aeb547c7da30e1621b2869634182c0900</field>
    <field name="keywords">ComputeXCorInterpolated CPUTracker::ComputeXCorInterpolated CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeQI</field>
    <field name="args">(vector2f initial, int iterations, int radialSteps, int angularStepsPerQuadrant, float angStepIterationFactor, float minRadius, float maxRadius, bool &amp;boundaryHit, float *radialweights=0)</field>
    <field name="url">class_c_p_u_tracker.html#ab856aa12313a07c083f2e193180fd5b6</field>
    <field name="keywords">ComputeQI CPUTracker::ComputeQI CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::Compute2DGaussianMLE</field>
    <field name="args">(vector2f initial, int iterations, float sigma)</field>
    <field name="url">class_c_p_u_tracker.html#a99567e8137e89ff9ee084558e9f26344</field>
    <field name="keywords">Compute2DGaussianMLE CPUTracker::Compute2DGaussianMLE CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::QI_ComputeOffset</field>
    <field name="args">(complex_t *qi_profile, int nr, int axisForDebug)</field>
    <field name="url">class_c_p_u_tracker.html#ac714cf7bcefab595734cc2768a4d4236</field>
    <field name="keywords">QI_ComputeOffset CPUTracker::QI_ComputeOffset CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::QuadrantAlign_ComputeOffset</field>
    <field name="args">(complex_t *profile, complex_t *zlut_prof_fft, int nr, int axisForDebug)</field>
    <field name="url">class_c_p_u_tracker.html#a71992f53900219b3c62bf559b9e28980</field>
    <field name="keywords">QuadrantAlign_ComputeOffset CPUTracker::QuadrantAlign_ComputeOffset CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeAsymmetry</field>
    <field name="args">(vector2f center, int radialSteps, int angularSteps, float minRadius, float maxRadius, float *dstAngProf=0)</field>
    <field name="url">class_c_p_u_tracker.html#a05039be68af2184529ccb2a8713f7cbe</field>
    <field name="keywords">ComputeAsymmetry CPUTracker::ComputeAsymmetry CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetImage</field>
    <field name="args">(TPixel *srcImage, uint srcpitch)</field>
    <field name="url">class_c_p_u_tracker.html#ab64472ecfac7e3ae784dc6bc6271a77f</field>
    <field name="keywords">SetImage CPUTracker::SetImage CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetImage16Bit</field>
    <field name="args">(ushort *srcImage, uint srcpitch)</field>
    <field name="url">class_c_p_u_tracker.html#a0f15bef0a76790ce0ba31ce104e3c39a</field>
    <field name="keywords">SetImage16Bit CPUTracker::SetImage16Bit CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetImage8Bit</field>
    <field name="args">(uchar *srcImage, uint srcpitch)</field>
    <field name="url">class_c_p_u_tracker.html#a6bca00a1c694bec1c0858a5794580cce</field>
    <field name="keywords">SetImage8Bit CPUTracker::SetImage8Bit CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetImageFloat</field>
    <field name="args">(float *srcImage)</field>
    <field name="url">class_c_p_u_tracker.html#ab0a855205943f129c8ddd19d34c4a6b3</field>
    <field name="keywords">SetImageFloat CPUTracker::SetImageFloat CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SaveImage</field>
    <field name="args">(const char *filename)</field>
    <field name="url">class_c_p_u_tracker.html#ad43acbdbc335850b8b01a5c6508ef902</field>
    <field name="keywords">SaveImage CPUTracker::SaveImage CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeMeanAndCOM</field>
    <field name="args">(float bgcorrection=0.0f)</field>
    <field name="url">class_c_p_u_tracker.html#a18c3c6ec23abbbfb018d30b166ed140e</field>
    <field name="keywords">ComputeMeanAndCOM CPUTracker::ComputeMeanAndCOM CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeRadialProfile</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius, vector2f center, bool crp, bool *boundaryHit=0, bool normalize=true)</field>
    <field name="url">class_c_p_u_tracker.html#a425db1a2a66d9635d2b4b565ecfdc3b0</field>
    <field name="keywords">ComputeRadialProfile CPUTracker::ComputeRadialProfile CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeQuadrantProfile</field>
    <field name="args">(scalar_t *dst, int radialSteps, int angularSteps, int quadrant, float minRadius, float maxRadius, vector2f center, float *radialWeights=0)</field>
    <field name="url">class_c_p_u_tracker.html#a96cc7e3d9d65226c8aa718b4bb03a633</field>
    <field name="keywords">ComputeQuadrantProfile CPUTracker::ComputeQuadrantProfile CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ComputeZ</field>
    <field name="args">(vector2f center, int angularSteps, int zlutIndex, bool *boundaryHit=0, float *profile=0, float *cmpprof=0, bool normalizeProfile=true)</field>
    <field name="url">class_c_p_u_tracker.html#a8aaf20eab116d030a8549dadc5e2fb03</field>
    <field name="keywords">ComputeZ CPUTracker::ComputeZ CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::FourierTransform2D</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker.html#a723e3ea86ab2cc99e147477037895398</field>
    <field name="keywords">FourierTransform2D CPUTracker::FourierTransform2D CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::FourierRadialProfile</field>
    <field name="args">(float *dst, int radialSteps, int angularSteps, float minradius, float maxradius)</field>
    <field name="url">class_c_p_u_tracker.html#a680410d9616a6e65ea1ad430aa8a56cf</field>
    <field name="keywords">FourierRadialProfile CPUTracker::FourierRadialProfile CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::Normalize</field>
    <field name="args">(float *image=0)</field>
    <field name="url">class_c_p_u_tracker.html#a86461dca5334095dc16624d13e9e859d</field>
    <field name="keywords">Normalize CPUTracker::Normalize CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetRadialZLUT</field>
    <field name="args">(float *data, int planes, int res, int num_zluts, float minradius, float maxradius, bool copyMemory, bool useCorrelation)</field>
    <field name="url">class_c_p_u_tracker.html#a4ce07a1fc9189a4bdd66f5e6917af28b</field>
    <field name="keywords">SetRadialZLUT CPUTracker::SetRadialZLUT CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::SetRadialWeights</field>
    <field name="args">(float *w)</field>
    <field name="url">class_c_p_u_tracker.html#a1b14ce6b297fa7f0816a28973a881a95</field>
    <field name="keywords">SetRadialWeights CPUTracker::SetRadialWeights CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::CalculateErrorCurve</field>
    <field name="args">(double *errorcurve_dest, float *profile, float *zlut_sel)</field>
    <field name="url">class_c_p_u_tracker.html#a3505604c838186c348562bac8a2fedfe</field>
    <field name="keywords">CalculateErrorCurve CPUTracker::CalculateErrorCurve CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::CalculateInterpolatedZLUTProfile</field>
    <field name="args">(float *profile_dest, float z, int zlutIndex)</field>
    <field name="url">class_c_p_u_tracker.html#a4ae169f9618eeb09f129815229eaeb33</field>
    <field name="keywords">CalculateInterpolatedZLUTProfile CPUTracker::CalculateInterpolatedZLUTProfile CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::CalculateErrorFlag</field>
    <field name="args">(double *prof1, double *prof2)</field>
    <field name="url">class_c_p_u_tracker.html#a9222708c644ddeecbc2519ad8c1b4a2f</field>
    <field name="keywords">CalculateErrorFlag CPUTracker::CalculateErrorFlag CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::LUTProfileCompare</field>
    <field name="args">(float *profile, int zlutIndex, float *cmpProf, LUTProfileMaxComputeMode maxPosMethod, float *lsqfittedcurve=0, int *maxPos=0, int frameNum=0)</field>
    <field name="url">class_c_p_u_tracker.html#a605758e0bf1f897f86f38b65e99e320b</field>
    <field name="keywords">LUTProfileCompare CPUTracker::LUTProfileCompare CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::LUTProfileCompareAdjustedWeights</field>
    <field name="args">(float *rprof, int zlutIndex, float z_estim)</field>
    <field name="url">class_c_p_u_tracker.html#ab915cca7e40b60f68f5e7d5c10386ddc</field>
    <field name="keywords">LUTProfileCompareAdjustedWeights CPUTracker::LUTProfileCompareAdjustedWeights CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::GetDebugImage</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker.html#ac0c9033626a30f3b8d1eccf02b7efa82</field>
    <field name="keywords">GetDebugImage CPUTracker::GetDebugImage CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::ApplyOffsetGain</field>
    <field name="args">(float *offset, float *gain, float offsetFactor, float gainFactor)</field>
    <field name="url">class_c_p_u_tracker.html#a97e9bde337abe501b108f5aac09c7db9</field>
    <field name="keywords">ApplyOffsetGain CPUTracker::ApplyOffsetGain CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::AllocateQIFFTs</field>
    <field name="args">(int nsteps)</field>
    <field name="url">class_c_p_u_tracker.html#aafcdd89f94bd04e92bf0fd228a59b1a5</field>
    <field name="keywords">AllocateQIFFTs CPUTracker::AllocateQIFFTs CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::QuadrantAlign</field>
    <field name="args">(vector3f initial, int beadIndex, int angularStepsPerQuadrant, bool &amp;boundaryHit)</field>
    <field name="url">class_c_p_u_tracker.html#a7e9e0d809af103c8a24d6ecf09fdfb1c</field>
    <field name="keywords">QuadrantAlign CPUTracker::QuadrantAlign CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::width</field>
    <field name="url">class_c_p_u_tracker.html#afb77fe1c7e1a38d25d5aadded5a36fb9</field>
    <field name="keywords">width CPUTracker::width CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::height</field>
    <field name="url">class_c_p_u_tracker.html#a5d1e01c6a878ff7f0c138f011b0ca5d3</field>
    <field name="keywords">height CPUTracker::height CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::xcorw</field>
    <field name="url">class_c_p_u_tracker.html#a31994d45332742dd422f876f5897233b</field>
    <field name="keywords">xcorw CPUTracker::xcorw CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::trackerID</field>
    <field name="url">class_c_p_u_tracker.html#ad80ba679c9c88be30b018a31fef72ed1</field>
    <field name="keywords">trackerID CPUTracker::trackerID CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::srcImage</field>
    <field name="url">class_c_p_u_tracker.html#a393778bc9b49eb6d5014fd814c5dfcdf</field>
    <field name="keywords">srcImage CPUTracker::srcImage CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::debugImage</field>
    <field name="url">class_c_p_u_tracker.html#a58cde24ef2ce5057d42b678951a2239b</field>
    <field name="keywords">debugImage CPUTracker::debugImage CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::mean</field>
    <field name="url">class_c_p_u_tracker.html#a611986d18c52010b79815a9cb920b00d</field>
    <field name="keywords">mean CPUTracker::mean CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::stdev</field>
    <field name="url">class_c_p_u_tracker.html#ae5697cf2319755515193ae21d0c8995f</field>
    <field name="keywords">stdev CPUTracker::stdev CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::radialDirs</field>
    <field name="url">class_c_p_u_tracker.html#a88ec0839b0866df86fb12603e553a9b9</field>
    <field name="keywords">radialDirs CPUTracker::radialDirs CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zluts</field>
    <field name="url">class_c_p_u_tracker.html#ac187d3124a66c6743c2037bb82d9a67d</field>
    <field name="keywords">zluts CPUTracker::zluts CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_memoryOwner</field>
    <field name="url">class_c_p_u_tracker.html#a52fb6848573fc603a4e6e435e3e2352f</field>
    <field name="keywords">zlut_memoryOwner CPUTracker::zlut_memoryOwner CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_planes</field>
    <field name="url">class_c_p_u_tracker.html#ad28d60ad587ae3f89b9dba7f82c135f7</field>
    <field name="keywords">zlut_planes CPUTracker::zlut_planes CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_res</field>
    <field name="url">class_c_p_u_tracker.html#a058eae282c9bf847cd8e39664688c5bc</field>
    <field name="keywords">zlut_res CPUTracker::zlut_res CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_count</field>
    <field name="url">class_c_p_u_tracker.html#a492dd4655d741df0d4d1bb51c52bcca2</field>
    <field name="keywords">zlut_count CPUTracker::zlut_count CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_minradius</field>
    <field name="url">class_c_p_u_tracker.html#a18ed4e4c7e10ea5728eaf4d36b864fdc</field>
    <field name="keywords">zlut_minradius CPUTracker::zlut_minradius CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_maxradius</field>
    <field name="url">class_c_p_u_tracker.html#aac96fa28c0ee4462e176e78c9ec91335</field>
    <field name="keywords">zlut_maxradius CPUTracker::zlut_maxradius CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_useCorrelation</field>
    <field name="url">class_c_p_u_tracker.html#a324e4b9cfe1337d9c33bf9690e6c1ef6</field>
    <field name="keywords">zlut_useCorrelation CPUTracker::zlut_useCorrelation CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::zlut_radialweights</field>
    <field name="url">class_c_p_u_tracker.html#a0512849e34777963ac4d380682f804a3</field>
    <field name="keywords">zlut_radialweights CPUTracker::zlut_radialweights CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::qa_fft_forward</field>
    <field name="url">class_c_p_u_tracker.html#af3a10b319bc4de18d2429f9e30544c4a</field>
    <field name="keywords">qa_fft_forward CPUTracker::qa_fft_forward CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::qa_fft_backward</field>
    <field name="url">class_c_p_u_tracker.html#aca16d9dc92365498d092b937d6959d7e</field>
    <field name="keywords">qa_fft_backward CPUTracker::qa_fft_backward CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::testRun</field>
    <field name="url">class_c_p_u_tracker.html#a5dd04ccf64ee6885b2dc272553c29644</field>
    <field name="keywords">testRun CPUTracker::testRun CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::xcorBuffer</field>
    <field name="url">class_c_p_u_tracker.html#a50c41b873db189fb3cb01068025a2764</field>
    <field name="keywords">xcorBuffer CPUTracker::xcorBuffer CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::quadrantDirs</field>
    <field name="url">class_c_p_u_tracker.html#ae155aab5f1ed07d8467818b915087b20</field>
    <field name="keywords">quadrantDirs CPUTracker::quadrantDirs CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::qi_radialsteps</field>
    <field name="url">class_c_p_u_tracker.html#a98d341a251610821e51783ce2dc4179c</field>
    <field name="keywords">qi_radialsteps CPUTracker::qi_radialsteps CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::qi_fft_forward</field>
    <field name="url">class_c_p_u_tracker.html#a1b17351aec1bcd117d6f1e304904b282</field>
    <field name="keywords">qi_fft_forward CPUTracker::qi_fft_forward CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::qi_fft_backward</field>
    <field name="url">class_c_p_u_tracker.html#aa0ff71d20678c294eeeebb0b0eec1fc8</field>
    <field name="keywords">qi_fft_backward CPUTracker::qi_fft_backward CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::fft2d</field>
    <field name="url">class_c_p_u_tracker.html#a62ed72a32b90914199ba06c3df929dd6</field>
    <field name="keywords">fft2d CPUTracker::fft2d CPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">CPUTracker::FFT2D</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html</field>
    <field name="keywords">FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::FFT2D::FFT2D</field>
    <field name="args">(int w, int h)</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#ab9f86290796485ee06126ec71d3a5b5c</field>
    <field name="keywords">FFT2D CPUTracker::FFT2D::FFT2D CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::FFT2D::~FFT2D</field>
    <field name="args">()</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#aacd75903885ff9c5aa45402a833b024e</field>
    <field name="keywords">CPUTracker::FFT2D::~FFT2D CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTracker::FFT2D::Apply</field>
    <field name="args">(float *d)</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#a266f6fac8b291b4d7cc81a903320615a</field>
    <field name="keywords">Apply CPUTracker::FFT2D::Apply CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::FFT2D::xfft</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#aaf92fefc5608fec68b29fb85ca688e58</field>
    <field name="keywords">xfft CPUTracker::FFT2D::xfft CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::FFT2D::yfft</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#ada8cd484cb495ade7c790a39bb141651</field>
    <field name="keywords">yfft CPUTracker::FFT2D::yfft CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::FFT2D::cbuf</field>
    <field name="url">class_c_p_u_tracker_1_1_f_f_t2_d.html#a1d2a1206265cc858a91446f9dd081b6c</field>
    <field name="keywords">cbuf CPUTracker::FFT2D::cbuf CPUTracker::FFT2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">CPUTracker::Gauss2DResult</field>
    <field name="url">struct_c_p_u_tracker_1_1_gauss2_d_result.html</field>
    <field name="keywords">Gauss2DResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::Gauss2DResult::pos</field>
    <field name="url">struct_c_p_u_tracker_1_1_gauss2_d_result.html#a7b4664668842daa04882ca2dd1d91fce</field>
    <field name="keywords">pos CPUTracker::Gauss2DResult::pos CPUTracker::Gauss2DResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::Gauss2DResult::I0</field>
    <field name="url">struct_c_p_u_tracker_1_1_gauss2_d_result.html#a0d28ea277cd7675a56bb8c4851bae2e7</field>
    <field name="keywords">I0 CPUTracker::Gauss2DResult::I0 CPUTracker::Gauss2DResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CPUTracker::Gauss2DResult::bg</field>
    <field name="url">struct_c_p_u_tracker_1_1_gauss2_d_result.html#a296176805f852017c89642fc11dacbe9</field>
    <field name="keywords">bg CPUTracker::Gauss2DResult::bg CPUTracker::Gauss2DResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">CUDADeviceInfo</field>
    <field name="url">struct_c_u_d_a_device_info.html</field>
    <field name="keywords">CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CUDADeviceInfo::name</field>
    <field name="url">struct_c_u_d_a_device_info.html#a58843d89b2ccb6dcb9c7c0c9337e030b</field>
    <field name="keywords">name CUDADeviceInfo::name CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CUDADeviceInfo::clockRate</field>
    <field name="url">struct_c_u_d_a_device_info.html#a4eedab9d5e24fc4f832f8a239768bed7</field>
    <field name="keywords">clockRate CUDADeviceInfo::clockRate CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CUDADeviceInfo::multiProcCount</field>
    <field name="url">struct_c_u_d_a_device_info.html#aa49e12b08b205bd073e1d0fbf9f06815</field>
    <field name="keywords">multiProcCount CUDADeviceInfo::multiProcCount CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CUDADeviceInfo::major</field>
    <field name="url">struct_c_u_d_a_device_info.html#a2e19be519706c8a692ba72a814a839a7</field>
    <field name="keywords">major CUDADeviceInfo::major CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">CUDADeviceInfo::minor</field>
    <field name="url">struct_c_u_d_a_device_info.html#aece001b941ba540febcdd704bd6b6e86</field>
    <field name="keywords">minor CUDADeviceInfo::minor CUDADeviceInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">cudaImageList</field>
    <field name="url">structcuda_image_list.html</field>
    <field name="keywords">cudaImageList</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">cudaImageList::MaxImageWidth</field>
    <field name="url">structcuda_image_list.html#a1b8db76e0fc065a9133a753dcf8664b6a197720e0aff172992408e8de3cbd6e4a</field>
    <field name="keywords">MaxImageWidth cudaImageList::MaxImageWidth cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::fullwidth</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a4f2cf476a48fe70d5d1849212017883b</field>
    <field name="keywords">fullwidth cudaImageList::fullwidth cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::fullheight</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#abec8121a698e04d7d3afa21b77a673a8</field>
    <field name="keywords">fullheight cudaImageList::fullheight cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::capacity</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a6759021920d3f07b1b46049a3d3ab78e</field>
    <field name="keywords">capacity cudaImageList::capacity cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::numpixels</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a7f29b098dc0916fff9a396c8250c560c</field>
    <field name="keywords">numpixels cudaImageList::numpixels cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::isEmpty</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a27f76df59ecf2802d89ce123f21a2780</field>
    <field name="keywords">isEmpty cudaImageList::isEmpty cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::allocateHostImageBuffer</field>
    <field name="args">(pinned_array&lt; T, Flags &gt; &amp;hostImgBuf)</field>
    <field name="url">structcuda_image_list.html#a1e1ba9d79be0038996d1d4a65042a4db</field>
    <field name="keywords">allocateHostImageBuffer cudaImageList::allocateHostImageBuffer cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::get</field>
    <field name="args">(int i)</field>
    <field name="url">structcuda_image_list.html#a5e6745abe38ecdfab4b5e9913e26c952</field>
    <field name="keywords">get cudaImageList::get cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::pixel_oobcheck</field>
    <field name="args">(int x, int y, int imgIndex, T border=0.0f)</field>
    <field name="url">structcuda_image_list.html#a12659cbcf3d4801ea8e6c354efd58baa</field>
    <field name="keywords">pixel_oobcheck cudaImageList::pixel_oobcheck cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::pixel</field>
    <field name="args">(int x, int y, int imgIndex)</field>
    <field name="url">structcuda_image_list.html#a3688416d9034449c1493e593c8456eb2</field>
    <field name="keywords">pixel cudaImageList::pixel cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::pixelAddress</field>
    <field name="args">(int x, int y, int imgIndex)</field>
    <field name="url">structcuda_image_list.html#aab7ac2329d20752d4364c87a21d76092</field>
    <field name="keywords">pixelAddress cudaImageList::pixelAddress cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::boundaryHit</field>
    <field name="args">(float2 center, float radius)</field>
    <field name="url">structcuda_image_list.html#a0be4b46f22a09af571d491bbc99fc62c</field>
    <field name="keywords">boundaryHit cudaImageList::boundaryHit cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::free</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a9c8aaf572231ec29a583e1ecb3954288</field>
    <field name="keywords">free cudaImageList::free cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::copyImageToHost</field>
    <field name="args">(int img, T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">structcuda_image_list.html#a656201f3b644a8435b1c7a37951ff672</field>
    <field name="keywords">copyImageToHost cudaImageList::copyImageToHost cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::copyImageToDevice</field>
    <field name="args">(int img, T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">structcuda_image_list.html#aecf1932bc3e9fceff797da80fd19b0a5</field>
    <field name="keywords">copyImageToDevice cudaImageList::copyImageToDevice cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::copyToHost</field>
    <field name="args">(T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">structcuda_image_list.html#a5bb9d8aaf4bf1c96bc3e50b6b4407756</field>
    <field name="keywords">copyToHost cudaImageList::copyToHost cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::copyToDevice</field>
    <field name="args">(T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">structcuda_image_list.html#a090c71fb373e9f7d52a3694a835a5f18</field>
    <field name="keywords">copyToDevice cudaImageList::copyToDevice cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::copyToDevice</field>
    <field name="args">(T *src, int numImages, bool async=false, cudaStream_t s=0)</field>
    <field name="url">structcuda_image_list.html#a76f7051f3ddc025ae684030e86413412</field>
    <field name="keywords">copyToDevice cudaImageList::copyToDevice cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::clear</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a641a7d5e6610bb1c9759a8a9abb94c63</field>
    <field name="keywords">clear cudaImageList::clear cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::totalNumPixels</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#ab2932830664bc51c062c9a1bbca38a37</field>
    <field name="keywords">totalNumPixels cudaImageList::totalNumPixels cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::totalNumBytes</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#a6d7497e075d8501461099e602d69dc78</field>
    <field name="keywords">totalNumBytes cudaImageList::totalNumBytes cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::interpolate</field>
    <field name="args">(float x, float y, int idx, bool &amp;outside)</field>
    <field name="url">structcuda_image_list.html#a9f9060dfb911251c4170cad388aeccab</field>
    <field name="keywords">interpolate cudaImageList::interpolate cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::bind</field>
    <field name="args">(texture&lt; T, cudaTextureType2D, cudaReadModeElementType &gt; &amp;texref)</field>
    <field name="url">structcuda_image_list.html#a36a72cb4f9e988aa7ce04866592aa55d</field>
    <field name="keywords">bind cudaImageList::bind cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::unbind</field>
    <field name="args">(texture&lt; T, cudaTextureType2D, cudaReadModeElementType &gt; &amp;texref)</field>
    <field name="url">structcuda_image_list.html#a5fd1e6014eb7f4a91e04344e208c70fe</field>
    <field name="keywords">unbind cudaImageList::unbind cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::computeImagePos</field>
    <field name="args">(int &amp;x, int &amp;y, int idx)</field>
    <field name="url">structcuda_image_list.html#a579fe28a4c876eb211cd2e5548447a2c</field>
    <field name="keywords">computeImagePos cudaImageList::computeImagePos cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::interpolateFromTexture</field>
    <field name="args">(texture&lt; T, cudaTextureType2D, cudaReadModeElementType &gt; texref, float x, float y, int idx, bool &amp;outside)</field>
    <field name="url">structcuda_image_list.html#a0c1befe3e606950d6dd8d78da273ffd8</field>
    <field name="keywords">interpolateFromTexture cudaImageList::interpolateFromTexture cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::emptyList</field>
    <field name="args">()</field>
    <field name="url">structcuda_image_list.html#ae998034684c0aa6c4e0eceda64fa8e63</field>
    <field name="keywords">emptyList cudaImageList::emptyList cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::alloc</field>
    <field name="args">(int w, int h, int amount)</field>
    <field name="url">structcuda_image_list.html#abfee870822f21abd6a8d5563ec26199d</field>
    <field name="keywords">alloc cudaImageList::alloc cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">cudaImageList::interp</field>
    <field name="args">(T a, T b, float x)</field>
    <field name="url">structcuda_image_list.html#afa122427dc703d5c4a13b87d5926de20</field>
    <field name="keywords">interp cudaImageList::interp cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaImageList::data</field>
    <field name="url">structcuda_image_list.html#a5e32f3d282240b52b543b693723ee8ed</field>
    <field name="keywords">data cudaImageList::data cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaImageList::pitch</field>
    <field name="url">structcuda_image_list.html#a5a52e30551cba6350cbedbb2eb5693b5</field>
    <field name="keywords">pitch cudaImageList::pitch cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaImageList::w</field>
    <field name="url">structcuda_image_list.html#a1fe4adbbd48678e07c6b58f50dbe8528</field>
    <field name="keywords">w cudaImageList::w cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaImageList::h</field>
    <field name="url">structcuda_image_list.html#a90c8a96b431b4faa4759987f44d06123</field>
    <field name="keywords">h cudaImageList::h cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">cudaImageList::count</field>
    <field name="url">structcuda_image_list.html#aecc60af52765a600acbebacf2f28c0db</field>
    <field name="keywords">count cudaImageList::count cudaImageList&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">device_vec</field>
    <field name="url">classdevice__vec.html</field>
    <field name="keywords">device_vec</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::device_vec</field>
    <field name="args">()</field>
    <field name="url">classdevice__vec.html#a5a35735d73712612a808a14be715b0d8</field>
    <field name="keywords">device_vec device_vec::device_vec device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::device_vec</field>
    <field name="args">(size_t N)</field>
    <field name="url">classdevice__vec.html#ae849d2c03629659600de03d5f1e380df</field>
    <field name="keywords">device_vec device_vec::device_vec device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::device_vec</field>
    <field name="args">(const device_vec&lt; T &gt; &amp;src)</field>
    <field name="url">classdevice__vec.html#a610a2ac053f01179ad1087f63ca48155</field>
    <field name="keywords">device_vec device_vec::device_vec device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::device_vec</field>
    <field name="args">(const std::vector&lt; T &gt; &amp;src)</field>
    <field name="url">classdevice__vec.html#abb16a39b663bec4c218ae65a54e34b11</field>
    <field name="keywords">device_vec device_vec::device_vec device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::~device_vec</field>
    <field name="args">()</field>
    <field name="url">classdevice__vec.html#a2e2e639f54add3bf887fd2e8ba58d6ea</field>
    <field name="keywords">device_vec::~device_vec device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::init</field>
    <field name="args">(size_t s)</field>
    <field name="url">classdevice__vec.html#af37488e2aa53aedb69505c2ce3602f96</field>
    <field name="keywords">init device_vec::init device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::free</field>
    <field name="args">()</field>
    <field name="url">classdevice__vec.html#a4774d74dc6725dfd943e847a8fd0b14f</field>
    <field name="keywords">free device_vec::free device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::vector&lt; T &gt;</field>
    <field name="args">() const </field>
    <field name="url">classdevice__vec.html#a154eb7a6ed0f8210579dc470698653a3</field>
    <field name="keywords">vector&lt; T &gt; device_vec::vector&lt; T &gt; device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::operator=</field>
    <field name="args">(const std::vector&lt; T &gt; &amp;src)</field>
    <field name="url">classdevice__vec.html#a3f2ed4d208a916b85280bbe50aebb1e0</field>
    <field name="keywords">operator= device_vec::operator= device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::operator=</field>
    <field name="args">(const device_vec&lt; T &gt; &amp;src)</field>
    <field name="url">classdevice__vec.html#a5c89e02994d71d7b02f92c97e495a260</field>
    <field name="keywords">operator= device_vec::operator= device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::copyToHost</field>
    <field name="args">(T *dst, bool async, cudaStream_t s=0)</field>
    <field name="url">classdevice__vec.html#a9e8112582faa85f58fff7aeeafb3c455</field>
    <field name="keywords">copyToHost device_vec::copyToHost device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::copyToHost</field>
    <field name="args">(std::vector&lt; T &gt; &amp;dst, bool async, cudaStream_t s=0)</field>
    <field name="url">classdevice__vec.html#a786087e50d360d6cf816d6146239c2ee</field>
    <field name="keywords">copyToHost device_vec::copyToHost device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::copyToDevice</field>
    <field name="args">(const std::vector&lt; T &gt; &amp;src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">classdevice__vec.html#ae995f17b258e9b619ca6fa7e4a701948</field>
    <field name="keywords">copyToDevice device_vec::copyToDevice device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::copyToDevice</field>
    <field name="args">(const T *first, size_t size, bool async=false, cudaStream_t s=0)</field>
    <field name="url">classdevice__vec.html#ad0dbcf813b914dcd127e04ea192781a6</field>
    <field name="keywords">copyToDevice device_vec::copyToDevice device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::toVector</field>
    <field name="args">()</field>
    <field name="url">classdevice__vec.html#aabbd149a94ae2af2bdef222083094364</field>
    <field name="keywords">toVector device_vec::toVector device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">device_vec::memsize</field>
    <field name="args">()</field>
    <field name="url">classdevice__vec.html#ab21a5b6ed647145a71a3db19d3c26156</field>
    <field name="keywords">memsize device_vec::memsize device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">device_vec::size</field>
    <field name="url">classdevice__vec.html#a1452496fe02af53427d0284e2bb6ca6e</field>
    <field name="keywords">size device_vec::size device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">device_vec::data</field>
    <field name="url">classdevice__vec.html#a908e53910a02968513832c242790caa0</field>
    <field name="keywords">data device_vec::data device_vec&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ErrorCluster</field>
    <field name="url">struct_error_cluster.html</field>
    <field name="keywords">ErrorCluster</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ErrorCluster::status</field>
    <field name="url">struct_error_cluster.html#a332d9ef24869985771e4114428871035</field>
    <field name="keywords">status ErrorCluster::status ErrorCluster</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ErrorCluster::code</field>
    <field name="url">struct_error_cluster.html#afc63e0ed91bc2423b4d6034568c1e55f</field>
    <field name="keywords">code ErrorCluster::code ErrorCluster</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ErrorCluster::message</field>
    <field name="url">struct_error_cluster.html#a1352bf4f7aea60ac5d0b873961831260</field>
    <field name="keywords">message ErrorCluster::message ErrorCluster</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">FFT2DTracker</field>
    <field name="url">class_f_f_t2_d_tracker.html</field>
    <field name="keywords">FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2DTracker::FFT2DTracker</field>
    <field name="args">(int w, int h)</field>
    <field name="url">class_f_f_t2_d_tracker.html#aaa109a807ec00addd7e1c0b5faf583c5</field>
    <field name="keywords">FFT2DTracker FFT2DTracker::FFT2DTracker FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2DTracker::~FFT2DTracker</field>
    <field name="args">()</field>
    <field name="url">class_f_f_t2_d_tracker.html#a79355155c2ca3268cac22e272f8ca550</field>
    <field name="keywords">FFT2DTracker::~FFT2DTracker FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2DTracker::ComputeXCor</field>
    <field name="args">(float *image)</field>
    <field name="url">class_f_f_t2_d_tracker.html#ab8387ba87f83f0e0605e96eab1ca7421</field>
    <field name="keywords">ComputeXCor FFT2DTracker::ComputeXCor FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2DTracker::GetAutoConvResults</field>
    <field name="args">()</field>
    <field name="url">class_f_f_t2_d_tracker.html#adffbefc9db10af5151b0c8a4862b6a4f</field>
    <field name="keywords">GetAutoConvResults FFT2DTracker::GetAutoConvResults FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FFT2DTracker::ComputeMax2DInterpolated</field>
    <field name="args">(float *img)</field>
    <field name="url">class_f_f_t2_d_tracker.html#aae1858f776337766c223c8eec77dce3e</field>
    <field name="keywords">ComputeMax2DInterpolated FFT2DTracker::ComputeMax2DInterpolated FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::width</field>
    <field name="url">class_f_f_t2_d_tracker.html#a3e9fc0e59543897aa47e4f195ed407a1</field>
    <field name="keywords">width FFT2DTracker::width FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::height</field>
    <field name="url">class_f_f_t2_d_tracker.html#a027298d540cbb086c92c63a70e04c40a</field>
    <field name="keywords">height FFT2DTracker::height FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::plan_fw2D</field>
    <field name="url">class_f_f_t2_d_tracker.html#ac204a75a497e87e7c43fc38758fba7d2</field>
    <field name="keywords">plan_fw2D FFT2DTracker::plan_fw2D FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::plan_bw2D</field>
    <field name="url">class_f_f_t2_d_tracker.html#a90c38a2c90a3e0212a85ce7b2d645215</field>
    <field name="keywords">plan_bw2D FFT2DTracker::plan_bw2D FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::mirror2D</field>
    <field name="url">class_f_f_t2_d_tracker.html#a9e3e37029c015de1f4750964a3ed5701</field>
    <field name="keywords">mirror2D FFT2DTracker::mirror2D FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::fft_buf</field>
    <field name="url">class_f_f_t2_d_tracker.html#ad9f4ba4806399035ae865bc6dcfdfce4</field>
    <field name="keywords">fft_buf FFT2DTracker::fft_buf FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FFT2DTracker::fft_buf_mirrored</field>
    <field name="url">class_f_f_t2_d_tracker.html#a5d416515e26ec5f4415778227209d52a</field>
    <field name="keywords">fft_buf_mirrored FFT2DTracker::fft_buf_mirrored FFT2DTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Image4DCudaArray</field>
    <field name="url">struct_image4_d_cuda_array.html</field>
    <field name="keywords">Image4DCudaArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::getExtent</field>
    <field name="args">()</field>
    <field name="url">struct_image4_d_cuda_array.html#a69a6e1459f05922d781b583e29fe07ca</field>
    <field name="keywords">getExtent Image4DCudaArray::getExtent Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::kernelInst</field>
    <field name="args">()</field>
    <field name="url">struct_image4_d_cuda_array.html#ab815a1a7c5a56396a1582845096d5ba4</field>
    <field name="keywords">kernelInst Image4DCudaArray::kernelInst Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::bind</field>
    <field name="args">(texture&lt; T, cudaTextureType2DLayered, cudaReadModeElementType &gt; &amp;texref)</field>
    <field name="url">struct_image4_d_cuda_array.html#a335cc167d5fa7cfb2d54f02dabe49582</field>
    <field name="keywords">bind Image4DCudaArray::bind Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::unbind</field>
    <field name="args">(texture&lt; T, cudaTextureType2DLayered, cudaReadModeElementType &gt; &amp;texref)</field>
    <field name="url">struct_image4_d_cuda_array.html#a48bf8bb27196030387c6047cb6b7c323</field>
    <field name="keywords">unbind Image4DCudaArray::unbind Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::bind</field>
    <field name="args">(surface&lt; void, cudaSurfaceType2DLayered &gt; &amp;surf)</field>
    <field name="url">struct_image4_d_cuda_array.html#a465db4fbb5e7019f3327aa1a2a5b8251</field>
    <field name="keywords">bind Image4DCudaArray::bind Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::Image4DCudaArray</field>
    <field name="args">(int sx, int sy, int numImg, int sL)</field>
    <field name="url">struct_image4_d_cuda_array.html#a111e6a02aa56ecac3edb020a7628f38f</field>
    <field name="keywords">Image4DCudaArray Image4DCudaArray::Image4DCudaArray Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::getImagePos</field>
    <field name="args">(int image)</field>
    <field name="url">struct_image4_d_cuda_array.html#a24b592522dd8418266cfb434cc09f40e</field>
    <field name="keywords">getImagePos Image4DCudaArray::getImagePos Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::~Image4DCudaArray</field>
    <field name="args">()</field>
    <field name="url">struct_image4_d_cuda_array.html#a217d7dd1db0434b6ec0e41c9b1723a89</field>
    <field name="keywords">Image4DCudaArray::~Image4DCudaArray Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::copyToDevice</field>
    <field name="args">(T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">struct_image4_d_cuda_array.html#a3cff003804ea5cdcc1fad578726a004b</field>
    <field name="keywords">copyToDevice Image4DCudaArray::copyToDevice Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::copyToHost</field>
    <field name="args">(T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">struct_image4_d_cuda_array.html#a5f91354c4b6bffdfaea64d2feb078f81</field>
    <field name="keywords">copyToHost Image4DCudaArray::copyToHost Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::clear</field>
    <field name="args">()</field>
    <field name="url">struct_image4_d_cuda_array.html#a7157ddd0e5a243d4692672fa0f5ac360</field>
    <field name="keywords">clear Image4DCudaArray::clear Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::copyImageToHost</field>
    <field name="args">(int img, int layer, T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">struct_image4_d_cuda_array.html#ae5163e1758111d003633823d9af387f8</field>
    <field name="keywords">copyImageToHost Image4DCudaArray::copyImageToHost Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::copyImageToDevice</field>
    <field name="args">(int img, int layer, T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">struct_image4_d_cuda_array.html#aed4f5c8cc5bda9d267b99757cbb23f80</field>
    <field name="keywords">copyImageToDevice Image4DCudaArray::copyImageToDevice Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::free</field>
    <field name="args">()</field>
    <field name="url">struct_image4_d_cuda_array.html#a57f7d708e0ecbbfd96be7ebce94200e0</field>
    <field name="keywords">free Image4DCudaArray::free Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::array</field>
    <field name="url">struct_image4_d_cuda_array.html#a4043697cb965dc8bd3dbc33f3840dd92</field>
    <field name="keywords">array Image4DCudaArray::array Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::imgw</field>
    <field name="url">struct_image4_d_cuda_array.html#a7f23302d874ffff216e49e33e9b5ca41</field>
    <field name="keywords">imgw Image4DCudaArray::imgw Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::imgh</field>
    <field name="url">struct_image4_d_cuda_array.html#abdb9e7f88b589af46a4cf0b543ecac9b</field>
    <field name="keywords">imgh Image4DCudaArray::imgh Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::layerw</field>
    <field name="url">struct_image4_d_cuda_array.html#aef314c7da09f67d8095bfb93a5102906</field>
    <field name="keywords">layerw Image4DCudaArray::layerw Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::layerh</field>
    <field name="url">struct_image4_d_cuda_array.html#a1fd2bc8556d6c750f67799dacad099a4</field>
    <field name="keywords">layerh Image4DCudaArray::layerh Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::nlayers</field>
    <field name="url">struct_image4_d_cuda_array.html#a2cc68c6d8492e7a0d2fa194cc3a58187</field>
    <field name="keywords">nlayers Image4DCudaArray::nlayers Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::numImg</field>
    <field name="url">struct_image4_d_cuda_array.html#acc1ba710635bc84af3d3032b7a38dea3</field>
    <field name="keywords">numImg Image4DCudaArray::numImg Image4DCudaArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Image4DCudaArray::KernelInst</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html</field>
    <field name="keywords">KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::KernelInst::getImagePos</field>
    <field name="args">(int image)</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#a77e0c75976faf9ddbd733b9ff393a7b6</field>
    <field name="keywords">getImagePos Image4DCudaArray::KernelInst::getImagePos Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::KernelInst::readSurfacePixel</field>
    <field name="args">(surface&lt; void, cudaSurfaceType2DLayered &gt; surf, int x, int y, int z)</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#a67dd42510494400ec1a5a438ac6fbd6f</field>
    <field name="keywords">readSurfacePixel Image4DCudaArray::KernelInst::readSurfacePixel Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DCudaArray::KernelInst::writeSurfacePixel</field>
    <field name="args">(surface&lt; void, cudaSurfaceType2DLayered &gt; surf, int x, int y, int z, T value)</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#aa1d4d971eaf1d3685fcda6deb9ad7e71</field>
    <field name="keywords">writeSurfacePixel Image4DCudaArray::KernelInst::writeSurfacePixel Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::KernelInst::imgw</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#aada9791bd402e67c6d9a2dd2e5fa28b5</field>
    <field name="keywords">imgw Image4DCudaArray::KernelInst::imgw Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::KernelInst::imgh</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#a45e62046843a94ac7834849847cafbdc</field>
    <field name="keywords">imgh Image4DCudaArray::KernelInst::imgh Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DCudaArray::KernelInst::layerw</field>
    <field name="url">struct_image4_d_cuda_array_1_1_kernel_inst.html#aa1264147741eabee6f8fae0b22cbcf28</field>
    <field name="keywords">layerw Image4DCudaArray::KernelInst::layerw Image4DCudaArray&lt; T &gt;::KernelInst</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Image4DMemory</field>
    <field name="url">class_image4_d_memory.html</field>
    <field name="keywords">Image4DMemory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::Image4DMemory</field>
    <field name="args">(int w, int h, int d, int L)</field>
    <field name="url">class_image4_d_memory.html#ab0301a129aff5a180d2259bb0b8f265e</field>
    <field name="keywords">Image4DMemory Image4DMemory::Image4DMemory Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::~Image4DMemory</field>
    <field name="args">()</field>
    <field name="url">class_image4_d_memory.html#a793aec57044547a4eafced7d89119a4f</field>
    <field name="keywords">Image4DMemory::~Image4DMemory Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::free</field>
    <field name="args">()</field>
    <field name="url">class_image4_d_memory.html#a187b8613c6116ff7a3e2d16f89ea5a70</field>
    <field name="keywords">free Image4DMemory::free Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::copyToDevice</field>
    <field name="args">(T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">class_image4_d_memory.html#aa37bf1f44a1faa13a4e5bcaccbc3521d</field>
    <field name="keywords">copyToDevice Image4DMemory::copyToDevice Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::copyToHost</field>
    <field name="args">(T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">class_image4_d_memory.html#a0d84c49ba07f61d125c78adb26e969d1</field>
    <field name="keywords">copyToHost Image4DMemory::copyToHost Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::clear</field>
    <field name="args">()</field>
    <field name="url">class_image4_d_memory.html#ace4b1acc4a3cd9f4dd561adaf880e873</field>
    <field name="keywords">clear Image4DMemory::clear Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::getImgAddr</field>
    <field name="args">(int2 imgpos)</field>
    <field name="url">class_image4_d_memory.html#abdb58f2c2a28a0e0bea8cac82701a481</field>
    <field name="keywords">getImgAddr Image4DMemory::getImgAddr Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::copyImageToHost</field>
    <field name="args">(int z, int l, T *dst, bool async=false, cudaStream_t s=0)</field>
    <field name="url">class_image4_d_memory.html#af07453fab9eeb09835465c2b21134d78</field>
    <field name="keywords">copyImageToHost Image4DMemory::copyImageToHost Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::copyImageToDevice</field>
    <field name="args">(int z, int l, T *src, bool async=false, cudaStream_t s=0)</field>
    <field name="url">class_image4_d_memory.html#a55f9299c0d53c8972c66027421ecf181</field>
    <field name="keywords">copyImageToDevice Image4DMemory::copyImageToDevice Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::bind</field>
    <field name="args">()</field>
    <field name="url">class_image4_d_memory.html#aa1e1911fc1cd6ad5bef770647b9111e7</field>
    <field name="keywords">bind Image4DMemory::bind Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::unbind</field>
    <field name="args">()</field>
    <field name="url">class_image4_d_memory.html#a05e6ae04355d403d82fd29e92ad1ff3c</field>
    <field name="keywords">unbind Image4DMemory::unbind Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::read</field>
    <field name="args">(const KernelParams &amp;kp, int x, int y, int2 imgpos)</field>
    <field name="url">class_image4_d_memory.html#a0da7696039fc609c6fb59702273e1db2</field>
    <field name="keywords">read Image4DMemory::read Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::write</field>
    <field name="args">(T value, const KernelParams &amp;kp, int x, int y, int2 imgpos)</field>
    <field name="url">class_image4_d_memory.html#a980280ae643f9bf0b4e2ae921f7a0e9c</field>
    <field name="keywords">write Image4DMemory::write Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::kp</field>
    <field name="url">class_image4_d_memory.html#a6524dc01064c2f1a1176fb066db729d5</field>
    <field name="keywords">kp Image4DMemory::kp Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::layers</field>
    <field name="url">class_image4_d_memory.html#ae22395a1589f6a9422698fb98aa9246a</field>
    <field name="keywords">layers Image4DMemory::layers Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::totalImg</field>
    <field name="url">class_image4_d_memory.html#a5e3ce6717ffeaa4eb544df248a7334b1</field>
    <field name="keywords">totalImg Image4DMemory::totalImg Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::rows</field>
    <field name="url">class_image4_d_memory.html#af556b18c289647e31907875c19c13fd3</field>
    <field name="keywords">rows Image4DMemory::rows Image4DMemory&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Image4DMemory::KernelParams</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html</field>
    <field name="keywords">KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Image4DMemory::KernelParams::GetImagePos</field>
    <field name="args">(int z, int l)</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#ab17ae55e8bc2fe7d01b2e3e364cfdd2a</field>
    <field name="keywords">GetImagePos Image4DMemory::KernelParams::GetImagePos Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::d_data</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#ab938c44c035ecfd8ebdcf2e799392214</field>
    <field name="keywords">d_data Image4DMemory::KernelParams::d_data Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::pitch</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#a9ec3499adf40c6b9538dbd81149dc3ea</field>
    <field name="keywords">pitch Image4DMemory::KernelParams::pitch Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::cols</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#ab0645fa45e43206965496ca17eb86723</field>
    <field name="keywords">cols Image4DMemory::KernelParams::cols Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::depth</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#a9b5896a9e13cdd7f2c628b2a52d5c880</field>
    <field name="keywords">depth Image4DMemory::KernelParams::depth Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::imgw</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#aa622909a1be6fbeefc4d05378433f289</field>
    <field name="keywords">imgw Image4DMemory::KernelParams::imgw Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Image4DMemory::KernelParams::imgh</field>
    <field name="url">struct_image4_d_memory_1_1_kernel_params.html#a0a6639d306e4ed5593c5d497edf6fda6</field>
    <field name="keywords">imgh Image4DMemory::KernelParams::imgh Image4DMemory&lt; T &gt;::KernelParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ImageLUTConfig</field>
    <field name="url">struct_image_l_u_t_config.html</field>
    <field name="keywords">ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageLUTConfig::empty</field>
    <field name="args">()</field>
    <field name="url">struct_image_l_u_t_config.html#abd35253c5fc79e1a7719eb0085a5e30d</field>
    <field name="keywords">empty ImageLUTConfig::empty ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::nLUTs</field>
    <field name="url">struct_image_l_u_t_config.html#ab441a37dad64016dcb53341011197c67</field>
    <field name="keywords">nLUTs ImageLUTConfig::nLUTs ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::planes</field>
    <field name="url">struct_image_l_u_t_config.html#a72137ca4186a2909e2ecbcb7ea7b5f01</field>
    <field name="keywords">planes ImageLUTConfig::planes ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::w</field>
    <field name="url">struct_image_l_u_t_config.html#a3ec6c4f9e7f8774031877239a7b4872a</field>
    <field name="keywords">w ImageLUTConfig::w ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::h</field>
    <field name="url">struct_image_l_u_t_config.html#a082d23e44f6d443a44a4a147becb499b</field>
    <field name="keywords">h ImageLUTConfig::h ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::xscale</field>
    <field name="url">struct_image_l_u_t_config.html#a6acaec2b516bb387269973af678c9b6d</field>
    <field name="keywords">xscale ImageLUTConfig::xscale ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ImageLUTConfig::yscale</field>
    <field name="url">struct_image_l_u_t_config.html#ac335be6537d81d7069a5f383c2bef603</field>
    <field name="keywords">yscale ImageLUTConfig::yscale ImageLUTConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ImageSampler_InterpolatedTexture</field>
    <field name="url">class_image_sampler___interpolated_texture.html</field>
    <field name="keywords">ImageSampler_InterpolatedTexture</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_InterpolatedTexture::BindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___interpolated_texture.html#adc69b3f5ec38ed7fdfe3f8cd0a94fb64</field>
    <field name="keywords">BindTexture ImageSampler_InterpolatedTexture::BindTexture ImageSampler_InterpolatedTexture</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_InterpolatedTexture::UnbindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___interpolated_texture.html#a42e9ea516f12fdebb8e00459e7223ece</field>
    <field name="keywords">UnbindTexture ImageSampler_InterpolatedTexture::UnbindTexture ImageSampler_InterpolatedTexture</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_InterpolatedTexture::Interpolated</field>
    <field name="args">(cudaImageListf &amp;images, float x, float y, int img, bool &amp;outside)</field>
    <field name="url">class_image_sampler___interpolated_texture.html#af5855aa4719094f61aed595bfcfef99f</field>
    <field name="keywords">Interpolated ImageSampler_InterpolatedTexture::Interpolated ImageSampler_InterpolatedTexture</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_InterpolatedTexture::Index</field>
    <field name="args">(cudaImageListf &amp;images, int x, int y, int img)</field>
    <field name="url">class_image_sampler___interpolated_texture.html#a015b3cb6e76967a2873739de232950d2</field>
    <field name="keywords">Index ImageSampler_InterpolatedTexture::Index ImageSampler_InterpolatedTexture</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ImageSampler_MemCopy</field>
    <field name="url">class_image_sampler___mem_copy.html</field>
    <field name="keywords">ImageSampler_MemCopy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_MemCopy::BindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___mem_copy.html#a6c3870ceb718a5311f78de06e0214b28</field>
    <field name="keywords">BindTexture ImageSampler_MemCopy::BindTexture ImageSampler_MemCopy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_MemCopy::UnbindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___mem_copy.html#aba060b0934fc3d3431034aec793cb4b2</field>
    <field name="keywords">UnbindTexture ImageSampler_MemCopy::UnbindTexture ImageSampler_MemCopy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_MemCopy::Interpolated</field>
    <field name="args">(cudaImageListf &amp;images, float x, float y, int img, bool &amp;outside)</field>
    <field name="url">class_image_sampler___mem_copy.html#a2cca9afa207d38aa46663d500b7f9ef0</field>
    <field name="keywords">Interpolated ImageSampler_MemCopy::Interpolated ImageSampler_MemCopy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_MemCopy::Index</field>
    <field name="args">(cudaImageListf &amp;images, int x, int y, int img)</field>
    <field name="url">class_image_sampler___mem_copy.html#a85cff4a0610403a769cce196e7c90d13</field>
    <field name="keywords">Index ImageSampler_MemCopy::Index ImageSampler_MemCopy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ImageSampler_SimpleTextureRead</field>
    <field name="url">class_image_sampler___simple_texture_read.html</field>
    <field name="keywords">ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_SimpleTextureRead::BindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___simple_texture_read.html#a448c66522264587999b4829f556da61d</field>
    <field name="keywords">BindTexture ImageSampler_SimpleTextureRead::BindTexture ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_SimpleTextureRead::UnbindTexture</field>
    <field name="args">(cudaImageListf &amp;images)</field>
    <field name="url">class_image_sampler___simple_texture_read.html#afefcfc9e9b1a443c981adb8e11da5763</field>
    <field name="keywords">UnbindTexture ImageSampler_SimpleTextureRead::UnbindTexture ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_SimpleTextureRead::Interpolated</field>
    <field name="args">(cudaImageListf &amp;images, float x, float y, int img, bool &amp;outside)</field>
    <field name="url">class_image_sampler___simple_texture_read.html#a22c0cdc0a5fbd21008e21358bcc09c48</field>
    <field name="keywords">Interpolated ImageSampler_SimpleTextureRead::Interpolated ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_SimpleTextureRead::Index</field>
    <field name="args">(cudaImageListf &amp;images, int x, int y, int img)</field>
    <field name="url">class_image_sampler___simple_texture_read.html#a50a31c29c6e18f167b4e303e8d6a9b75</field>
    <field name="keywords">Index ImageSampler_SimpleTextureRead::Index ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ImageSampler_SimpleTextureRead::ofs</field>
    <field name="args">(float x)</field>
    <field name="url">class_image_sampler___simple_texture_read.html#a74800394113e461fcfc92257b5b3df8d</field>
    <field name="keywords">ofs ImageSampler_SimpleTextureRead::ofs ImageSampler_SimpleTextureRead</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">kissfft</field>
    <field name="url">classkissfft.html</field>
    <field name="keywords">kissfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">kissfft::traits_type</field>
    <field name="url">classkissfft.html#aa5a17184447b2a77c41e61f2d491bad5</field>
    <field name="keywords">traits_type kissfft::traits_type kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">kissfft::scalar_type</field>
    <field name="url">classkissfft.html#a074a5f74883901c625b6e80660d16ad4</field>
    <field name="keywords">scalar_type kissfft::scalar_type kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">kissfft::cpx_type</field>
    <field name="url">classkissfft.html#af66664488b0b1b2995f3e4c2f63a8b7d</field>
    <field name="keywords">cpx_type kissfft::cpx_type kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kissfft</field>
    <field name="args">(int nfft, bool inverse, const traits_type &amp;traits=traits_type())</field>
    <field name="url">classkissfft.html#a9140ed2cbfe6116eba53256e16084475</field>
    <field name="keywords">kissfft kissfft::kissfft kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::transform</field>
    <field name="args">(const cpx_type *src, cpx_type *dst)</field>
    <field name="url">classkissfft.html#ad2db80b9c9b087fb36fbe8b3b0078df8</field>
    <field name="keywords">transform kissfft::transform kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::nfft</field>
    <field name="args">()</field>
    <field name="url">classkissfft.html#a387da366ef44c52769e5052e327009dc</field>
    <field name="keywords">nfft kissfft::nfft kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_work</field>
    <field name="args">(int stage, cpx_type *Fout, const cpx_type *f, size_t fstride, size_t in_stride)</field>
    <field name="url">classkissfft.html#a33dc368507355e068428fb51bb42ba56</field>
    <field name="keywords">kf_work kissfft::kf_work kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_ADD</field>
    <field name="args">(cpx_type &amp;c, const cpx_type &amp;a, const cpx_type &amp;b)</field>
    <field name="url">classkissfft.html#a4f053d9dbac7e4c7c8594b01eca50511</field>
    <field name="keywords">C_ADD kissfft::C_ADD kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_MUL</field>
    <field name="args">(cpx_type &amp;c, const cpx_type &amp;a, const cpx_type &amp;b)</field>
    <field name="url">classkissfft.html#afa4efc3959abe6bb1e4c10f4442fed07</field>
    <field name="keywords">C_MUL kissfft::C_MUL kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_SUB</field>
    <field name="args">(cpx_type &amp;c, const cpx_type &amp;a, const cpx_type &amp;b)</field>
    <field name="url">classkissfft.html#a1f4a4ec1b1ac1f2b199710b921b53a6d</field>
    <field name="keywords">C_SUB kissfft::C_SUB kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_ADDTO</field>
    <field name="args">(cpx_type &amp;c, const cpx_type &amp;a)</field>
    <field name="url">classkissfft.html#a1cb327491bc3dce979631f5c2ebd142a</field>
    <field name="keywords">C_ADDTO kissfft::C_ADDTO kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_FIXDIV</field>
    <field name="args">(cpx_type &amp;, int)</field>
    <field name="url">classkissfft.html#aef8eb1d4326ae5c6a94ad71af0af87c5</field>
    <field name="keywords">C_FIXDIV kissfft::C_FIXDIV kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::S_MUL</field>
    <field name="args">(const scalar_type &amp;a, const scalar_type &amp;b)</field>
    <field name="url">classkissfft.html#a118797ba0c80bcd14ed5792deeb22c58</field>
    <field name="keywords">S_MUL kissfft::S_MUL kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::HALF_OF</field>
    <field name="args">(const scalar_type &amp;a)</field>
    <field name="url">classkissfft.html#aca22ce3dafcd91ffca189121367fd026</field>
    <field name="keywords">HALF_OF kissfft::HALF_OF kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::C_MULBYSCALAR</field>
    <field name="args">(cpx_type &amp;c, const scalar_type &amp;a)</field>
    <field name="url">classkissfft.html#a25bc023cec82dce6d314dea8c124349a</field>
    <field name="keywords">C_MULBYSCALAR kissfft::C_MULBYSCALAR kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_bfly2</field>
    <field name="args">(cpx_type *Fout, const size_t fstride, int m)</field>
    <field name="url">classkissfft.html#a88750fa038b343d9e94bdcefc66cf604</field>
    <field name="keywords">kf_bfly2 kissfft::kf_bfly2 kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_bfly4</field>
    <field name="args">(cpx_type *Fout, const size_t fstride, const size_t m)</field>
    <field name="url">classkissfft.html#a64876ee331b8349c63873207a87880db</field>
    <field name="keywords">kf_bfly4 kissfft::kf_bfly4 kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_bfly3</field>
    <field name="args">(cpx_type *Fout, const size_t fstride, const size_t m)</field>
    <field name="url">classkissfft.html#a5eafd09bfe32414e9efca3f74ca99266</field>
    <field name="keywords">kf_bfly3 kissfft::kf_bfly3 kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_bfly5</field>
    <field name="args">(cpx_type *Fout, const size_t fstride, const size_t m)</field>
    <field name="url">classkissfft.html#af6b0264b4e13de975edaa006b2ab98b6</field>
    <field name="keywords">kf_bfly5 kissfft::kf_bfly5 kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft::kf_bfly_generic</field>
    <field name="args">(cpx_type *Fout, const size_t fstride, int m, int p)</field>
    <field name="url">classkissfft.html#abf9a27bb71715184e6886ee38c371650</field>
    <field name="keywords">kf_bfly_generic kissfft::kf_bfly_generic kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">kissfft::_nfft</field>
    <field name="url">classkissfft.html#abbfab972dff7a11d401150233e54041d</field>
    <field name="keywords">_nfft kissfft::_nfft kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">kissfft::_inverse</field>
    <field name="url">classkissfft.html#af0fce7031f3363ac6305d9c1f5da0008</field>
    <field name="keywords">_inverse kissfft::_inverse kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">kissfft::_twiddles</field>
    <field name="url">classkissfft.html#abd5d6e3a0d08f56c711590d890fdd740</field>
    <field name="keywords">_twiddles kissfft::_twiddles kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">kissfft::_stageRadix</field>
    <field name="url">classkissfft.html#a89d4645ae457422179835a92f2e4bf7c</field>
    <field name="keywords">_stageRadix kissfft::_stageRadix kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">kissfft::_stageRemainder</field>
    <field name="url">classkissfft.html#a112fd0185ddaaf837cab9e7abb839d13</field>
    <field name="keywords">_stageRemainder kissfft::_stageRemainder kissfft&lt; T_Scalar, T_traits &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LocalizationJob</field>
    <field name="url">struct_localization_job.html</field>
    <field name="keywords">LocalizationJob</field>
    <field name="text">Structure for region of interest metadata Compiled without padding to line up with LabVIEW alignment Size is 24 bytes Changing this requires changing of the linked LabVIEW cluster QTrkLocalizationJob.ctl Frame and timestamp are ignored by tracking code itself but usable for the calling code</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LocalizationJob::LocalizationJob</field>
    <field name="args">()</field>
    <field name="url">struct_localization_job.html#a6d5cf048c3b2c413e58606d7d4ad0d29</field>
    <field name="keywords">LocalizationJob LocalizationJob::LocalizationJob LocalizationJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LocalizationJob::LocalizationJob</field>
    <field name="args">(uint frame, uint timestamp, uint zlutPlane, uint zlutIndex)</field>
    <field name="url">struct_localization_job.html#adf9c896abcf6033625d92943f0ce260f</field>
    <field name="keywords">LocalizationJob LocalizationJob::LocalizationJob LocalizationJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationJob::frame</field>
    <field name="url">struct_localization_job.html#a54df1ba33ab48b20dca664142a8cf619</field>
    <field name="keywords">frame LocalizationJob::frame LocalizationJob</field>
    <field name="text">Frame number this ROI belongs to</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationJob::timestamp</field>
    <field name="url">struct_localization_job.html#a82f4cdb35dd3b6765df52dd045007286</field>
    <field name="keywords">timestamp LocalizationJob::timestamp LocalizationJob</field>
    <field name="text">Time stamp of the frame</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationJob::zlutIndex</field>
    <field name="url">struct_localization_job.html#afcf9f91b72597af0e2572f3ae74d9a99</field>
    <field name="keywords">zlutIndex LocalizationJob::zlutIndex LocalizationJob</field>
    <field name="text">Bead number of this ROI Used to get the right ZLUT from memory</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationJob::initialPos</field>
    <field name="url">struct_localization_job.html#a6374e6cba33c93846a757328b13aa509</field>
    <field name="keywords">initialPos LocalizationJob::initialPos LocalizationJob</field>
    <field name="text">Optional Not used</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LocalizationParams</field>
    <field name="url">struct_localization_params.html</field>
    <field name="keywords">LocalizationParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationParams::zlutIndex</field>
    <field name="url">struct_localization_params.html#ad7aa3c082a4f5295be937820fb8c58d2</field>
    <field name="keywords">zlutIndex LocalizationParams::zlutIndex LocalizationParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationParams::zlutPlane</field>
    <field name="url">struct_localization_params.html#aff5333ada3b2d21903ccef6f47cd9490</field>
    <field name="keywords">zlutPlane LocalizationParams::zlutPlane LocalizationParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LocalizationResult</field>
    <field name="url">struct_localization_result.html</field>
    <field name="keywords">LocalizationResult</field>
    <field name="text">Structure for job results Compiled without padding to line up with LabVIEW alignment Size is 52 bytes Changing this requires changing of the linked LabVIEW cluster QTrkLocalizationResult.ctl</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LocalizationResult::pos2D</field>
    <field name="args">()</field>
    <field name="url">struct_localization_result.html#a40b7da4cbde78ccc9a013b1bcc608e60</field>
    <field name="keywords">pos2D LocalizationResult::pos2D LocalizationResult</field>
    <field name="text">Final 2D position found</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationResult::job</field>
    <field name="url">struct_localization_result.html#a9a6b25c5cc92fe13bae3d0a5d37360f3</field>
    <field name="keywords">job LocalizationResult::job LocalizationResult</field>
    <field name="text">Job metadata See LocalizationJob</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationResult::pos</field>
    <field name="url">struct_localization_result.html#a546f66485662c35bc75121513b6d1a60</field>
    <field name="keywords">pos LocalizationResult::pos LocalizationResult</field>
    <field name="text">Final 3D position found If no z localization was performed the value of z will be 0</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationResult::firstGuess</field>
    <field name="url">struct_localization_result.html#a44c7351e9eb9410375c10fcf4e0f0cf9</field>
    <field name="keywords">firstGuess LocalizationResult::firstGuess LocalizationResult</field>
    <field name="text">x y position found by the COM localization Used as initial position for the subsequent algorithms</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationResult::error</field>
    <field name="url">struct_localization_result.html#a90d35a4643bd537d8f763ee8c7749820</field>
    <field name="keywords">error LocalizationResult::error LocalizationResult</field>
    <field name="text">Flag boolean indicating whether the ROI boundary was hit during localization A 1 indicates a hit</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LocalizationResult::imageMean</field>
    <field name="url">struct_localization_result.html#aba2a42711bc890c8620419f7dc906db9</field>
    <field name="keywords">imageMean LocalizationResult::imageMean LocalizationResult</field>
    <field name="text">Average pixel value of the ROI</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">LsqSqQuadFit</field>
    <field name="url">class_lsq_sq_quad_fit.html</field>
    <field name="keywords">LsqSqQuadFit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::LsqSqQuadFit</field>
    <field name="args">(uint numPts, const T *xval, const T *yval, const T *weights=0)</field>
    <field name="url">class_lsq_sq_quad_fit.html#a8496ae956f841919b4dcb994c246ff81</field>
    <field name="keywords">LsqSqQuadFit LsqSqQuadFit::LsqSqQuadFit LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::LsqSqQuadFit</field>
    <field name="args">()</field>
    <field name="url">class_lsq_sq_quad_fit.html#a8c4db85a7d3ad82338f7a25a3855b98d</field>
    <field name="keywords">LsqSqQuadFit LsqSqQuadFit::LsqSqQuadFit LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::calculate</field>
    <field name="args">(uint numPts, const T *X, const T *Y, const T *weights)</field>
    <field name="url">class_lsq_sq_quad_fit.html#a4231c52feb9e5e9ea9342c3213a1d622</field>
    <field name="keywords">calculate LsqSqQuadFit::calculate LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::compute</field>
    <field name="args">(T pos)</field>
    <field name="url">class_lsq_sq_quad_fit.html#a6aa52c07c1b7a5057f2a2cd878035d7d</field>
    <field name="keywords">compute LsqSqQuadFit::compute LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::computeDeriv</field>
    <field name="args">(T pos)</field>
    <field name="url">class_lsq_sq_quad_fit.html#a3fe697bd9b07aa2a0b3f827a115864b5</field>
    <field name="keywords">computeDeriv LsqSqQuadFit::computeDeriv LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::maxPos</field>
    <field name="args">()</field>
    <field name="url">class_lsq_sq_quad_fit.html#a91c3733e1e6485615966eb64e61305ae</field>
    <field name="keywords">maxPos LsqSqQuadFit::maxPos LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::vertexForm</field>
    <field name="args">()</field>
    <field name="url">class_lsq_sq_quad_fit.html#a1d893652bce7f1438a4ad48e937f5405</field>
    <field name="keywords">vertexForm LsqSqQuadFit::vertexForm LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::a</field>
    <field name="url">class_lsq_sq_quad_fit.html#aed5761aec0a7a0f48c00668e07018f5f</field>
    <field name="keywords">a LsqSqQuadFit::a LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::b</field>
    <field name="url">class_lsq_sq_quad_fit.html#a2152e5451babc95de72e22235c506207</field>
    <field name="keywords">b LsqSqQuadFit::b LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::c</field>
    <field name="url">class_lsq_sq_quad_fit.html#a9339f928660fda5f1d67bbe93da0df5e</field>
    <field name="keywords">c LsqSqQuadFit::c LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::d</field>
    <field name="url">class_lsq_sq_quad_fit.html#a2fbec8bc8653a177da1f7d5db77a9c0a</field>
    <field name="keywords">d LsqSqQuadFit::d LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::h</field>
    <field name="url">class_lsq_sq_quad_fit.html#a6e53e031b4b75e7c5dba305b47eb3c42</field>
    <field name="keywords">h LsqSqQuadFit::h LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::k</field>
    <field name="url">class_lsq_sq_quad_fit.html#a73e23f026e8415f042ba540d2fbe2ab2</field>
    <field name="keywords">k LsqSqQuadFit::k LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::xoffset</field>
    <field name="url">class_lsq_sq_quad_fit.html#aaa34bae332c501e7d18cca96fb51f403</field>
    <field name="keywords">xoffset LsqSqQuadFit::xoffset LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::computeSums</field>
    <field name="args">(const T *X, const T *Y, const T *weights, uint numPts)</field>
    <field name="url">class_lsq_sq_quad_fit.html#aecc2223175fefa90ae424e9c6e5c36ec</field>
    <field name="keywords">computeSums LsqSqQuadFit::computeSums LsqSqQuadFit&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LsqSqQuadFit::Coeff</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html</field>
    <field name="keywords">Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LsqSqQuadFit::Coeff::abc</field>
    <field name="args">(T &amp;a, T &amp;b, T &amp;c, T &amp;d)</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a6b9f1b14627e0e6aa4e611ff9fba10dc</field>
    <field name="keywords">abc LsqSqQuadFit::Coeff::abc LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s40</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#ae352321176113dcbe22edfb94cb0974a</field>
    <field name="keywords">s40 LsqSqQuadFit::Coeff::s40 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s30</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#ac756c374b5be8c857aab50c63b025307</field>
    <field name="keywords">s30 LsqSqQuadFit::Coeff::s30 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s20</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a837251d5f164597eb5ff2759df1d8882</field>
    <field name="keywords">s20 LsqSqQuadFit::Coeff::s20 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s10</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a450e15b091158e154e6f7f935fbad006</field>
    <field name="keywords">s10 LsqSqQuadFit::Coeff::s10 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s21</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a91d41e9b15e90da177f5c5f245508723</field>
    <field name="keywords">s21 LsqSqQuadFit::Coeff::s21 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s11</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a50a6f1c130d5358398fb7cd01097fe03</field>
    <field name="keywords">s11 LsqSqQuadFit::Coeff::s11 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s01</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#af9640f1f631cb95b9f5c689f2c92ed82</field>
    <field name="keywords">s01 LsqSqQuadFit::Coeff::s01 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LsqSqQuadFit::Coeff::s00</field>
    <field name="url">struct_lsq_sq_quad_fit_1_1_coeff.html#a7197a54e45e95e5e09092555f147cbbe</field>
    <field name="keywords">s00 LsqSqQuadFit::Coeff::s00 LsqSqQuadFit&lt; T &gt;::Coeff</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVArray</field>
    <field name="url">struct_l_v_array.html</field>
    <field name="keywords">LVArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray::dimSize</field>
    <field name="url">struct_l_v_array.html#ab8675a32536e5d3f7ffc612977f88c33</field>
    <field name="keywords">dimSize LVArray::dimSize LVArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray::elem</field>
    <field name="args">[1]</field>
    <field name="url">struct_l_v_array.html#ae16a95ba6a951d662346b3cce826e40d</field>
    <field name="keywords">elem LVArray::elem LVArray&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVArray2D</field>
    <field name="url">struct_l_v_array2_d.html</field>
    <field name="keywords">LVArray2D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVArray2D::xy</field>
    <field name="args">(int col, int row)</field>
    <field name="url">struct_l_v_array2_d.html#a68745c123554ef7e99a357744ff0f876</field>
    <field name="keywords">xy LVArray2D::xy LVArray2D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVArray2D::get</field>
    <field name="args">(int row, int col)</field>
    <field name="url">struct_l_v_array2_d.html#aa02c6c90d405b359f1670b8b766be436</field>
    <field name="keywords">get LVArray2D::get LVArray2D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVArray2D::numElem</field>
    <field name="args">()</field>
    <field name="url">struct_l_v_array2_d.html#aa2c7e8ee477197eedc04a29788f05707</field>
    <field name="keywords">numElem LVArray2D::numElem LVArray2D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray2D::dimSizes</field>
    <field name="args">[2]</field>
    <field name="url">struct_l_v_array2_d.html#ae697948bfe264453c305d4838a158cbb</field>
    <field name="keywords">dimSizes LVArray2D::dimSizes LVArray2D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray2D::elem</field>
    <field name="args">[1]</field>
    <field name="url">struct_l_v_array2_d.html#ac8ad3b86f939ed4fc2c5529b727c419f</field>
    <field name="keywords">elem LVArray2D::elem LVArray2D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVArray3D</field>
    <field name="url">struct_l_v_array3_d.html</field>
    <field name="keywords">LVArray3D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVArray3D::numElem</field>
    <field name="args">()</field>
    <field name="url">struct_l_v_array3_d.html#a5ac741d85ae108263873fdf62f57aa06</field>
    <field name="keywords">numElem LVArray3D::numElem LVArray3D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray3D::dimSizes</field>
    <field name="args">[3]</field>
    <field name="url">struct_l_v_array3_d.html#a093817a34523cd25b5eb0294657674fd</field>
    <field name="keywords">dimSizes LVArray3D::dimSizes LVArray3D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArray3D::elem</field>
    <field name="args">[1]</field>
    <field name="url">struct_l_v_array3_d.html#ab60caf69798b33f0485205b62bd38c65</field>
    <field name="keywords">elem LVArray3D::elem LVArray3D&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVArrayND</field>
    <field name="url">struct_l_v_array_n_d.html</field>
    <field name="keywords">LVArrayND</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">LVArrayND::numElem</field>
    <field name="args">()</field>
    <field name="url">struct_l_v_array_n_d.html#a60b85212c2d61e358e3aad4abfe7ecff</field>
    <field name="keywords">numElem LVArrayND::numElem LVArrayND&lt; T, N &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArrayND::dimSizes</field>
    <field name="args">[N]</field>
    <field name="url">struct_l_v_array_n_d.html#a02efbdecea8a08cdb05b8e6e6c0859db</field>
    <field name="keywords">dimSizes LVArrayND::dimSizes LVArrayND&lt; T, N &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">LVArrayND::elem</field>
    <field name="args">[1]</field>
    <field name="url">struct_l_v_array_n_d.html#ae7304410dde557a741391927fbbfeed1</field>
    <field name="keywords">elem LVArrayND::elem LVArrayND&lt; T, N &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType</field>
    <field name="url">struct_l_v_data_type.html</field>
    <field name="keywords">LVDataType</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; double &gt;</field>
    <field name="url">struct_l_v_data_type_3_01double_01_4.html</field>
    <field name="keywords">LVDataType&lt; double &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; double &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01double_01_4.html#ad73d1660fdf534b0e53b9ce82b64f7b2a973e600a0bbf9147a0b80eae974fe57e</field>
    <field name="keywords">code LVDataType&lt; double &gt;::code LVDataType&lt; double &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; float &gt;</field>
    <field name="url">struct_l_v_data_type_3_01float_01_4.html</field>
    <field name="keywords">LVDataType&lt; float &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; float &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01float_01_4.html#a7da8e4be6a1242e72e4669e71977d2c8a0e14db1c1c23a7dd33d535c8637cbb51</field>
    <field name="keywords">code LVDataType&lt; float &gt;::code LVDataType&lt; float &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; int16_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01int16__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; int16_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; int16_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01int16__t_01_4.html#a3dfd768ff636d8d5396f7214f0e8f793a87f67ebbee61d1e22deef1db89f5fd47</field>
    <field name="keywords">code LVDataType&lt; int16_t &gt;::code LVDataType&lt; int16_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; int32_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01int32__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; int32_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; int32_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01int32__t_01_4.html#a66d38f222a7b0c225ec4d5a52d8c726eaf02dc44176417c2fb501b3c15d277075</field>
    <field name="keywords">code LVDataType&lt; int32_t &gt;::code LVDataType&lt; int32_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; int64_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01int64__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; int64_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; int64_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01int64__t_01_4.html#a41123e1a1c64d241f96a422c09b66ac8a786bd307f592f9659d5cce778dc01b90</field>
    <field name="keywords">code LVDataType&lt; int64_t &gt;::code LVDataType&lt; int64_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; int8_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01int8__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; int8_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; int8_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01int8__t_01_4.html#ae669d33c5cebb6f9225582e393da094dae57b9d4be15f8bb048f92b4d00d7e1f9</field>
    <field name="keywords">code LVDataType&lt; int8_t &gt;::code LVDataType&lt; int8_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; std::complex&lt; double &gt; &gt;</field>
    <field name="url">struct_l_v_data_type_3_01std_1_1complex_3_01double_01_4_01_4.html</field>
    <field name="keywords">LVDataType&lt; std::complex&lt; double &gt; &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; std::complex&lt; double &gt; &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01std_1_1complex_3_01double_01_4_01_4.html#a37d2b262a42ce4f252af70c7f95dc10aa3496678bd5469fe179bef82b9ffef476</field>
    <field name="keywords">code LVDataType&lt; std::complex&lt; double &gt; &gt;::code LVDataType&lt; std::complex&lt; double &gt; &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; std::complex&lt; float &gt; &gt;</field>
    <field name="url">struct_l_v_data_type_3_01std_1_1complex_3_01float_01_4_01_4.html</field>
    <field name="keywords">LVDataType&lt; std::complex&lt; float &gt; &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; std::complex&lt; float &gt; &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01std_1_1complex_3_01float_01_4_01_4.html#a983dcb40a3811e9332e53a232710a186ad41fe13f2836af351e6b0113f1d90f35</field>
    <field name="keywords">code LVDataType&lt; std::complex&lt; float &gt; &gt;::code LVDataType&lt; std::complex&lt; float &gt; &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; uint16_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01uint16__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; uint16_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; uint16_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01uint16__t_01_4.html#aba91a2472272e8ecdd5169f9461749f7ab915236c55a49d181e5530ec94aad320</field>
    <field name="keywords">code LVDataType&lt; uint16_t &gt;::code LVDataType&lt; uint16_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; uint32_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01uint32__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; uint32_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; uint32_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01uint32__t_01_4.html#ad101aefa4684203673886191c3dbf0f4a66459fcc338ee2ea39d3a2b70ba88b3d</field>
    <field name="keywords">code LVDataType&lt; uint32_t &gt;::code LVDataType&lt; uint32_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; uint64_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01uint64__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; uint64_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; uint64_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01uint64__t_01_4.html#a1353d7cf9819c2f8565da7f750ce565ba06809d202e7f9f69e99a07ecf4afae75</field>
    <field name="keywords">code LVDataType&lt; uint64_t &gt;::code LVDataType&lt; uint64_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">LVDataType&lt; uint8_t &gt;</field>
    <field name="url">struct_l_v_data_type_3_01uint8__t_01_4.html</field>
    <field name="keywords">LVDataType&lt; uint8_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">LVDataType&lt; uint8_t &gt;::code</field>
    <field name="url">struct_l_v_data_type_3_01uint8__t_01_4.html#a7db9c38d2b9623e7fed66c60e775afcea0413e74d311e8612a4279f109fa61fe0</field>
    <field name="keywords">code LVDataType&lt; uint8_t &gt;::code LVDataType&lt; uint8_t &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Matrix3X3</field>
    <field name="url">class_matrix3_x3.html</field>
    <field name="keywords">Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::Matrix3X3</field>
    <field name="args">()</field>
    <field name="url">class_matrix3_x3.html#aefc0ab5df027c540ff7aa18ca7f2e2ec</field>
    <field name="keywords">Matrix3X3 Matrix3X3::Matrix3X3 Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::Matrix3X3</field>
    <field name="args">(vector3f x, vector3f y, vector3f z)</field>
    <field name="url">class_matrix3_x3.html#a804adaed742d23be9e1ba18c474b395b</field>
    <field name="keywords">Matrix3X3 Matrix3X3::Matrix3X3 Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::diag</field>
    <field name="args">() const </field>
    <field name="url">class_matrix3_x3.html#a9ae9d007341bbf8b82f0043d3e791ba7</field>
    <field name="keywords">diag Matrix3X3::diag Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator[]</field>
    <field name="args">(int i)</field>
    <field name="url">class_matrix3_x3.html#a86ce8bda4855d220934401f37064cdfc</field>
    <field name="keywords">operator[] Matrix3X3::operator[] Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator[]</field>
    <field name="args">(int i) const </field>
    <field name="url">class_matrix3_x3.html#acc1d51e5595ee722c8e3d110323a4ef1</field>
    <field name="keywords">operator[] Matrix3X3::operator[] Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::row</field>
    <field name="args">(int i)</field>
    <field name="url">class_matrix3_x3.html#a7ea824cc29ab1b8a79745f88782b46bb</field>
    <field name="keywords">row Matrix3X3::row Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::row</field>
    <field name="args">(int i) const </field>
    <field name="url">class_matrix3_x3.html#a5e4c85454a8bbf3422c5d3d9152b7bc1</field>
    <field name="keywords">row Matrix3X3::row Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator()</field>
    <field name="args">(int i, int j)</field>
    <field name="url">class_matrix3_x3.html#a6b7ee08dcc6939ed0e6870a45496de55</field>
    <field name="keywords">operator() Matrix3X3::operator() Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator()</field>
    <field name="args">(int i, int j) const </field>
    <field name="url">class_matrix3_x3.html#a9d15beebf98a21f596dd9d2aaddac465</field>
    <field name="keywords">operator() Matrix3X3::operator() Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::at</field>
    <field name="args">(int i, int j)</field>
    <field name="url">class_matrix3_x3.html#af543ad33dde1e3d8e1e9923e0514115f</field>
    <field name="keywords">at Matrix3X3::at Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::at</field>
    <field name="args">(int i, int j) const </field>
    <field name="url">class_matrix3_x3.html#a3df18d5523cb981b4cd92f44b47ecd10</field>
    <field name="keywords">at Matrix3X3::at Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::Determinant</field>
    <field name="args">() const </field>
    <field name="url">class_matrix3_x3.html#a84f01c6d99bde6d7a3b95a3439018c38</field>
    <field name="keywords">Determinant Matrix3X3::Determinant Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::Inverse</field>
    <field name="args">() const </field>
    <field name="url">class_matrix3_x3.html#a67bea30b9734e1ecae9c9c0581150dc5</field>
    <field name="keywords">Inverse Matrix3X3::Inverse Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::InverseTranspose</field>
    <field name="args">() const </field>
    <field name="url">class_matrix3_x3.html#ac60f8237c026adf5014404394fcec708</field>
    <field name="keywords">InverseTranspose Matrix3X3::InverseTranspose Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator*=</field>
    <field name="args">(float a)</field>
    <field name="url">class_matrix3_x3.html#ab4b80f1dc192ccb1d249849a54eac311</field>
    <field name="keywords">operator*= Matrix3X3::operator*= Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::operator+=</field>
    <field name="args">(const Matrix3X3 &amp;b)</field>
    <field name="url">class_matrix3_x3.html#ad9533ec2a79f7a5aaa26068d757c830e</field>
    <field name="keywords">operator+= Matrix3X3::operator+= Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::dbgprint</field>
    <field name="args">()</field>
    <field name="url">class_matrix3_x3.html#a2330dbda267e46a1abef86976d36d610</field>
    <field name="keywords">dbgprint Matrix3X3::dbgprint Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Matrix3X3::test</field>
    <field name="args">()</field>
    <field name="url">class_matrix3_x3.html#a4c8e4f1349d9119f66e5dd4bd9a1203e</field>
    <field name="keywords">test Matrix3X3::test Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Matrix3X3::m</field>
    <field name="args">[9]</field>
    <field name="url">class_matrix3_x3.html#a7c54fb7a859ee84f13efb2eccd28e5f5</field>
    <field name="keywords">m Matrix3X3::m Matrix3X3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">MeasureTime</field>
    <field name="url">struct_measure_time.html</field>
    <field name="keywords">MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MeasureTime::MeasureTime</field>
    <field name="args">(const char *name)</field>
    <field name="url">struct_measure_time.html#a8c29cb2653887746c723a2c2f8dd3038</field>
    <field name="keywords">MeasureTime MeasureTime::MeasureTime MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MeasureTime::~MeasureTime</field>
    <field name="args">()</field>
    <field name="url">struct_measure_time.html#a4f2e26585af9efa7229d417d31848e22</field>
    <field name="keywords">MeasureTime::~MeasureTime MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MeasureTime::freq</field>
    <field name="url">struct_measure_time.html#ae409ffeb052828a615c5bc523b331903</field>
    <field name="keywords">freq MeasureTime::freq MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MeasureTime::time</field>
    <field name="url">struct_measure_time.html#a43445cf3256b5569bf80085bb078c7be</field>
    <field name="keywords">time MeasureTime::time MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MeasureTime::name</field>
    <field name="url">struct_measure_time.html#abeec392149eb49701448e4ebaf790eb3</field>
    <field name="keywords">name MeasureTime::name MeasureTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">my_error_mgr</field>
    <field name="url">structmy__error__mgr.html</field>
    <field name="keywords">my_error_mgr</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">my_error_mgr::pub</field>
    <field name="url">structmy__error__mgr.html#aac1fb61cc51b4d8edbb44ba85fcccdb4</field>
    <field name="keywords">pub my_error_mgr::pub my_error_mgr</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">outputter</field>
    <field name="url">classoutputter.html</field>
    <field name="keywords">outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::outputter</field>
    <field name="args">(int mode=1)</field>
    <field name="url">classoutputter.html#aebd9b43ac1fef288502f62006751cc8c</field>
    <field name="keywords">outputter outputter::outputter outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::~outputter</field>
    <field name="args">()</field>
    <field name="url">classoutputter.html#ab2c5a4d9f0a5b5f3090836a4ab1243c3</field>
    <field name="keywords">outputter::~outputter outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::outputString</field>
    <field name="args">(std::string out, bool ConsoleOnly=false)</field>
    <field name="url">classoutputter.html#ab83efb14176854f486bea2b514f39918</field>
    <field name="keywords">outputString outputter::outputString outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::outputImage</field>
    <field name="args">(ImageData img, std::string filename=&quot;UsedImage&quot;)</field>
    <field name="url">classoutputter.html#a8a9f6716fd8a503c8ded2412dfe36c7c</field>
    <field name="keywords">outputImage outputter::outputImage outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::outputArray</field>
    <field name="args">(T *arr, int size)</field>
    <field name="url">classoutputter.html#a47f0148cededb6d3feb2c8ed218f4fb7</field>
    <field name="keywords">outputArray outputter::outputArray outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::newFile</field>
    <field name="args">(std::string filename, const char *mode=&quot;a&quot;)</field>
    <field name="url">classoutputter.html#afab1703273f2af21817699fa68381d5a</field>
    <field name="keywords">newFile outputter::newFile outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::folder</field>
    <field name="url">classoutputter.html#a9b6253616c21272f51875f7be5f72861</field>
    <field name="keywords">folder outputter::folder outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">outputter::init</field>
    <field name="args">(int mode)</field>
    <field name="url">classoutputter.html#adc33d05d4ac18787a65bf3c503cc4fbc</field>
    <field name="keywords">init outputter::init outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::modes</field>
    <field name="url">classoutputter.html#af7a6f40d233bfb34919dbfb5a474f988</field>
    <field name="keywords">modes outputter::modes outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::outputFile</field>
    <field name="url">classoutputter.html#ae3c0ba999382f01860bdcc735d5e94b1</field>
    <field name="keywords">outputFile outputter::outputFile outputter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">outputter::outputModes</field>
    <field name="url">structoutputter_1_1output_modes.html</field>
    <field name="keywords">outputModes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::outputModes::File</field>
    <field name="url">structoutputter_1_1output_modes.html#ad15be616f241db4682a34fe26f893958</field>
    <field name="keywords">File outputter::outputModes::File outputter::outputModes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::outputModes::Console</field>
    <field name="url">structoutputter_1_1output_modes.html#ab0854df188fd778df459dbc17b9fe688</field>
    <field name="keywords">Console outputter::outputModes::Console outputter::outputModes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">outputter::outputModes::Images</field>
    <field name="url">structoutputter_1_1output_modes.html#a94bd7bdd78652c810d530372b124665d</field>
    <field name="keywords">Images outputter::outputModes::Images outputter::outputModes</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">PathSeperator</field>
    <field name="url">struct_path_seperator.html</field>
    <field name="keywords">PathSeperator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PathSeperator::PathSeperator</field>
    <field name="args">(std::string fullpath)</field>
    <field name="url">struct_path_seperator.html#ae1fb743b506a73b6f3984aa2ddc7f3df</field>
    <field name="keywords">PathSeperator PathSeperator::PathSeperator PathSeperator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">PathSeperator::filename</field>
    <field name="url">struct_path_seperator.html#a969fd95b83c553bf3e355c657ed742af</field>
    <field name="keywords">filename PathSeperator::filename PathSeperator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">PathSeperator::extension</field>
    <field name="url">struct_path_seperator.html#a986f1ce49f0ad6233a525562fbbc25a6</field>
    <field name="keywords">extension PathSeperator::extension PathSeperator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">PathSeperator::directory</field>
    <field name="url">struct_path_seperator.html#a91bdacb37b263197f8a8f05e73481fc4</field>
    <field name="keywords">directory PathSeperator::directory PathSeperator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">pinned_array</field>
    <field name="url">classpinned__array.html</field>
    <field name="keywords">pinned_array</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::pinned_array</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#a00c76b52b2cd9ee62a581db5c6bff216</field>
    <field name="keywords">pinned_array pinned_array::pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::~pinned_array</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#afb2330e858f4b9a1288be6e6ddbedfbd</field>
    <field name="keywords">pinned_array::~pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::pinned_array</field>
    <field name="args">(size_t n)</field>
    <field name="url">classpinned__array.html#aec9bbda6eb87c91b5b139f5732b3d56c</field>
    <field name="keywords">pinned_array pinned_array::pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::pinned_array</field>
    <field name="args">(const pinned_array&lt; TOther, f &gt; &amp;src)</field>
    <field name="url">classpinned__array.html#af38f986c689bfcb469a51a9a207b7e6d</field>
    <field name="keywords">pinned_array pinned_array::pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::operator=</field>
    <field name="args">(const pinned_array&lt; TOther, F &gt; &amp;src)</field>
    <field name="url">classpinned__array.html#ae597a3ac693ae9b714c9ed6b03f94993</field>
    <field name="keywords">operator= pinned_array::operator= pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::pinned_array</field>
    <field name="args">(Iterator first, Iterator end)</field>
    <field name="url">classpinned__array.html#a11eaec4e43a52f844b08646bcd5c166e</field>
    <field name="keywords">pinned_array pinned_array::pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::pinned_array</field>
    <field name="args">(const device_vec&lt; T &gt; &amp;src)</field>
    <field name="url">classpinned__array.html#a22bae9fe08fa2e926281adcf920882e3</field>
    <field name="keywords">pinned_array pinned_array::pinned_array pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::size</field>
    <field name="args">() const </field>
    <field name="url">classpinned__array.html#aa57ce93b5413ac43025d474fcff85855</field>
    <field name="keywords">size pinned_array::size pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::begin</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#aba04baaa6a150019df690ddbec8258f5</field>
    <field name="keywords">begin pinned_array::begin pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::end</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#ae390c83407b010c28eb33fa19448c9a1</field>
    <field name="keywords">end pinned_array::end pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::begin</field>
    <field name="args">() const </field>
    <field name="url">classpinned__array.html#a5993a75c9b22d7e63907670453259e09</field>
    <field name="keywords">begin pinned_array::begin pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::end</field>
    <field name="args">() const </field>
    <field name="url">classpinned__array.html#a90d68f7c6eed3c0df6ebabaeebdec920</field>
    <field name="keywords">end pinned_array::end pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::data</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#a8e3706727fddb407394fdc19327c8e66</field>
    <field name="keywords">data pinned_array::data pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::free</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#a1d5ca6818be502c6fcacf935cd52f034</field>
    <field name="keywords">free pinned_array::free pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::init</field>
    <field name="args">(int n)</field>
    <field name="url">classpinned__array.html#afcb2e45a55852c293d11c67de5064007</field>
    <field name="keywords">init pinned_array::init pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::operator[]</field>
    <field name="args">(int i)</field>
    <field name="url">classpinned__array.html#a1a8ee28648e8d9ddb999f87cc823f545</field>
    <field name="keywords">operator[] pinned_array::operator[] pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::operator[]</field>
    <field name="args">(int i) const </field>
    <field name="url">classpinned__array.html#ad61274856acc86af81562be4ddae3fe1</field>
    <field name="keywords">operator[] pinned_array::operator[] pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pinned_array::memsize</field>
    <field name="args">()</field>
    <field name="url">classpinned__array.html#a9297c5f8756d0ac90ba4203370557549</field>
    <field name="keywords">memsize pinned_array::memsize pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">pinned_array::d</field>
    <field name="url">classpinned__array.html#a5ffd81435f51946d3f9365fd49ab0274</field>
    <field name="keywords">d pinned_array::d pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">pinned_array::n</field>
    <field name="url">classpinned__array.html#a8038d2f3dbfca5173ef9e4727cbac721</field>
    <field name="keywords">n pinned_array::n pinned_array&lt; T, flags &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">QI</field>
    <field name="url">class_q_i.html</field>
    <field name="keywords">QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::Execute</field>
    <field name="args">(BaseKernelParams &amp;p, const QTrkComputedConfig &amp;cfg, StreamInstance *s, DeviceInstance *d, device_vec&lt; float3 &gt; *initial, device_vec&lt; float3 &gt; *output)</field>
    <field name="url">class_q_i.html#a084274d952e1430627110818f398a3d4</field>
    <field name="keywords">Execute QI::Execute QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::InitDevice</field>
    <field name="args">(DeviceInstance *d, QTrkComputedConfig &amp;cc)</field>
    <field name="url">class_q_i.html#a20a5d23a269c8c5cc1dcce1f5d931e20</field>
    <field name="keywords">InitDevice QI::InitDevice QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::InitStream</field>
    <field name="args">(StreamInstance *s, QTrkComputedConfig &amp;cc, cudaStream_t stream, int batchSize)</field>
    <field name="url">class_q_i.html#ae560c53ae31c70ca9a1d6a0a745c75ee</field>
    <field name="keywords">InitStream QI::InitStream QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::Init</field>
    <field name="args">(QTrkComputedConfig &amp;cfg, int batchSize)</field>
    <field name="url">class_q_i.html#a4d2c72e4f110d37299c01da8480671f4</field>
    <field name="keywords">Init QI::Init QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::Iterate</field>
    <field name="args">(BaseKernelParams &amp;p, device_vec&lt; float3 &gt; *initial, device_vec&lt; float3 &gt; *output, StreamInstance *s, DeviceInstance *d, int angularSteps)</field>
    <field name="url">class_q_i.html#a7fef057a722e3c85152f947c7a7dd42a</field>
    <field name="keywords">Iterate QI::Iterate QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::blocks</field>
    <field name="args">(int njobs)</field>
    <field name="url">class_q_i.html#aae8ddb96f755ee2cc38d9fb36e742dde</field>
    <field name="keywords">blocks QI::blocks QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::threads</field>
    <field name="args">()</field>
    <field name="url">class_q_i.html#aef6a690a8934bcc7ced5332518b04660</field>
    <field name="keywords">threads QI::threads QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::params</field>
    <field name="url">class_q_i.html#af69f420666212bcf5f10a5cf03cd161a</field>
    <field name="keywords">params QI::params QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::qi_FFT_length</field>
    <field name="url">class_q_i.html#a9959b6d60486da504fca5c3c86fb2fdd</field>
    <field name="keywords">qi_FFT_length QI::qi_FFT_length QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::batchSize</field>
    <field name="url">class_q_i.html#aa7bd10a94c9128943ff9f1775614f704</field>
    <field name="keywords">batchSize QI::batchSize QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::numThreads</field>
    <field name="url">class_q_i.html#afd1c6359668f2de142a18caf2a0e76e0</field>
    <field name="keywords">numThreads QI::numThreads QI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QI::DeviceInstance</field>
    <field name="url">struct_q_i_1_1_device_instance.html</field>
    <field name="keywords">DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::DeviceInstance::~DeviceInstance</field>
    <field name="args">()</field>
    <field name="url">struct_q_i_1_1_device_instance.html#ab321e6992b8172848d1ad48a909a8c0a</field>
    <field name="keywords">QI::DeviceInstance::~DeviceInstance QI::DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::DeviceInstance::DeviceInstance</field>
    <field name="args">()</field>
    <field name="url">struct_q_i_1_1_device_instance.html#a629e845ff5f15a64d69932c49466bec5</field>
    <field name="keywords">DeviceInstance QI::DeviceInstance::DeviceInstance QI::DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::DeviceInstance::qi_trigtable</field>
    <field name="url">struct_q_i_1_1_device_instance.html#ab730111e2f8c985f989292bd08a37cb2</field>
    <field name="keywords">qi_trigtable QI::DeviceInstance::qi_trigtable QI::DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::DeviceInstance::d_qiparams</field>
    <field name="url">struct_q_i_1_1_device_instance.html#abe6dcf39cea54486eab662f1fbb178dc</field>
    <field name="keywords">d_qiparams QI::DeviceInstance::d_qiparams QI::DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::DeviceInstance::d_radialweights</field>
    <field name="url">struct_q_i_1_1_device_instance.html#a9b2174efc43fc2f8ff6fa79878fe027a</field>
    <field name="keywords">d_radialweights QI::DeviceInstance::d_radialweights QI::DeviceInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QI::StreamInstance</field>
    <field name="url">struct_q_i_1_1_stream_instance.html</field>
    <field name="keywords">StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::StreamInstance::~StreamInstance</field>
    <field name="args">()</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a4baf4fa7918c42b08e383b86547fdf18</field>
    <field name="keywords">QI::StreamInstance::~StreamInstance QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QI::StreamInstance::memsize</field>
    <field name="args">()</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#afb6bbb4e6f3617fe5f687f1031ee465f</field>
    <field name="keywords">memsize QI::StreamInstance::memsize QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::d_shiftbuffer</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a724cb0eaf4dba31d223c091f24b01a16</field>
    <field name="keywords">d_shiftbuffer QI::StreamInstance::d_shiftbuffer QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::d_QIprofiles</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a85870c63b71d751b2bda88c951cac3ec</field>
    <field name="keywords">d_QIprofiles QI::StreamInstance::d_QIprofiles QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::d_QIprofiles_reverse</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a81b60b3df49790dcfa8989e6b49f646e</field>
    <field name="keywords">d_QIprofiles_reverse QI::StreamInstance::d_QIprofiles_reverse QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::d_quadrants</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a39936bfcb1d3852b71dd4e5311d78c34</field>
    <field name="keywords">d_quadrants QI::StreamInstance::d_quadrants QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::fftPlan</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#acef1717596e0bd4e736707949d1e7d10</field>
    <field name="keywords">fftPlan QI::StreamInstance::fftPlan QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QI::StreamInstance::stream</field>
    <field name="url">struct_q_i_1_1_stream_instance.html#a86a26550ce70d9da353d52c3d8945918</field>
    <field name="keywords">stream QI::StreamInstance::stream QI::StreamInstance</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QIParams</field>
    <field name="url">struct_q_i_params.html</field>
    <field name="keywords">QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::minRadius</field>
    <field name="url">struct_q_i_params.html#a4c3b954348ae3ee381eab69122983515</field>
    <field name="keywords">minRadius QIParams::minRadius QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::maxRadius</field>
    <field name="url">struct_q_i_params.html#a59a4abd887cfec3392bb5ecd6891d7d6</field>
    <field name="keywords">maxRadius QIParams::maxRadius QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::radialSteps</field>
    <field name="url">struct_q_i_params.html#a19b7d550113364de4e4f11e2c9cfea0e</field>
    <field name="keywords">radialSteps QIParams::radialSteps QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::iterations</field>
    <field name="url">struct_q_i_params.html#a233d13629ccc9d8c2c500286b13eeb97</field>
    <field name="keywords">iterations QIParams::iterations QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::trigtablesize</field>
    <field name="url">struct_q_i_params.html#a2078879365690b162cac67e45837a29d</field>
    <field name="keywords">trigtablesize QIParams::trigtablesize QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QIParams::cos_sin_table</field>
    <field name="url">struct_q_i_params.html#a8da3ccdd4b94c119a0d63ff63f28b8e7</field>
    <field name="keywords">cos_sin_table QIParams::cos_sin_table QIParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QTrkComputedConfig</field>
    <field name="url">struct_q_trk_computed_config.html</field>
    <field name="keywords">QTrkComputedConfig</field>
    <field name="text">Structure for derived settings computed from base settings in QTrkSettings Compiled without padding to line up with LabVIEW alignment Changing this requires changing of the linked LabVIEW cluster QTrkSettings.ctl All settings are always defined eventhough only one of the three 2D localization algorithms is used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkComputedConfig::QTrkComputedConfig</field>
    <field name="args">()</field>
    <field name="url">struct_q_trk_computed_config.html#ad738ca026c9b8b214c45dbffa71be9bf</field>
    <field name="keywords">QTrkComputedConfig QTrkComputedConfig::QTrkComputedConfig QTrkComputedConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkComputedConfig::QTrkComputedConfig</field>
    <field name="args">(const QTrkSettings &amp;base)</field>
    <field name="url">struct_q_trk_computed_config.html#aa129e2fc92125cfe3e3e54bdc22b0872</field>
    <field name="keywords">QTrkComputedConfig QTrkComputedConfig::QTrkComputedConfig QTrkComputedConfig</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkComputedConfig::Update</field>
    <field name="args">()</field>
    <field name="url">struct_q_trk_computed_config.html#a26980879d30db548c6b2a2589616d7ee</field>
    <field name="keywords">Update QTrkComputedConfig::Update QTrkComputedConfig</field>
    <field name="text">Compute the derived settings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkComputedConfig::WriteToLog</field>
    <field name="args">()</field>
    <field name="url">struct_q_trk_computed_config.html#a032b48136d299b59fe90b35ad0ade0a2</field>
    <field name="keywords">WriteToLog QTrkComputedConfig::WriteToLog QTrkComputedConfig</field>
    <field name="text">Write all settings to specified log file Jelmer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkComputedConfig::WriteToFile</field>
    <field name="args">()</field>
    <field name="url">struct_q_trk_computed_config.html#a824634b46aeafc68c21d5951f92495c3</field>
    <field name="keywords">WriteToFile QTrkComputedConfig::WriteToFile QTrkComputedConfig</field>
    <field name="text">Write all settings to specified output file Jordi to combine with QTrkSettings.testRun</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QTrkSettings::QTrkSettings</field>
    <field name="args">()</field>
    <field name="url">struct_q_trk_settings.html#a5d3675dfece085b68b5c508697989b87</field>
    <field name="keywords">QTrkSettings QTrkSettings::QTrkSettings QTrkSettings QTrkSettings QTrkSettings::QTrkSettings QTrkSettings</field>
    <field name="text">Set default values on initialization</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::zlut_radialsteps</field>
    <field name="url">struct_q_trk_computed_config.html#ad1a121fa7d3152df6788ff285e4d2dc6</field>
    <field name="keywords">zlut_radialsteps QTrkComputedConfig::zlut_radialsteps QTrkComputedConfig</field>
    <field name="text">Number of radial steps to sample on</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::zlut_angularsteps</field>
    <field name="url">struct_q_trk_computed_config.html#a01653574d81ab70e4910c984fb7f7482</field>
    <field name="keywords">zlut_angularsteps QTrkComputedConfig::zlut_angularsteps QTrkComputedConfig</field>
    <field name="text">Number of angular steps to sample on</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::zlut_maxradius</field>
    <field name="url">struct_q_trk_computed_config.html#a13ceb0d4551d3bd5343ecce7a093d65b</field>
    <field name="keywords">zlut_maxradius QTrkComputedConfig::zlut_maxradius QTrkComputedConfig</field>
    <field name="text">Max radius in pixels of the sampling circle</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::qi_radialsteps</field>
    <field name="url">struct_q_trk_computed_config.html#ab1a11e7a567a3267c57f77626c6c9c93</field>
    <field name="keywords">qi_radialsteps QTrkComputedConfig::qi_radialsteps QTrkComputedConfig</field>
    <field name="text">Number of radial steps to sample on</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::qi_angstepspq</field>
    <field name="url">struct_q_trk_computed_config.html#a1ba87257b24e5b7e427aa92dd4114792</field>
    <field name="keywords">qi_angstepspq QTrkComputedConfig::qi_angstepspq QTrkComputedConfig</field>
    <field name="text">Number of angular steps to sample on</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkComputedConfig::qi_maxradius</field>
    <field name="url">struct_q_trk_computed_config.html#a9784dbeb638bde1f3204f9ca5af720c6</field>
    <field name="keywords">qi_maxradius QTrkComputedConfig::qi_maxradius QTrkComputedConfig</field>
    <field name="text">Max radius in pixels of the sampling circle</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::width</field>
    <field name="url">struct_q_trk_settings.html#aef24eb3a4692bd67ff1aca8ef950e08d</field>
    <field name="keywords">width QTrkSettings::width QTrkSettings width QTrkSettings::width QTrkSettings</field>
    <field name="text">Width of regions of interest to be handled Typically equals QTrkSettings::height square ROI Width of regions of interest to be handled Typically equals QTrkSettings::height square ROI</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::height</field>
    <field name="url">struct_q_trk_settings.html#a94c965d103e7a0a4f1fced8eee1324ce</field>
    <field name="keywords">height QTrkSettings::height QTrkSettings height QTrkSettings::height QTrkSettings</field>
    <field name="text">Height of regions of interest to be handled Typically equals QTrkSettings::width square ROI Height of regions of interest to be handled Typically equals QTrkSettings::width square ROI</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::numThreads</field>
    <field name="url">struct_q_trk_settings.html#a8c6f1c671b527155afd5dad894c152da</field>
    <field name="keywords">numThreads QTrkSettings::numThreads QTrkSettings numThreads QTrkSettings::numThreads QTrkSettings</field>
    <field name="text">Number of threads/streams to use Defaults differ between CPU and GPU implementations Number of threads/streams to use Defaults differ between CPU and GPU implementations CPU Default chooses threads equal to the number of CPUs available CUDA Default chooses 4 streams per available device</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::cuda_device</field>
    <field name="url">struct_q_trk_settings.html#a795682a80b672b594ebd225aebf3fb16</field>
    <field name="keywords">cuda_device QTrkSettings::cuda_device QTrkSettings cuda_device QTrkSettings::cuda_device QTrkSettings</field>
    <field name="text">CUDA only Flag for device selection CUDA only Flag for device selection cuda_device 0 Use as hardware device index cuda_device 0 Use flags below QTrkCUDA_UseList Use list defined by SetCUDADevices QTrkCUDA_UseAll Use all available devices Default option QTrkCUDA_UseBest Only use the best device</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::com_bgcorrection</field>
    <field name="url">struct_q_trk_settings.html#a18ce353ffb049d1c86254a773a6fe49d</field>
    <field name="keywords">com_bgcorrection QTrkSettings::com_bgcorrection QTrkSettings com_bgcorrection QTrkSettings::com_bgcorrection QTrkSettings</field>
    <field name="text">Background correction factor for COM Defines the number of standard deviations data needs to be away from the image mean to be taken into account Background correction factor for COM Defines the number of standard deviations data needs to be away from the image mean to be taken into account</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::zlut_minradius</field>
    <field name="url">struct_q_trk_settings.html#a1a14537a9e784c65eed512e72ee86c02</field>
    <field name="keywords">zlut_minradius QTrkSettings::zlut_minradius QTrkSettings zlut_minradius QTrkSettings::zlut_minradius QTrkSettings</field>
    <field name="text">Distance in pixels from the bead center from which to start sampling profiles Default 1.0 Distance in pixels from the bead center from which to start sampling profiles Default 1.0</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::zlut_radial_coverage</field>
    <field name="url">struct_q_trk_settings.html#ae57544152a8a129bae6cb934feead1c7</field>
    <field name="keywords">zlut_radial_coverage QTrkSettings::zlut_radial_coverage QTrkSettings zlut_radial_coverage QTrkSettings::zlut_radial_coverage QTrkSettings</field>
    <field name="text">Sampling points per radial pixel Default 3.0 Sampling points per radial pixel Default 3.0</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::zlut_angular_coverage</field>
    <field name="url">struct_q_trk_settings.html#a8892aa193827371fc06ee94254e68b09</field>
    <field name="keywords">zlut_angular_coverage QTrkSettings::zlut_angular_coverage QTrkSettings zlut_angular_coverage QTrkSettings::zlut_angular_coverage QTrkSettings</field>
    <field name="text">Factor of the sampling perimeter to cover with angular sampling steps Between 0 and 1 default 0.7 Factor of the sampling perimeter to cover with angular sampling steps Between 0 and 1 default 0.7</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::zlut_roi_coverage</field>
    <field name="url">struct_q_trk_settings.html#a33db8dee144b4a042f5440fa1f210e6a</field>
    <field name="keywords">zlut_roi_coverage QTrkSettings::zlut_roi_coverage QTrkSettings zlut_roi_coverage QTrkSettings::zlut_roi_coverage QTrkSettings</field>
    <field name="text">Factor of the ROI to include in sampling Between 0 and 1 default 1 Maxradius ROI/2*roi_coverage Factor of the ROI to include in sampling Between 0 and 1 default 1 Maxradius ROI/2*roi_coverage</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_iterations</field>
    <field name="url">struct_q_trk_settings.html#a12105babb328a9a7ec90f0eab074fabb</field>
    <field name="keywords">qi_iterations QTrkSettings::qi_iterations QTrkSettings qi_iterations QTrkSettings::qi_iterations QTrkSettings</field>
    <field name="text">Number of times to run the QI algorithm sampling around the last found position Number of times to run the QI algorithm sampling around the last found position</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_minradius</field>
    <field name="url">struct_q_trk_settings.html#a7b5f3e61b4dcab6330c56e7bcd96e82d</field>
    <field name="keywords">qi_minradius QTrkSettings::qi_minradius QTrkSettings qi_minradius QTrkSettings::qi_minradius QTrkSettings</field>
    <field name="text">Distance in pixels from the bead center from which to start sampling profiles Default 1.0 Distance in pixels from the bead center from which to start sampling profiles Default 1.0</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_radial_coverage</field>
    <field name="url">struct_q_trk_settings.html#abee59fa2f68d9e514500062f73b1d512</field>
    <field name="keywords">qi_radial_coverage QTrkSettings::qi_radial_coverage QTrkSettings qi_radial_coverage QTrkSettings::qi_radial_coverage QTrkSettings</field>
    <field name="text">Sampling points per radial pixel Default 3.0 Sampling points per radial pixel Default 3.0</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_angular_coverage</field>
    <field name="url">struct_q_trk_settings.html#a08800ed7809dc4bde16d0a6fee08ecdd</field>
    <field name="keywords">qi_angular_coverage QTrkSettings::qi_angular_coverage QTrkSettings qi_angular_coverage QTrkSettings::qi_angular_coverage QTrkSettings</field>
    <field name="text">Factor of the sampling perimeter to cover with angular sampling steps Between 0 and 1 default 0.7 Factor of the sampling perimeter to cover with angular sampling steps Between 0 and 1 default 0.7</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_roi_coverage</field>
    <field name="url">struct_q_trk_settings.html#ab9567d21cc1517713a746c2173de4264</field>
    <field name="keywords">qi_roi_coverage QTrkSettings::qi_roi_coverage QTrkSettings qi_roi_coverage QTrkSettings::qi_roi_coverage QTrkSettings</field>
    <field name="text">Factor of the ROI to include in sampling Between 0 and 1 default 1 Maxradius ROI/2*roi_coverage Factor of the ROI to include in sampling Between 0 and 1 default 1 Maxradius ROI/2*roi_coverage</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::qi_angstep_factor</field>
    <field name="url">struct_q_trk_settings.html#aceebf67ba9ecc215d49c6b2739afae3d</field>
    <field name="keywords">qi_angstep_factor QTrkSettings::qi_angstep_factor QTrkSettings qi_angstep_factor QTrkSettings::qi_angstep_factor QTrkSettings</field>
    <field name="text">Factor to reduce angular steps on lower iterations Default 1.0 no effect Increase for faster early iterations but more image noise sensitivity Factor to reduce angular steps on lower iterations Default 1.0 no effect Increase for faster early iterations but more image noise sensitivity</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::xc1_profileLength</field>
    <field name="url">struct_q_trk_settings.html#a8f38457c4ec183f78a0191b247ab6b51</field>
    <field name="keywords">xc1_profileLength QTrkSettings::xc1_profileLength QTrkSettings xc1_profileLength QTrkSettings::xc1_profileLength QTrkSettings</field>
    <field name="text">Profile length for the cross correlation Profile length for the cross correlation</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::xc1_profileWidth</field>
    <field name="url">struct_q_trk_settings.html#a80de240523eb79408593d26e6ef07ef7</field>
    <field name="keywords">xc1_profileWidth QTrkSettings::xc1_profileWidth QTrkSettings xc1_profileWidth QTrkSettings::xc1_profileWidth QTrkSettings</field>
    <field name="text">Profile width for the cross correlation Profile width for the cross correlation</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::xc1_iterations</field>
    <field name="url">struct_q_trk_settings.html#a0bc4efdffbb8ad272d1c9facfdf0e171</field>
    <field name="keywords">xc1_iterations QTrkSettings::xc1_iterations QTrkSettings xc1_iterations QTrkSettings::xc1_iterations QTrkSettings</field>
    <field name="text">Number of times to run the cross correlation algorithm Number of times to run the cross correlation algorithm</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::gauss2D_iterations</field>
    <field name="url">struct_q_trk_settings.html#aa5ae2b9e5700fe2eab58f9084389c3ad</field>
    <field name="keywords">gauss2D_iterations QTrkSettings::gauss2D_iterations QTrkSettings gauss2D_iterations QTrkSettings::gauss2D_iterations QTrkSettings</field>
    <field name="text">Number of times to run the 2D gaussian algorithm Number of times to run the 2D gaussian algorithm</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::gauss2D_sigma</field>
    <field name="url">struct_q_trk_settings.html#a950fc67c972c608570ef2dd27fcfaf4d</field>
    <field name="keywords">gauss2D_sigma QTrkSettings::gauss2D_sigma QTrkSettings gauss2D_sigma QTrkSettings::gauss2D_sigma QTrkSettings</field>
    <field name="text">Standard deviation to use in the 2D gaussian algorithm Standard deviation to use in the 2D gaussian algorithm</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::downsample</field>
    <field name="url">struct_q_trk_settings.html#ad10a141ae7d18c2e6ce487f147dd7c02</field>
    <field name="keywords">downsample QTrkSettings::downsample QTrkSettings downsample QTrkSettings::downsample QTrkSettings</field>
    <field name="text">Image downsampling factor Applied before anything else 0 original 1 1x W W/2 H H/2 Image downsampling factor Applied before anything else 0 original 1 1x W W/2 H H/2</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QTrkSettings::testRun</field>
    <field name="url">struct_q_trk_settings.html#aef52bd8e2fdba83af4ce3b4367180d9f</field>
    <field name="keywords">testRun QTrkSettings::testRun QTrkSettings testRun QTrkSettings::testRun QTrkSettings</field>
    <field name="text">Flag to run a test run Flag to run a test run A test run dumps a lot of intermediate data to the disk for algorithm inspection only QI ZLUT CHANGED compared to LabVIEW! Comment/remove when compiling for LabVIEW Add to LabVIEW cluster</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QTrkSettings</field>
    <field name="url">struct_q_trk_settings.html</field>
    <field name="keywords">QTrkSettings</field>
    <field name="text">Structure for the settings used by the algorithms implemented in QueuedTracker Compiled without padding to line up with LabVIEW alignment Changing this requires changing of the linked LabVIEW cluster QTrkSettings.ctl All settings are always defined eventhough only one of the three 2D localization algorithms is used</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">QueuedCPUTracker</field>
    <field name="url">class_queued_c_p_u_tracker.html</field>
    <field name="keywords">QueuedCPUTracker</field>
    <field name="text">CPU implementation of the QueuedTracker interface Creates and maintains multiple threads one per available core by default and schedules localizations over them Each thread has its own CPUTracker instance which provides the actual calculations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::QueuedCPUTracker</field>
    <field name="args">(const QTrkComputedConfig &amp;cc)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a596570348d7ddc545c3823a10ac21c56</field>
    <field name="keywords">QueuedCPUTracker QueuedCPUTracker::QueuedCPUTracker QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::~QueuedCPUTracker</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a27569181cf04bf0872aadd72a0c5560a</field>
    <field name="keywords">QueuedCPUTracker::~QueuedCPUTracker QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Start</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a1094604fc95b81cd43327606001d84ec</field>
    <field name="keywords">Start QueuedCPUTracker::Start QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Break</field>
    <field name="args">(bool pause)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a3ae7b15c688e8a632ff10a0a5b8ccdd0</field>
    <field name="keywords">Break QueuedCPUTracker::Break QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GenerateTestImage</field>
    <field name="args">(float *dst, float xp, float yp, float z, float photoncount)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a0901736328051388ed2dceb94a3b378f</field>
    <field name="keywords">GenerateTestImage QueuedCPUTracker::GenerateTestImage QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::NumThreads</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#ab72dd2ac1e12de11115f1cd96c9e51cd</field>
    <field name="keywords">NumThreads QueuedCPUTracker::NumThreads QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetLocalizationMode</field>
    <field name="args">(LocMode_t lt) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a7fcc061bd8d6a0f16472d57c8939c565</field>
    <field name="keywords">SetLocalizationMode QueuedCPUTracker::SetLocalizationMode QueuedCPUTracker</field>
    <field name="text">Select which algorithm is to be used locType An integer used as a bitmask for settings based on LocalizeModeEnum</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetRadialZLUT</field>
    <field name="args">(float *data, int num_zluts, int planes) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#af9ac36a1eb757e006698a4fb789bcbd0</field>
    <field name="keywords">SetRadialZLUT QueuedCPUTracker::SetRadialZLUT QueuedCPUTracker</field>
    <field name="text">Set the radial lookup tables to be used for z tracking Data can be zero to allocate ZLUT data LUTs should have been created before by BuildLUT but not necessarily by the current instance as long as setting match data Pointer to the start of the ZLUT data count Number of ZLUTs in the dataset planes Number of planes per ZLUT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetRadialZLUT</field>
    <field name="args">(float *zlut) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a9c4f1687ca9347508594a9df46defad8</field>
    <field name="keywords">GetRadialZLUT QueuedCPUTracker::GetRadialZLUT QueuedCPUTracker</field>
    <field name="text">Get the radial lookup tables used for z tracking dst Pointer to the pre-allocated memory in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetRadialZLUTSize</field>
    <field name="args">(int &amp;count, int &amp;planes, int &amp;rsteps) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a57c77fc0ceada2aeffc018970d9d18d8</field>
    <field name="keywords">GetRadialZLUTSize QueuedCPUTracker::GetRadialZLUTSize QueuedCPUTracker</field>
    <field name="text">Get the dimensions of the radial lookup table data count Reference to pre-allocated int Returns number of lookup tables planes Reference to pre-allocated int Returns number of planes per lookup table radialsteps Reference to pre-allocated int Returns number of steps per plane</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetRadialWeights</field>
    <field name="args">(float *rweights) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a070149d1ecf38176ae2cc84a71f3851f</field>
    <field name="keywords">SetRadialWeights QueuedCPUTracker::SetRadialWeights QueuedCPUTracker</field>
    <field name="text">Set radial weights used for comparing LUT profiles zcmp Array of radial weights to use zcmp has to have zlut_radialsteps elements</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetRadialWeights</field>
    <field name="args">(std::vector&lt; float &gt; weights)</field>
    <field name="url">class_queued_c_p_u_tracker.html#ab16da04344186411198d646df47f1218</field>
    <field name="keywords">SetRadialWeights QueuedCPUTracker::SetRadialWeights QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ScheduleLocalization</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#aefc2afb79c4347dbbbd66d84cfd8787f</field>
    <field name="keywords">ScheduleLocalization QueuedCPUTracker::ScheduleLocalization QueuedCPUTracker</field>
    <field name="text">Add a job to the queue to be processed A job entails running the required algorithms on a single region of interest data Pointer to the data Type specified by pdt pitch Distance in bytes between two successive rows of pixels e.g address of 0 0 address of 0 1 pdt Type of data specified by QTRK_PixelDataType jobInfo Structure with metadata for the ROI to be handled See LocalizationJob</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::EnableRadialZLUTCompareProfile</field>
    <field name="args">(bool enabled)</field>
    <field name="url">class_queued_c_p_u_tracker.html#accb203fae1a724f6ac870c4dc402dda7</field>
    <field name="keywords">EnableRadialZLUTCompareProfile QueuedCPUTracker::EnableRadialZLUTCompareProfile QueuedCPUTracker</field>
    <field name="text">Set a flag to enable saving of error curves Errors obtained by comparing a radial profile to a ZLUT will be kept in memory rather than destroyed Only saves for one localization Error curve can be retreived by GetRadialZLUTCompareProfile Not implemented for CUDA enabled Flag boolean to save error curves Default is false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetRadialZLUTCompareProfile</field>
    <field name="args">(float *dst)</field>
    <field name="url">class_queued_c_p_u_tracker.html#afdc97ea9b0e7eba6d2678a0536c39c37</field>
    <field name="keywords">GetRadialZLUTCompareProfile QueuedCPUTracker::GetRadialZLUTCompareProfile QueuedCPUTracker</field>
    <field name="text">Get saved error curve See EnableRadialZLUTCompareProfile Not implemented for CUDA dst Pointer to the pre-allocated memory in which to save the error curve Size is count planes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ZLUTSelfTest</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#adc3feb62a374abea02f4f9502c08c42c</field>
    <field name="keywords">ZLUTSelfTest QueuedCPUTracker::ZLUTSelfTest QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::BeginLUT</field>
    <field name="args">(uint flags)</field>
    <field name="url">class_queued_c_p_u_tracker.html#af4b7390a38d56cc45670a60586e20051</field>
    <field name="keywords">BeginLUT QueuedCPUTracker::BeginLUT QueuedCPUTracker</field>
    <field name="text">Setup to begin building a lookup table Sets the flags by which the lookup table is built Flags are defined in a uint bitmask format as Name Value Description 0 Default no special flags BUILDLUT_IMAGELUT 1 2^0 Build an image LUT BUILDLUT_FOURIER 2 2^1 Build a fourier LUT BUILDLUT_NORMALIZE 4 2^2 Normalize radial profiles Irrelevant since FinalizeLUT always normalizes BUILDLUT_BIASCORRECT 8 2^3 Enable bias correction Currently only partly implemented don t use flags UINT interpreted as a series of bits to set settings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::BuildLUT</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, int plane, vector2f *known_pos=0) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#ac73750c7446b69b070ab24742b02660f</field>
    <field name="keywords">BuildLUT QueuedCPUTracker::BuildLUT QueuedCPUTracker</field>
    <field name="text">Add a new lookup table plane Takes a stack of ROI images through data Determines and adds the profile for each ROI to its respective LUT data Pointer to the start of an image stack pitch Width of the data in memory so offsets can be calculated pdt Pixel data type for the data See QTRK_PixelDataType plane The plane number the ROIs are taken for known_pos Center position from which to start making the radial profile A standard QI localization with applied settings is performed if 0 default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::FinalizeLUT</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a9d94101b69e1f514473bfedc012ec785</field>
    <field name="keywords">FinalizeLUT QueuedCPUTracker::FinalizeLUT QueuedCPUTracker</field>
    <field name="text">Finalize the lookup tables in memory Normalizes the profiles for radial lookup tables and calculates derivates and adds boundary conditions for image LUTs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetImageZLUTSize</field>
    <field name="args">(int *dims)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a399b87fd1542b05fc9e9c80c1dd6b664</field>
    <field name="keywords">GetImageZLUTSize QueuedCPUTracker::GetImageZLUTSize QueuedCPUTracker</field>
    <field name="text">Get the dimensions of the image lookup table data Use of image LUT is currently not clear Radial ZLUT is always used dims Reference to pre-allocated int array Returns count planes height width</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetImageZLUT</field>
    <field name="args">(float *dst)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a53b0d922963c771e804fb624f7d39821</field>
    <field name="keywords">GetImageZLUT QueuedCPUTracker::GetImageZLUT QueuedCPUTracker</field>
    <field name="text">Get the image lookup tables used Use of image LUT is currently not clear Radial ZLUT is always used dst Pointer to the pre-allocated memory in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetImageZLUT</field>
    <field name="args">(float *dst, float *radial_zlut, int *dims)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a151a19c5ba686c62d1fc47fa0eb1ef95</field>
    <field name="keywords">SetImageZLUT QueuedCPUTracker::SetImageZLUT QueuedCPUTracker</field>
    <field name="text">Set the image lookup tables to be used for z tracking Use of image LUT is currently not clear Radial ZLUT is always used src Pointer to the data for the image LUT radial_zlut Pointer to the data for the radial LUT dims Array of dimension sizes for the image LUT See GetImageZLUTSize</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetPixelCalibrationImages</field>
    <field name="args">(float *offset, float *gain) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a7574f92390c674ddcbb35cefc6e87da5</field>
    <field name="keywords">SetPixelCalibrationImages QueuedCPUTracker::SetPixelCalibrationImages QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetPixelCalibrationFactors</field>
    <field name="args">(float offsetFactor, float gainFactor) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a94903982ee31eced25b4640b12a4bc56</field>
    <field name="keywords">SetPixelCalibrationFactors QueuedCPUTracker::SetPixelCalibrationFactors QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetQueueLength</field>
    <field name="args">(int *maxQueueLength=0) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a7e1a888cfcc2eb97e059d6711ddfc8af</field>
    <field name="keywords">GetQueueLength QueuedCPUTracker::GetQueueLength QueuedCPUTracker</field>
    <field name="text">Get the lengths of the queue of jobs to be handled maxQueueLen Pre-allocated integer that returns the maximum size of the queue if nonzero Number of jobs currently being handled and in the queue</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::FetchResults</field>
    <field name="args">(LocalizationResult *dstResult, int maxResults) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a253b1d5d116dabad6b7b82ae41294a53</field>
    <field name="keywords">FetchResults QueuedCPUTracker::FetchResults QueuedCPUTracker</field>
    <field name="text">Fetch available results Removes results from internal QueuedTracker memory results Array of pre-allocated LocalizationResult to which to add the results maxResults Maximum number of results to fetch Corresponds to maximum size of dstResult Number of fetched results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ClearResults</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a24f0731281b361dfb857448ce98d0aa3</field>
    <field name="keywords">ClearResults QueuedCPUTracker::ClearResults QueuedCPUTracker</field>
    <field name="text">Clear results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Flush</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a9b332b6fb228e9c655eb2fb12d8dfbc6</field>
    <field name="keywords">Flush QueuedCPUTracker::Flush QueuedCPUTracker</field>
    <field name="text">Stop waiting for more jobs to do and just process the current batch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::IsIdle</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a16ec7c17782c4f001dec0dab12970cba</field>
    <field name="keywords">IsIdle QueuedCPUTracker::IsIdle QueuedCPUTracker</field>
    <field name="text">Test to see if the tracker is idle That is GetQueueLength 0 Boolean indicating if the tracker is idle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetResultCount</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a0424c92dec3952cf9197a5a9161e2188</field>
    <field name="keywords">GetResultCount QueuedCPUTracker::GetResultCount QueuedCPUTracker</field>
    <field name="text">Get the number of finished localization jobs results available in memory The number of available results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetDebugImage</field>
    <field name="args">(int id, int *w, int *h, float **data)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a4db75a5bfcb5ee2891177da9f6448557</field>
    <field name="keywords">GetDebugImage QueuedCPUTracker::GetDebugImage QueuedCPUTracker</field>
    <field name="text">Get the debug image for a specific thread Debug image can be set in trackers by copying data into debugImage for instance pData has to be cleared with delete in the calling function! ID Thread number from which to grab the image w Pointer to an integer in which the image width will be stored h Pointer to an integer in which the image height will be stored pData Reference to where the data array will be saved Boolean indicating if the debug image was succesfully returned</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetConfigValues</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_p_u_tracker.html#af06013bc5f92d5570aa6244ca1768fcf</field>
    <field name="keywords">GetConfigValues QueuedCPUTracker::GetConfigValues QueuedCPUTracker</field>
    <field name="text">Get the used additional configurations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetConfigValue</field>
    <field name="args">(std::string name, std::string value) override</field>
    <field name="url">class_queued_c_p_u_tracker.html#a1d67ecf808b54866d49babb654d32894</field>
    <field name="keywords">SetConfigValue QueuedCPUTracker::SetConfigValue QueuedCPUTracker</field>
    <field name="text">Set an additional setting name Name of the setting value Value of the setting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetProfileReport</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a241d002353241975d49c1e80cd967524</field>
    <field name="keywords">GetProfileReport QueuedCPUTracker::GetProfileReport QueuedCPUTracker</field>
    <field name="text">Get the output of performance profiling Only implemented in CUDA at the moment String with the parsed profiling output</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetZLUTByIndex</field>
    <field name="args">(int index)</field>
    <field name="url">class_queued_c_p_u_tracker.html#ab467243ae4103dbf2c0b87aa6ba72b3b</field>
    <field name="keywords">GetZLUTByIndex QueuedCPUTracker::GetZLUTByIndex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::QueuedTracker</field>
    <field name="args">()</field>
    <field name="url">class_queued_tracker.html#a483d1506b7b317d705cc7997805b5904</field>
    <field name="keywords">QueuedTracker QueuedTracker::QueuedTracker QueuedTracker QueuedTracker QueuedTracker::QueuedTracker QueuedTracker QueuedTracker QueuedTracker::QueuedTracker QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::~QueuedTracker</field>
    <field name="args">()</field>
    <field name="url">class_queued_tracker.html#aa60a3ac6e97b8a7a84b49dd9b6c8b615</field>
    <field name="keywords">QueuedTracker::~QueuedTracker QueuedTracker QueuedTracker::~QueuedTracker QueuedTracker QueuedTracker::~QueuedTracker QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ScheduleImageData</field>
    <field name="args">(ImageData *data, const LocalizationJob *jobInfo)</field>
    <field name="url">class_queued_tracker.html#afa6cfa13cba4d05fac9f7baa96b12f89</field>
    <field name="keywords">ScheduleImageData QueuedTracker::ScheduleImageData QueuedTracker ScheduleImageData QueuedTracker::ScheduleImageData QueuedTracker ScheduleImageData QueuedTracker::ScheduleImageData QueuedTracker</field>
    <field name="text">Quick function to schedule a single ROI from an ImageData object Quick function to schedule a single ROI from an ImageData object Quick function to schedule a single ROI from an ImageData object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ScheduleFrame</field>
    <field name="args">(void *imgptr, int pitch, int width, int height, ROIPosition *positions, int numROI, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo)</field>
    <field name="url">class_queued_tracker.html#ab80776ec6e8b2202d858f1c9cb989240</field>
    <field name="keywords">ScheduleFrame QueuedTracker::ScheduleFrame QueuedTracker ScheduleFrame QueuedTracker::ScheduleFrame QueuedTracker ScheduleFrame QueuedTracker::ScheduleFrame QueuedTracker</field>
    <field name="text">Schedule an entire frame at once allowing for further optimizations Schedule an entire frame at once allowing for further optimizations Schedule an entire frame at once allowing for further optimizations Queues each ROI within the frame seperatly with ScheduleLocalization imgptr Pointer to the top-left pixel of the frame pitch Size in bytes of one row in memory width Width of the frame in pixels height Height of the frame in pixels positions Array of ROIPosition with the top-left pixel of each ROI to be queued numROI Number of ROIs to handle within the frame pdt Data type of the image given through imgptr jobInfo LocalizationJob with information about the frame Amount of ROIs queued</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetWarnings</field>
    <field name="args">()</field>
    <field name="url">class_queued_tracker.html#aafb754ef37092a96f95a3094eba58398</field>
    <field name="keywords">GetWarnings QueuedTracker::GetWarnings QueuedTracker GetWarnings QueuedTracker::GetWarnings QueuedTracker GetWarnings QueuedTracker::GetWarnings QueuedTracker</field>
    <field name="text">Get a report of encountered errors Get a report of encountered errors Get a report of encountered errors Placeholder function no warnings are generated or returned anywhere for now String with the parsed warning output</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::DebugImage</field>
    <field name="args">(int ID)</field>
    <field name="url">class_queued_tracker.html#a37756db08d454ad904193dd4e6f652b1</field>
    <field name="keywords">DebugImage QueuedTracker::DebugImage QueuedTracker DebugImage QueuedTracker::DebugImage QueuedTracker DebugImage QueuedTracker::DebugImage QueuedTracker</field>
    <field name="text">Get the debug image as an ImageData object Get the debug image as an ImageData object Get the debug image as an ImageData object ID Thread number from which to grab the image An ImageData instance with the debug image</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ScheduleLocalization</field>
    <field name="args">(uchar *data, int pitch, QTRK_PixelDataType pdt, uint frame, uint timestamp, vector3f *initial, uint zlutIndex)</field>
    <field name="url">class_queued_tracker.html#a43a79ee2536d7e32f2168a19fc978f14</field>
    <field name="keywords">ScheduleLocalization QueuedTracker::ScheduleLocalization QueuedTracker ScheduleLocalization QueuedTracker::ScheduleLocalization QueuedTracker ScheduleLocalization QueuedTracker::ScheduleLocalization QueuedTracker</field>
    <field name="text">Add an image to the queue to be processed Creates a job Add an image to the queue to be processed Creates a job Add an image to the queue to be processed Creates a job Creates a job and then calls ScheduleLocalization(void*, int, QTRK_PixelDataType, const LocalizationJob*) data Pointer to the data Type specified by pdt pitch Distance in bytes between two successive rows of pixels e.g address of 0 0 address of 0 1 pdt Type of data specified by QTRK_PixelDataType frame Frame number this localization belongs to timestamp Timestamp for this job initial Initial position for the algorithms requiring one If none is specified a COM track is performed to determine one zlutIndex Number of the bead Used to determine which ZLUT to use</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::UpdateZLUTs</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#ab140a55e7bb53cb4c5ad75e686d11621</field>
    <field name="keywords">UpdateZLUTs QueuedCPUTracker::UpdateZLUTs QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ImageLUTNumBeads</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#abc03e0debdfed1f1dcf17b2fe548ed55</field>
    <field name="keywords">ImageLUTNumBeads QueuedCPUTracker::ImageLUTNumBeads QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ImageLUTWidth</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a7c66d7294271781f726fc37a8778ac38</field>
    <field name="keywords">ImageLUTWidth QueuedCPUTracker::ImageLUTWidth QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ImageLUTHeight</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a2cbe22c62e73f8c14bfe8fedf679a747</field>
    <field name="keywords">ImageLUTHeight QueuedCPUTracker::ImageLUTHeight QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetImageLUTByIndex</field>
    <field name="args">(int index, int plane=0)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a93bcd0a51e3ad99eea9c1a2c89aad5ca</field>
    <field name="keywords">GetImageLUTByIndex QueuedCPUTracker::GetImageLUTByIndex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::JobFinished</field>
    <field name="args">(Job *j)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a2ac0a94b7cef62813fe1698ebc3b6a3d</field>
    <field name="keywords">JobFinished QueuedCPUTracker::JobFinished QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::GetNextJob</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a2839a72ef9815ce32465a47ca8bfd01b</field>
    <field name="keywords">GetNextJob QueuedCPUTracker::GetNextJob QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::AllocateJob</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_p_u_tracker.html#a5791133fa3b770a231d91b91d27bfed7</field>
    <field name="keywords">AllocateJob QueuedCPUTracker::AllocateJob QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::AddJob</field>
    <field name="args">(Job *j)</field>
    <field name="url">class_queued_c_p_u_tracker.html#aa71806abbaa3a586aa0be750af7514bf</field>
    <field name="keywords">AddJob QueuedCPUTracker::AddJob QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ProcessJob</field>
    <field name="args">(Thread *th, Job *j)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a3c827ffb590b8e80b7e5a585f432ace9</field>
    <field name="keywords">ProcessJob QueuedCPUTracker::ProcessJob QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::SetTrackerImage</field>
    <field name="args">(CPUTracker *trk, Job *job)</field>
    <field name="url">class_queued_c_p_u_tracker.html#a7817003628ae040aaed49716d6ad7d6c</field>
    <field name="keywords">SetTrackerImage QueuedCPUTracker::SetTrackerImage QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::ApplyOffsetGain</field>
    <field name="args">(CPUTracker *trk, int beadIndex)</field>
    <field name="url">class_queued_c_p_u_tracker.html#af20f1af3e29c62b0e16f3803b9c9ad43</field>
    <field name="keywords">ApplyOffsetGain QueuedCPUTracker::ApplyOffsetGain QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::WorkerThreadMain</field>
    <field name="args">(void *arg)</field>
    <field name="url">class_queued_c_p_u_tracker.html#ac6d5c0b441567c7da19bb864b885ecb3</field>
    <field name="keywords">WorkerThreadMain QueuedCPUTracker::WorkerThreadMain QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::localizeMode</field>
    <field name="url">class_queued_c_p_u_tracker.html#abcb3ff2900fe26e671c650670e1acb9b</field>
    <field name="keywords">localizeMode QueuedCPUTracker::localizeMode QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobs_mutex</field>
    <field name="url">class_queued_c_p_u_tracker.html#a1af90038909506f439539d181cee0365</field>
    <field name="keywords">jobs_mutex QueuedCPUTracker::jobs_mutex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobs_buffer_mutex</field>
    <field name="url">class_queued_c_p_u_tracker.html#a5866ed5cbdbadd28b238c8d1b0bc2d72</field>
    <field name="keywords">jobs_buffer_mutex QueuedCPUTracker::jobs_buffer_mutex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::results_mutex</field>
    <field name="url">class_queued_c_p_u_tracker.html#a4cf7f011a2dc9f2e3bcf08c9086eb20d</field>
    <field name="keywords">results_mutex QueuedCPUTracker::results_mutex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobs</field>
    <field name="url">class_queued_c_p_u_tracker.html#a21a1ce476dd3531d36a0b8d86b6319ed</field>
    <field name="keywords">jobs QueuedCPUTracker::jobs QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobCount</field>
    <field name="url">class_queued_c_p_u_tracker.html#adb399632cbd49cd0f38da7b8395579e7</field>
    <field name="keywords">jobCount QueuedCPUTracker::jobCount QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobs_buffer</field>
    <field name="url">class_queued_c_p_u_tracker.html#a16d824830e3e374757f1ba1f3a3899be</field>
    <field name="keywords">jobs_buffer QueuedCPUTracker::jobs_buffer QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::results</field>
    <field name="url">class_queued_c_p_u_tracker.html#ad6f5f2d749a7643b727d540a9283d68d</field>
    <field name="keywords">results QueuedCPUTracker::results QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::resultCount</field>
    <field name="url">class_queued_c_p_u_tracker.html#aa80e370d25cc7d379e29ab902a97caf5</field>
    <field name="keywords">resultCount QueuedCPUTracker::resultCount QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::maxQueueSize</field>
    <field name="url">class_queued_c_p_u_tracker.html#a0ab1a06cd49f58c5551d9327e50bb904</field>
    <field name="keywords">maxQueueSize QueuedCPUTracker::maxQueueSize QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::jobsInProgress</field>
    <field name="url">class_queued_c_p_u_tracker.html#a8436603ae463b99b2bfb1797f5a6003a</field>
    <field name="keywords">jobsInProgress QueuedCPUTracker::jobsInProgress QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::gc_mutex</field>
    <field name="url">class_queued_c_p_u_tracker.html#aa132b16144343a84589cf8b5318f07b0</field>
    <field name="keywords">gc_mutex QueuedCPUTracker::gc_mutex QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::calib_gain</field>
    <field name="url">class_queued_c_p_u_tracker.html#a5a9273673ed2fe05c97a82be8052eb7e</field>
    <field name="keywords">calib_gain QueuedCPUTracker::calib_gain QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::calib_offset</field>
    <field name="url">class_queued_c_p_u_tracker.html#a4bc0b00839380716cd7a94e8593acc90</field>
    <field name="keywords">calib_offset QueuedCPUTracker::calib_offset QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::gc_gainFactor</field>
    <field name="url">class_queued_c_p_u_tracker.html#a286e6579f5a35ad2b1b935bb473621b5</field>
    <field name="keywords">gc_gainFactor QueuedCPUTracker::gc_gainFactor QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::gc_offsetFactor</field>
    <field name="url">class_queued_c_p_u_tracker.html#a0b88b6b96bb6afa945383bf1dc2a764d</field>
    <field name="keywords">gc_offsetFactor QueuedCPUTracker::gc_offsetFactor QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::downsampleWidth</field>
    <field name="url">class_queued_c_p_u_tracker.html#a61d134a809e2c7917be42af542922870</field>
    <field name="keywords">downsampleWidth QueuedCPUTracker::downsampleWidth QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::downsampleHeight</field>
    <field name="url">class_queued_c_p_u_tracker.html#aa4819d54f418b04de8da8a14b8a9af7d</field>
    <field name="keywords">downsampleHeight QueuedCPUTracker::downsampleHeight QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::threads</field>
    <field name="url">class_queued_c_p_u_tracker.html#a27aba85759ba549ea77db9754722e318</field>
    <field name="keywords">threads QueuedCPUTracker::threads QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zluts</field>
    <field name="url">class_queued_c_p_u_tracker.html#a1bad88f56b12ea8de35879acd07f4c8e</field>
    <field name="keywords">zluts QueuedCPUTracker::zluts QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zlut_cmpprofiles</field>
    <field name="url">class_queued_c_p_u_tracker.html#af196deebd0dca3e532f248c02964c366</field>
    <field name="keywords">zlut_cmpprofiles QueuedCPUTracker::zlut_cmpprofiles QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zlut_enablecmpprof</field>
    <field name="url">class_queued_c_p_u_tracker.html#a533b617109af0be5d7b8634e947119d8</field>
    <field name="keywords">zlut_enablecmpprof QueuedCPUTracker::zlut_enablecmpprof QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zlut_count</field>
    <field name="url">class_queued_c_p_u_tracker.html#a2848d660cb1607f7bd135fd821dd8108</field>
    <field name="keywords">zlut_count QueuedCPUTracker::zlut_count QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zlut_planes</field>
    <field name="url">class_queued_c_p_u_tracker.html#a4287f68021755bcf62e4ddf9b8b48215</field>
    <field name="keywords">zlut_planes QueuedCPUTracker::zlut_planes QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zlut_buildflags</field>
    <field name="url">class_queued_c_p_u_tracker.html#a2f1c56ea335981c9a9ae0756b84931ce</field>
    <field name="keywords">zlut_buildflags QueuedCPUTracker::zlut_buildflags QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::zcmp</field>
    <field name="url">class_queued_c_p_u_tracker.html#a318963eb81d408fa2d94335448b8207c</field>
    <field name="keywords">zcmp QueuedCPUTracker::zcmp QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::qi_radialbinweights</field>
    <field name="url">class_queued_c_p_u_tracker.html#ab770ea114960e88426fa030cb93ea3c1</field>
    <field name="keywords">qi_radialbinweights QueuedCPUTracker::qi_radialbinweights QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::image_lut_dims</field>
    <field name="args">[4]</field>
    <field name="url">class_queued_c_p_u_tracker.html#a9efbfed3c81e70cb64e6e0d30d2c5b18</field>
    <field name="keywords">image_lut_dims QueuedCPUTracker::image_lut_dims QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::image_lut_nElem_per_bead</field>
    <field name="url">class_queued_c_p_u_tracker.html#ac89ec6a24b361816350966d575e0b133</field>
    <field name="keywords">image_lut_nElem_per_bead QueuedCPUTracker::image_lut_nElem_per_bead QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::image_lut</field>
    <field name="url">class_queued_c_p_u_tracker.html#af7ac0b5f68de59f97fa76a02c11763fe</field>
    <field name="keywords">image_lut QueuedCPUTracker::image_lut QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::image_lut_dz</field>
    <field name="url">class_queued_c_p_u_tracker.html#a0bc269c162625aecef4044cce5368bf5</field>
    <field name="keywords">image_lut_dz QueuedCPUTracker::image_lut_dz QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::image_lut_dz2</field>
    <field name="url">class_queued_c_p_u_tracker.html#a4d61769a342c1af2827d3ede87d5489f</field>
    <field name="keywords">image_lut_dz2 QueuedCPUTracker::image_lut_dz2 QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::quitWork</field>
    <field name="url">class_queued_c_p_u_tracker.html#ad6320a2a77d100f856df62c2dd113ef3</field>
    <field name="keywords">quitWork QueuedCPUTracker::quitWork QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::processJobs</field>
    <field name="url">class_queued_c_p_u_tracker.html#ad219fc82305fbf3678fea305f2728b24</field>
    <field name="keywords">processJobs QueuedCPUTracker::processJobs QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::dbgPrintResults</field>
    <field name="url">class_queued_c_p_u_tracker.html#aee09996116d3c5b082c03cb8e2e4d7c9</field>
    <field name="keywords">dbgPrintResults QueuedCPUTracker::dbgPrintResults QueuedCPUTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">QueuedTracker::ConfigValueMap</field>
    <field name="url">class_queued_tracker.html#af6073682cd9e87e6f3e84f93cf9be373</field>
    <field name="keywords">ConfigValueMap QueuedTracker::ConfigValueMap QueuedTracker ConfigValueMap QueuedTracker::ConfigValueMap QueuedTracker ConfigValueMap QueuedTracker::ConfigValueMap QueuedTracker</field>
    <field name="text">Datastructure used to return additional settings in a string-string key-value pair mapping Datastructure used to return additional settings in a string-string key-value pair mapping Datastructure used to return additional settings in a string-string key-value pair mapping Currently only two settings are available use_texturecache for CUDA and trace for CPU</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedTracker::cfg</field>
    <field name="url">class_queued_tracker.html#afb847e7f49e0af6027d58af51d5914dc</field>
    <field name="keywords">cfg QueuedTracker::cfg QueuedTracker cfg QueuedTracker::cfg QueuedTracker cfg QueuedTracker::cfg QueuedTracker</field>
    <field name="text">The settings used by this instance of QueuedTracker The settings used by this instance of QueuedTracker The settings used by this instance of QueuedTracker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">QueuedCPUTracker.cpp</field>
    <field name="url">_queued_c_p_u_tracker_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">jobs_mutex jobs_buffer_mutex results_mutex std::string folder GetCurrentOutputPath GetFileAttributesA folder c_str FILE_ATTRIBUTE_DIRECTORY CreateDirectory LPCTSTR folder c_str NULL cfg cc quitWork cfg numThreads cfg numThreads Threads::GetCPUCount dbgprintf cfg numThreads maxQueueSize std::max cfg numThreads jobCount resultCount zlut_cmpprofiles zlut_enablecmpprof zluts zlut_count zlut_planes processJobs jobsInProgress dbgPrintResults qi_radialbinweights ComputeRadialBinWindow cfg qi_radialsteps calib_gain calib_offset gc_gainFactor gc_offsetFactor f localizeMode LT_OnlyCOM i i i image_lut_dims i image_lut_nElem_per_bead image_lut image_lut_dz image_lut_dz2 downsampleWidth cfg width cfg downsample downsampleHeight cfg height cfg downsample Start quitWork k k threads size k threads k mutex Threads::WaitAndClose threads k thread threads k tracker DeleteAllElems jobs DeleteAllElems jobs_buffer calib_gain calib_offset zluts zluts zlut_cmpprofiles zlut_cmpprofiles image_lut image_lut image_lut_dz image_lut_dz image_lut_dz2 image_lut_dz2 jobs_mutex lock jobs push_back j jobCount jobs_mutex unlock QueuedCPUTracker::Job j jobs_buffer_mutex lock jobs_buffer empty j jobs_buffer back jobs_buffer pop_back j Job jobs_buffer_mutex unlock j calib_offset calib_gain index cfg width cfg height beadIndex gf of trk ApplyOffsetGain calib_offset calib_offset index calib_gain calib_gain index of gf zlut_buildflags flags processJobs brk parallel_for zlut_count i CPUTracker trk cfg width cfg height img_data uchar data pitch cfg height i if pdt QTrkFloat trk SetImage img_data pitch pdt QTrkU8 trk SetImage8Bit uchar img_data pitch trk SetImage16Bit ushort img_data pitch ApplyOffsetGain trk i vector2f pos known_pos pos known_pos i vector2f com trk ComputeMeanAndCOM bhit pos trk ComputeQI com cfg qi_iterations cfg qi_radialsteps cfg qi_angstepspq cfg qi_angstep_factor cfg qi_minradius cfg qi_maxradius bhit zlut_buildflags BUILDLUT_IMAGELUT h ImageLUTHeight w ImageLUTWidth lut_dst image_lut i image_lut_nElem_per_bead w h plane vector2f ilut_scale startx pos x w ilut_scale x starty pos y h ilut_scale y y y h y x x w x px startx x ilut_scale x py starty y ilut_scale y outside v Interpolate trk srcImage trk width trk height px py outside lut_dst y w x v trk mean bead_zlut GetZLUTByIndex i tmp cfg zlut_radialsteps zlut_buildflags BUILDLUT_FOURIER trk FourierRadialProfile tmp cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius plane i i trk width trk height i trk srcImage i sqrtf trk srcImage i trk SaveImage trk ComputeRadialProfile tmp cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius pos i i cfg zlut_radialsteps i bead_zlut plane cfg zlut_radialsteps i tmp i tmp results_mutex lock resultCount results clear results_mutex unlock zlut_enablecmpprof enabled numResults results_mutex lock numResults maxResults results empty dstResults numResults results back results pop_back resultCount results_mutex unlock numResults zluts i i zlut_count zlut_planes i NormalizeRadialProfile zluts cfg zlut_radialsteps i cfg zlut_radialsteps w ImageLUTWidth h ImageLUTHeight w h image_lut_dz image_lut_nElem_per_bead ImageLUTNumBeads image_lut_dz2 image_lut_nElem_per_bead ImageLUTNumBeads i i image_lut_dims i z z image_lut_dims z img image_lut image_lut_nElem_per_bead i w h z imgL image_lut image_lut_nElem_per_bead i w h z imgU image_lut image_lut_nElem_per_bead i w h z img_dz image_lut_dz image_lut_nElem_per_bead i w h z img_dz2 image_lut_dz2 image_lut_nElem_per_bead i w h z y y h y x x w x h f img_dz y w x f imgU y w x imgL y w x h img_dz2 y w x imgU y w x img y w x imgL y w x h h k k w h k image_lut_dz image_lut_nElem_per_bead i w h k image_lut_dz image_lut_nElem_per_bead i w h k image_lut_dz image_lut_nElem_per_bead i w h image_lut_dims k image_lut_dz image_lut_nElem_per_bead i w h image_lut_dims k image_lut_dz2 image_lut_nElem_per_bead i w h k image_lut_dz2 image_lut_nElem_per_bead i w h k image_lut_dz2 image_lut_nElem_per_bead i w h image_lut_dims k image_lut_dz2 image_lut_nElem_per_bead i w h image_lut_dims k ImageData img dst cfg width cfg height img xp yp z photoncount ConfigValueMap cvm cvm dbgPrintResults cvm threads size threads id lock w cfg width h cfg height data cfg width cfg height memcpy data threads tracker GetDebugImage float cfg width cfg height threads id unlock image_lut memcpy dst image_lut image_lut_nElem_per_bead image_lut_dims i i i dims i image_lut_dims i QueuedCPUTracker::Job j jobs_mutex lock jobs empty j jobs front jobs pop_front jobCount jobsInProgress jobs_mutex unlock j jc jobs_mutex lock jc jobCount jobsInProgress jobs_mutex unlock maxQueueLength maxQueueLength maxQueueSize jc nElem zlut_planes cfg zlut_radialsteps zlut_count nElem results_mutex lock memcpy zlut zluts nElem results_mutex unlock zlut_cmpprofiles i i zlut_count zlut_planes i dst i zlut_cmpprofiles i count zlut_count planes zlut_planes rsteps cfg zlut_radialsteps results_mutex lock rc resultCount results_mutex unlock rc GetQueueLength jobs_buffer_mutex lock jobs_buffer push_back j jobs_buffer_mutex unlock jobs_mutex lock jobsInProgress jobs_mutex unlock CPUTracker trk th tracker th lock SetTrackerImage trk j localizeMode LT_ClearFirstFourPixels trk srcImage trk srcImage trk srcImage trk srcImage ApplyOffsetGain trk j job zlutIndex LocalizationResult result result job j job vector2f com trk ComputeMeanAndCOM cfg com_bgcorrection result imageMean trk mean _isnan com x _isnan com y com vector2f cfg width cfg height boundaryHit localizeMode LT_XCor1D result firstGuess com vector2f resultPos trk ComputeXCorInterpolated com cfg xc1_iterations cfg xc1_profileWidth boundaryHit result pos x resultPos x result pos y resultPos y localizeMode LT_QI result firstGuess com vector2f resultPos trk ComputeQI com cfg qi_iterations cfg qi_radialsteps cfg qi_angstepspq cfg qi_angstep_factor cfg qi_minradius cfg qi_maxradius boundaryHit qi_radialbinweights result pos x resultPos x result pos y resultPos y localizeMode LT_Gaussian2D result firstGuess com CPUTracker::Gauss2DResult gr trk Compute2DGaussianMLE com cfg gauss2D_iterations cfg gauss2D_sigma vector2f xy gr pos result pos vector3f xy x xy y f result firstGuess x result pos x com x result firstGuess y result pos y com y normalizeProfile localizeMode LT_NormalizeProfile localizeMode LT_LocalizeZ prof ALLOCA_ARRAY cfg zlut_radialsteps i i localizeMode LT_ZLUTAlign i localizeMode LT_FourierLUT trk FourierRadialProfile prof cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius trk ComputeRadialProfile prof cfg zlut_radialsteps cfg zlut_angularsteps cfg zlut_minradius cfg zlut_maxradius result pos2D boundaryHit normalizeProfile cmpprof zlut_enablecmpprof cmpprof zlut_cmpprofiles j job zlutIndex zlut_planes i result pos trk QuadrantAlign result pos j job zlutIndex cfg qi_angstepspq boundaryHit result pos z trk LUTProfileCompare prof j job zlutIndex cmpprof CPUTracker::LUTProfMaxQuadraticFit j job frame localizeMode LT_LocalizeZWeighted result pos z trk LUTProfileCompareAdjustedWeights prof j job zlutIndex result pos z zlut_bias_correction result pos z ZLUTBiasCorrection result pos z zlut_planes j job zlutIndex dbgPrintResults dbgprintf result job frame result job zlutIndex result pos x result pos y result pos z th unlock result error boundaryHit results_mutex lock results push_back result resultCount results_mutex unlock processJobs maxQueueSize GetQueueLength maxQueueSize Threads::Sleep Job j AllocateJob dstPitch PDT_BytesPerPixel pdt cfg width j data j dataType pdt j data j data j data uchar dstPitch cfg height y y cfg height y memcpy j data dstPitch y uchar data pitch y dstPitch j dataType pdt j job jobInfo AddJob j name dbgPrintResults atoi value c_str image_lut image_lut image_lut i i i image_lut_dims i dims i image_lut_nElem_per_bead dims dims dims image_lut_nElem_per_bead dims image_lut image_lut_nElem_per_bead image_lut_dims memset image_lut image_lut_nElem_per_bead image_lut_dims src memcpy image_lut src image_lut_nElem_per_bead image_lut_dims SetRadialZLUT radial_lut dims dims IsIdle localizeMode lt gc_mutex lock gc_gainFactor gainFactor gc_offsetFactor offsetFactor gc_mutex unlock zlut_count nelem cfg width cfg height zlut_count calib_gain gain calib_gain nelem memcpy calib_gain gain nelem calib_gain gain calib_gain calib_gain calib_offset offset calib_offset nelem memcpy calib_offset offset nelem calib_offset offset calib_offset calib_offset std::string path GetLocalModulePath i i zlut_count i calib_gain FloatToJPEGFile SPrintf path c_str i c_str calib_gain cfg width cfg height i cfg width cfg height calib_offset FloatToJPEGFile SPrintf path c_str i c_str calib_offset cfg width cfg height i cfg width cfg height rweights zcmp assign rweights rweights cfg zlut_radialsteps zcmp clear i i threads size i threads i lock threads i tracker SetRadialWeights rweights threads i unlock zlut_bias_correction zlut_bias_correction zluts zluts res cfg zlut_radialsteps total num_zluts res planes total zluts planes res num_zluts std::fill zluts zluts planes res num_zluts f zlut_planes planes zlut_count num_zluts data std::copy data data planes res num_zluts zluts zluts zlut_cmpprofiles zlut_cmpprofiles zlut_cmpprofiles num_zluts planes UpdateZLUTs j dataType QTrkU8 trk SetImage8Bit j data cfg width j dataType QTrkU16 trk SetImage16Bit ushort j data cfg width trk SetImageFloat j data quitWork threads resize cfg numThreads k k cfg numThreads k threads k mutex Threads::Mutex threads k mutex name SPrintf k threads k mutex trace threads k tracker CPUTracker downsampleWidth downsampleHeight cfg xc1_profileLength threads k manager threads k tracker trackerID k k k threads size k threads k thread Threads::Create WorkerThreadMain threads k Threads::SetBackgroundPriority threads k thread processJobs i i threads size i threads i lock threads i tracker SetRadialZLUT zluts zlut_planes cfg zlut_radialsteps zlut_count cfg zlut_minradius cfg zlut_maxradius threads i unlock Thread th Thread arg QueuedCPUTracker this_ th manager this_ quitWork Job j this_ processJobs j this_ GetNextJob j this_ ProcessJob th j this_ JobFinished j Threads::Sleep zluts threads lock CPUTracker trk threads tracker ii ii zlut_count ii curZLUT GetZLUTByIndex ii plane plane zlut_planes plane cmpprof zlut_planes trk LUTProfileCompare curZLUT plane cfg zlut_radialsteps ii cmpprof CPUTracker::LUTProfMaxQuadraticFit WriteArrayAsCSVRow cmpprof zlut_planes cmpprof threads unlock</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QueuedCPUTracker::Job</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html</field>
    <field name="keywords">Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Job::Job</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html#af39f6d5c21358f011ba123edab56bdde</field>
    <field name="keywords">Job QueuedCPUTracker::Job::Job QueuedCPUTracker::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Job::~Job</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html#ae866edd05cae4d56049867d0e9f856ec</field>
    <field name="keywords">QueuedCPUTracker::Job::~Job QueuedCPUTracker::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Job::data</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html#aedeb45b47439a1e2196d9b918a2319ae</field>
    <field name="keywords">data QueuedCPUTracker::Job::data QueuedCPUTracker::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Job::dataType</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html#a157a2f8c4d4c9d9cc1ae4c5e3d509fb6</field>
    <field name="keywords">dataType QueuedCPUTracker::Job::dataType QueuedCPUTracker::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Job::job</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_job.html#a39a2b1088501b80d12ff323981ec7bad</field>
    <field name="keywords">job QueuedCPUTracker::Job::job QueuedCPUTracker::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QueuedCPUTracker::Thread</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html</field>
    <field name="keywords">Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Thread::Thread</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#ac61c1194e3b4dde0661c240078985bba</field>
    <field name="keywords">Thread QueuedCPUTracker::Thread::Thread QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Thread::lock</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#ae44d1dc88e1458d8fab64e1930a4a052</field>
    <field name="keywords">lock QueuedCPUTracker::Thread::lock QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCPUTracker::Thread::unlock</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#af68d2a3c9c4b9a9eb7368c40baa12e96</field>
    <field name="keywords">unlock QueuedCPUTracker::Thread::unlock QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Thread::tracker</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#a03a8b50f8a9667f41a4eb72754ec2a69</field>
    <field name="keywords">tracker QueuedCPUTracker::Thread::tracker QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Thread::thread</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#a57d33b7cdece9a412b3baa33481645d1</field>
    <field name="keywords">thread QueuedCPUTracker::Thread::thread QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Thread::manager</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#a0b9c0c09951de89994083affe46fda48</field>
    <field name="keywords">manager QueuedCPUTracker::Thread::manager QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCPUTracker::Thread::mutex</field>
    <field name="url">struct_queued_c_p_u_tracker_1_1_thread.html#a230c0eecf62744fe0fe2b9892412a122</field>
    <field name="keywords">mutex QueuedCPUTracker::Thread::mutex QueuedCPUTracker::Thread</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">QueuedCUDATracker</field>
    <field name="url">class_queued_c_u_d_a_tracker.html</field>
    <field name="keywords">QueuedCUDATracker</field>
    <field name="text">CUDA implementation of the QueuedTracker interface</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">QueuedCUDATracker::ImageLUT</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ab96308f9c1c47ab60b3a7e8da3e4c104</field>
    <field name="keywords">ImageLUT QueuedCUDATracker::ImageLUT QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::QueuedCUDATracker</field>
    <field name="args">(const QTrkComputedConfig &amp;cc, int batchSize=-1)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a1e6e7939fc282165efd3adb6ace86ef3</field>
    <field name="keywords">QueuedCUDATracker QueuedCUDATracker::QueuedCUDATracker QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::~QueuedCUDATracker</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a0f7eaa0256e08ffae8b2af55685ce285</field>
    <field name="keywords">QueuedCUDATracker::~QueuedCUDATracker QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::EnableTextureCache</field>
    <field name="args">(bool useTextureCache)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ab6bc66ca515095c58e92db3a426f3cc3</field>
    <field name="keywords">EnableTextureCache QueuedCUDATracker::EnableTextureCache QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetLocalizationMode</field>
    <field name="args">(LocMode_t locType) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#aed4058f411c99625b9c06ce13d4aabc6</field>
    <field name="keywords">SetLocalizationMode QueuedCUDATracker::SetLocalizationMode QueuedCUDATracker</field>
    <field name="text">Select which algorithm is to be used locType An integer used as a bitmask for settings based on LocalizeModeEnum</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::ScheduleLocalization</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a8a038919d270228922e31f375c17cbbe</field>
    <field name="keywords">ScheduleLocalization QueuedCUDATracker::ScheduleLocalization QueuedCUDATracker</field>
    <field name="text">Add a job to the queue to be processed A job entails running the required algorithms on a single region of interest data Pointer to the data Type specified by pdt pitch Distance in bytes between two successive rows of pixels e.g address of 0 0 address of 0 1 pdt Type of data specified by QTRK_PixelDataType jobInfo Structure with metadata for the ROI to be handled See LocalizationJob</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::ClearResults</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a41b207c9abf386f57ab9f99994e92b4c</field>
    <field name="keywords">ClearResults QueuedCUDATracker::ClearResults QueuedCUDATracker</field>
    <field name="text">Clear results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetRadialZLUT</field>
    <field name="args">(float *data, int numLUTs, int planes) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a2681f4f94ca93970322bafa58b1dd9bd</field>
    <field name="keywords">SetRadialZLUT QueuedCUDATracker::SetRadialZLUT QueuedCUDATracker</field>
    <field name="text">Set the radial lookup tables to be used for z tracking Data can be zero to allocate ZLUT data LUTs should have been created before by BuildLUT but not necessarily by the current instance as long as setting match data Pointer to the start of the ZLUT data count Number of ZLUTs in the dataset planes Number of planes per ZLUT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetRadialWeights</field>
    <field name="args">(float *zcmp) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a41d97b792daafdc6e7a76af383429f48</field>
    <field name="keywords">SetRadialWeights QueuedCUDATracker::SetRadialWeights QueuedCUDATracker</field>
    <field name="text">Set radial weights used for comparing LUT profiles zcmp Array of radial weights to use zcmp has to have zlut_radialsteps elements</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetRadialZLUT</field>
    <field name="args">(float *data) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a1298fa3749c2ffaf7e48370ca15e3beb</field>
    <field name="keywords">GetRadialZLUT QueuedCUDATracker::GetRadialZLUT QueuedCUDATracker</field>
    <field name="text">Get the radial lookup tables used for z tracking dst Pointer to the pre-allocated memory in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetRadialZLUTSize</field>
    <field name="args">(int &amp;count, int &amp;planes, int &amp;radialSteps) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a4af9b4b3778d9cb13823fe486db23ab9</field>
    <field name="keywords">GetRadialZLUTSize QueuedCUDATracker::GetRadialZLUTSize QueuedCUDATracker</field>
    <field name="text">Get the dimensions of the radial lookup table data count Reference to pre-allocated int Returns number of lookup tables planes Reference to pre-allocated int Returns number of planes per lookup table radialsteps Reference to pre-allocated int Returns number of steps per plane</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::FetchResults</field>
    <field name="args">(LocalizationResult *results, int maxResults) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#acc1a34b83a9f7cc84ede58ce7eaec45e</field>
    <field name="keywords">FetchResults QueuedCUDATracker::FetchResults QueuedCUDATracker</field>
    <field name="text">Fetch available results Removes results from internal QueuedTracker memory results Array of pre-allocated LocalizationResult to which to add the results maxResults Maximum number of results to fetch Corresponds to maximum size of dstResult Number of fetched results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::BeginLUT</field>
    <field name="args">(uint flags) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ac6a9934c5a2bd06ecb503abace83c222</field>
    <field name="keywords">BeginLUT QueuedCUDATracker::BeginLUT QueuedCUDATracker</field>
    <field name="text">Setup to begin building a lookup table Sets the flags by which the lookup table is built Flags are defined in a uint bitmask format as Name Value Description 0 Default no special flags BUILDLUT_IMAGELUT 1 2^0 Build an image LUT BUILDLUT_FOURIER 2 2^1 Build a fourier LUT BUILDLUT_NORMALIZE 4 2^2 Normalize radial profiles Irrelevant since FinalizeLUT always normalizes BUILDLUT_BIASCORRECT 8 2^3 Enable bias correction Currently only partly implemented don t use flags UINT interpreted as a series of bits to set settings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::BuildLUT</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, int plane, vector2f *known_pos=0) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a16da9256e496b6689079330a062c7529</field>
    <field name="keywords">BuildLUT QueuedCUDATracker::BuildLUT QueuedCUDATracker</field>
    <field name="text">Add a new lookup table plane Takes a stack of ROI images through data Determines and adds the profile for each ROI to its respective LUT data Pointer to the start of an image stack pitch Width of the data in memory so offsets can be calculated pdt Pixel data type for the data See QTRK_PixelDataType plane The plane number the ROIs are taken for known_pos Center position from which to start making the radial profile A standard QI localization with applied settings is performed if 0 default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::FinalizeLUT</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a628a79df6cce9a1df9a4da78da266578</field>
    <field name="keywords">FinalizeLUT QueuedCUDATracker::FinalizeLUT QueuedCUDATracker</field>
    <field name="text">Finalize the lookup tables in memory Normalizes the profiles for radial lookup tables and calculates derivates and adds boundary conditions for image LUTs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::EnableRadialZLUTCompareProfile</field>
    <field name="args">(bool enabled)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#aa8b23ddd77fd1826fbcf5c2d58135f13</field>
    <field name="keywords">EnableRadialZLUTCompareProfile QueuedCUDATracker::EnableRadialZLUTCompareProfile QueuedCUDATracker</field>
    <field name="text">Set a flag to enable saving of error curves Errors obtained by comparing a radial profile to a ZLUT will be kept in memory rather than destroyed Only saves for one localization Error curve can be retreived by GetRadialZLUTCompareProfile Not implemented for CUDA enabled Flag boolean to save error curves Default is false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetRadialZLUTCompareProfile</field>
    <field name="args">(float *dst)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a1d75d74655c9da2a9cb305f95944b1e3</field>
    <field name="keywords">GetRadialZLUTCompareProfile QueuedCUDATracker::GetRadialZLUTCompareProfile QueuedCUDATracker</field>
    <field name="text">Get saved error curve See EnableRadialZLUTCompareProfile Not implemented for CUDA dst Pointer to the pre-allocated memory in which to save the error curve Size is count planes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetProfileReport</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a8969dbbc3824ca4ccb492e8eecbd6632</field>
    <field name="keywords">GetProfileReport QueuedCUDATracker::GetProfileReport QueuedCUDATracker</field>
    <field name="text">Get the output of performance profiling Only implemented in CUDA at the moment String with the parsed profiling output</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Flush</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a4407b12d3fc2e2969840ccc233ec96bc</field>
    <field name="keywords">Flush QueuedCUDATracker::Flush QueuedCUDATracker</field>
    <field name="text">Stop waiting for more jobs to do and just process the current batch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetQueueLength</field>
    <field name="args">(int *maxQueueLen) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#acd209a7709c4776a585af6bd24768b13</field>
    <field name="keywords">GetQueueLength QueuedCUDATracker::GetQueueLength QueuedCUDATracker</field>
    <field name="text">Get the lengths of the queue of jobs to be handled maxQueueLen Pre-allocated integer that returns the maximum size of the queue if nonzero Number of jobs currently being handled and in the queue</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::IsIdle</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a147dbe75048a901f137e130ac61a6f7b</field>
    <field name="keywords">IsIdle QueuedCUDATracker::IsIdle QueuedCUDATracker</field>
    <field name="text">Test to see if the tracker is idle That is GetQueueLength 0 Boolean indicating if the tracker is idle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetResultCount</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#aeb508df96e1cbcfaf8f0bf330e01d35c</field>
    <field name="keywords">GetResultCount QueuedCUDATracker::GetResultCount QueuedCUDATracker</field>
    <field name="text">Get the number of finished localization jobs results available in memory The number of available results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetPixelCalibrationImages</field>
    <field name="args">(float *offset, float *gain) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a95264d01570acfdfd75977b06eaa0fcc</field>
    <field name="keywords">SetPixelCalibrationImages QueuedCUDATracker::SetPixelCalibrationImages QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetPixelCalibrationFactors</field>
    <field name="args">(float offsetFactor, float gainFactor) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a59468e8c37b6bdfb2374f9db78060c0d</field>
    <field name="keywords">SetPixelCalibrationFactors QueuedCUDATracker::SetPixelCalibrationFactors QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetConfigValues</field>
    <field name="args">() override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a16a5fb006a594f950484df6a9d1cfd2f</field>
    <field name="keywords">GetConfigValues QueuedCUDATracker::GetConfigValues QueuedCUDATracker</field>
    <field name="text">Get the used additional configurations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SetConfigValue</field>
    <field name="args">(std::string name, std::string value) override</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#abbdfa55593327bd9a26cf4ac313239ec</field>
    <field name="keywords">SetConfigValue QueuedCUDATracker::SetConfigValue QueuedCUDATracker</field>
    <field name="text">Set an additional setting name Name of the setting value Value of the setting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetImageZLUTSize</field>
    <field name="args">(int *dims)</field>
    <field name="url">class_queued_tracker.html#a29cd6f896d8bcdd93ee4a54bb7823f97</field>
    <field name="keywords">GetImageZLUTSize QueuedTracker::GetImageZLUTSize QueuedTracker GetImageZLUTSize QueuedTracker::GetImageZLUTSize QueuedTracker</field>
    <field name="text">Get the dimensions of the image lookup table data Get the dimensions of the image lookup table data Use of image LUT is currently not clear Radial ZLUT is always used dims Reference to pre-allocated int array Returns count planes height width</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetImageZLUT</field>
    <field name="args">(float *dst)</field>
    <field name="url">class_queued_tracker.html#af7d71b3673778f83f6494328182519ad</field>
    <field name="keywords">GetImageZLUT QueuedTracker::GetImageZLUT QueuedTracker GetImageZLUT QueuedTracker::GetImageZLUT QueuedTracker</field>
    <field name="text">Get the image lookup tables used Get the image lookup tables used Use of image LUT is currently not clear Radial ZLUT is always used dst Pointer to the pre-allocated memory in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetImageZLUT</field>
    <field name="args">(float *src, float *radial_zlut, int *dims)</field>
    <field name="url">class_queued_tracker.html#abd440db1fddc0715bd41b90f1d169ee6</field>
    <field name="keywords">SetImageZLUT QueuedTracker::SetImageZLUT QueuedTracker SetImageZLUT QueuedTracker::SetImageZLUT QueuedTracker</field>
    <field name="text">Set the image lookup tables to be used for z tracking Set the image lookup tables to be used for z tracking Use of image LUT is currently not clear Radial ZLUT is always used src Pointer to the data for the image LUT radial_zlut Pointer to the data for the radial LUT dims Array of dimension sizes for the image LUT See GetImageZLUTSize</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetDebugImage</field>
    <field name="args">(int ID, int *w, int *h, float **pData)</field>
    <field name="url">class_queued_tracker.html#aeae109b520ca5b15e008030edfc179c4</field>
    <field name="keywords">GetDebugImage QueuedTracker::GetDebugImage QueuedTracker GetDebugImage QueuedTracker::GetDebugImage QueuedTracker</field>
    <field name="text">Get the debug image for a specific thread Get the debug image for a specific thread Debug image can be set in trackers by copying data into debugImage for instance pData has to be cleared with delete in the calling function! ID Thread number from which to grab the image w Pointer to an integer in which the image width will be stored h Pointer to an integer in which the image height will be stored pData Reference to where the data array will be saved Boolean indicating if the debug image was succesfully returned</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::time</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a6557b929cd8bd14618787c6a90671cc0</field>
    <field name="keywords">time QueuedCUDATracker::time QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::cpu_time</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ae8b2eeef65a2a1acde697df6c206ae08</field>
    <field name="keywords">cpu_time QueuedCUDATracker::cpu_time QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::batchesDone</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a6c9bf05a64537e9a978d9e7a71bb20fb</field>
    <field name="keywords">batchesDone QueuedCUDATracker::batchesDone QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::deviceReport</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#af28a9fc89bcd9634e81b3fc404809aaf</field>
    <field name="keywords">deviceReport QueuedCUDATracker::deviceReport QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::blocks</field>
    <field name="args">(int workItems)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a4ad02fd62376586e7026f723447d5d61</field>
    <field name="keywords">blocks QueuedCUDATracker::blocks QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::blocks</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a935e85ca846ef768ffeca1ff4a23ab21</field>
    <field name="keywords">blocks QueuedCUDATracker::blocks QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::threads</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ae88c5554dba8227967f4a600ff7fab84</field>
    <field name="keywords">threads QueuedCUDATracker::threads QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SchedulingThreadMain</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ac52125061a2b042a6c149156977b8474</field>
    <field name="keywords">SchedulingThreadMain QueuedCUDATracker::SchedulingThreadMain QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::ExecuteBatch</field>
    <field name="args">(Stream *s)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a66c822d85cceb3b20793a9f5be76aae0</field>
    <field name="keywords">ExecuteBatch QueuedCUDATracker::ExecuteBatch QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::GetReadyStream</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a31ec528bdf605169edb8bb27c5e6bbfc</field>
    <field name="keywords">GetReadyStream QueuedCUDATracker::GetReadyStream QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::InitializeDeviceList</field>
    <field name="args">()</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ae7806b9e8d79fb4add720019ed4e72ed</field>
    <field name="keywords">InitializeDeviceList QueuedCUDATracker::InitializeDeviceList QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::CreateStream</field>
    <field name="args">(Device *device, int streamIndex)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a6d4cd925c04dbf04b1eaad291f6218d2</field>
    <field name="keywords">CreateStream QueuedCUDATracker::CreateStream QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::CopyStreamResults</field>
    <field name="args">(Stream *s)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a03544a8c3c5bf7b55dd55393532c5b0d</field>
    <field name="keywords">CopyStreamResults QueuedCUDATracker::CopyStreamResults QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::StreamUpdateZLUTSize</field>
    <field name="args">(Stream *s)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ab1feeeb058f9652ef11053958f01062f</field>
    <field name="keywords">StreamUpdateZLUTSize QueuedCUDATracker::StreamUpdateZLUTSize QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::CPU_ApplyOffsetGain</field>
    <field name="args">(CPUTracker *trk, int beadIndex)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a7c53f54a55fde1ad9181d907f10de1d2</field>
    <field name="keywords">CPU_ApplyOffsetGain QueuedCUDATracker::CPU_ApplyOffsetGain QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::SchedulingThreadEntryPoint</field>
    <field name="args">(void *param)</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a16da3da0346279b6a2dd4276eb15a25b</field>
    <field name="keywords">SchedulingThreadEntryPoint QueuedCUDATracker::SchedulingThreadEntryPoint QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::numThreads</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a1bbaf466f197bd745411786578b743bc</field>
    <field name="keywords">numThreads QueuedCUDATracker::numThreads QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::batchSize</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a19a027c0cc319821c25de1cb23e14a17</field>
    <field name="keywords">batchSize QueuedCUDATracker::batchSize QueuedCUDATracker</field>
    <field name="text">Amount of images to be sent at once per stream Higher batchsize higher speeds Reason why it s faster More threads blocks are created allowing more efficient memory latency hiding by warp switching or in other words higher occupancy is achieved Bigger batches are copied at a time achieving higher effective PCIe bus bandwidth</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::streams</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a06cc0da8192d0f8ff5d9edcad1158f58</field>
    <field name="keywords">streams QueuedCUDATracker::streams QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::results</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#af29d9427d57a9041fbc581d6e8b0efbf</field>
    <field name="keywords">results QueuedCUDATracker::results QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::resultCount</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#abdb0a310718f7f1c8a47cf9a3f22728d</field>
    <field name="keywords">resultCount QueuedCUDATracker::resultCount QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::localizeMode</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ae113cc3fb5f12dfadd172ebc5dd20f1a</field>
    <field name="keywords">localizeMode QueuedCUDATracker::localizeMode QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::resultMutex</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ab6bcec14cabbc64d9d96ce0641f5034f</field>
    <field name="keywords">resultMutex QueuedCUDATracker::resultMutex QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::jobQueueMutex</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a57c66fb35caade90cadedd575d7b6c81</field>
    <field name="keywords">jobQueueMutex QueuedCUDATracker::jobQueueMutex QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::devices</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a333972a0b3e1c98a02e9aab716ef535b</field>
    <field name="keywords">devices QueuedCUDATracker::devices QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::useTextureCache</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a1351abd5ca987de1b8663a919e511134</field>
    <field name="keywords">useTextureCache QueuedCUDATracker::useTextureCache QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::gc_offsetFactor</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a84b6dcf09baa64ba031f7a5a4304d592</field>
    <field name="keywords">gc_offsetFactor QueuedCUDATracker::gc_offsetFactor QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::gc_gainFactor</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#adba93271c22f7e6800f49ab93ec07c71</field>
    <field name="keywords">gc_gainFactor QueuedCUDATracker::gc_gainFactor QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::gc_mutex</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#aea7843385e4604dc38a6f1fc7b4f2811</field>
    <field name="keywords">gc_mutex QueuedCUDATracker::gc_mutex QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::gc_offset</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#ae7be3e341a4086a64581d5429afd546d</field>
    <field name="keywords">gc_offset QueuedCUDATracker::gc_offset QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::gc_gain</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a86866ae12a13f953194b0c5398c5c0d8</field>
    <field name="keywords">gc_gain QueuedCUDATracker::gc_gain QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::zlut_build_flags</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a7842914186ce30357a10595f79ef3244</field>
    <field name="keywords">zlut_build_flags QueuedCUDATracker::zlut_build_flags QueuedCUDATracker</field>
    <field name="text">cpu size buffers are needed because BuildLUT uses CPU tracking</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::qi</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a885a0274a85bd6cddbb93d0c3a3cb422</field>
    <field name="keywords">qi QueuedCUDATracker::qi QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::qalign</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a4ad3ddecc21aa3c9b7a706bd18364f7d</field>
    <field name="keywords">qalign QueuedCUDATracker::qalign QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::deviceProp</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a60ba8b15a56739a7a26a538d23b7ec92</field>
    <field name="keywords">deviceProp QueuedCUDATracker::deviceProp QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::schedulingThread</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a419b8e04e631f1711fdfad84943df22c</field>
    <field name="keywords">schedulingThread QueuedCUDATracker::schedulingThread QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::quitScheduler</field>
    <field name="url">class_queued_c_u_d_a_tracker.html#a277551e623212420a3c18dec6662c626</field>
    <field name="keywords">quitScheduler QueuedCUDATracker::quitScheduler QueuedCUDATracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QueuedCUDATracker::Device</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html</field>
    <field name="keywords">Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Device::Device</field>
    <field name="args">(int index)</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a2f469c266e353b76379b233d3c6b8975</field>
    <field name="keywords">Device QueuedCUDATracker::Device::Device QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Device::~Device</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a6948e83cf8c2613db74fd6655dea9260</field>
    <field name="keywords">QueuedCUDATracker::Device::~Device QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Device::SetRadialZLUT</field>
    <field name="args">(float *data, int radialsteps, int planes, int numLUTs)</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#ab0aa256972dee41b7c7f0ed71bf038b1</field>
    <field name="keywords">SetRadialZLUT QueuedCUDATracker::Device::SetRadialZLUT QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Device::SetPixelCalibrationImages</field>
    <field name="args">(float *offset, float *gain, int img_width, int img_height)</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#af39911fe630e90540daf52911e170367</field>
    <field name="keywords">SetPixelCalibrationImages QueuedCUDATracker::Device::SetPixelCalibrationImages QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Device::SetRadialWeights</field>
    <field name="args">(float *zcmp)</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a0a65205b772af5dd99151769865c2395</field>
    <field name="keywords">SetRadialWeights QueuedCUDATracker::Device::SetRadialWeights QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::radial_zlut</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a930b4affeadfa6517df189cde0cdce2b</field>
    <field name="keywords">radial_zlut QueuedCUDATracker::Device::radial_zlut QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::calib_offset</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#aaa9650a1dc174ac8b565a31c5245de13</field>
    <field name="keywords">calib_offset QueuedCUDATracker::Device::calib_offset QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::calib_gain</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a9e3b020795c8c39a9a9400b11dcf1f6c</field>
    <field name="keywords">calib_gain QueuedCUDATracker::Device::calib_gain QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::zcompareWindow</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a7113ca292baf28726c03abaf93b2127d</field>
    <field name="keywords">zcompareWindow QueuedCUDATracker::Device::zcompareWindow QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::qi_instance</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a13a1b79fb477d17f94ef8b911b14d066</field>
    <field name="keywords">qi_instance QueuedCUDATracker::Device::qi_instance QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::qalign_instance</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a228b16792c301dc97510624ccdd18b01</field>
    <field name="keywords">qalign_instance QueuedCUDATracker::Device::qalign_instance QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::zlut_trigtable</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#aad5b6289612d3e8a24ed0558562a3bca</field>
    <field name="keywords">zlut_trigtable QueuedCUDATracker::Device::zlut_trigtable QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Device::index</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_device.html#a4e5ef8ff6e97b1f1b875ccbda3ca9bbb</field>
    <field name="keywords">index QueuedCUDATracker::Device::index QueuedCUDATracker::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html</field>
    <field name="keywords">KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::KernelProfileTime</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a1a07dbca36d95a1627ea510bbabcb6c2</field>
    <field name="keywords">KernelProfileTime QueuedCUDATracker::KernelProfileTime::KernelProfileTime QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::com</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a9f9415edf045228fd79007621df104c1</field>
    <field name="keywords">com QueuedCUDATracker::KernelProfileTime::com QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::qi</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#af6247f72c0dea94c0a3edbb373476741</field>
    <field name="keywords">qi QueuedCUDATracker::KernelProfileTime::qi QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::imageCopy</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a04abd82cbcc70357b2a2901f490a1662</field>
    <field name="keywords">imageCopy QueuedCUDATracker::KernelProfileTime::imageCopy QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::zcompute</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a45f6db270eccf8e2c8653b6cd05c7339</field>
    <field name="keywords">zcompute QueuedCUDATracker::KernelProfileTime::zcompute QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::zlutAlign</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a140d7024006f4957e23b2cb85cba0edc</field>
    <field name="keywords">zlutAlign QueuedCUDATracker::KernelProfileTime::zlutAlign QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::KernelProfileTime::getResults</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_kernel_profile_time.html#a82d70a87770af92a63fd0b414d3ec2af</field>
    <field name="keywords">getResults QueuedCUDATracker::KernelProfileTime::getResults QueuedCUDATracker::KernelProfileTime</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">QueuedCUDATracker::Stream</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html</field>
    <field name="keywords">Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">QueuedCUDATracker::Stream::State</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a836e14e096ea57bd153e812ce1e0a1f2</field>
    <field name="keywords">State QueuedCUDATracker::Stream::State QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QueuedCUDATracker::Stream::StreamIdle</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a836e14e096ea57bd153e812ce1e0a1f2a016601712772605b4535e857fddbab0f</field>
    <field name="keywords">StreamIdle QueuedCUDATracker::Stream::StreamIdle QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QueuedCUDATracker::Stream::StreamPendingExec</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a836e14e096ea57bd153e812ce1e0a1f2a871a26b9ee42c5b70b5d3d90b8fc35c4</field>
    <field name="keywords">StreamPendingExec QueuedCUDATracker::Stream::StreamPendingExec QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">QueuedCUDATracker::Stream::StreamExecuting</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a836e14e096ea57bd153e812ce1e0a1f2a62c88c473a98aed73b5fdf061753c63a</field>
    <field name="keywords">StreamExecuting QueuedCUDATracker::Stream::StreamExecuting QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Stream::Stream</field>
    <field name="args">(int streamIndex)</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a2c2931936619d274f8b5b9176ab81c63</field>
    <field name="keywords">Stream QueuedCUDATracker::Stream::Stream QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Stream::~Stream</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ade688123c51556e0567b807bbd908000</field>
    <field name="keywords">QueuedCUDATracker::Stream::~Stream QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Stream::IsExecutionDone</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ac6ba04f617190c414e44c7ec7e8fa700</field>
    <field name="keywords">IsExecutionDone QueuedCUDATracker::Stream::IsExecutionDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Stream::OutputMemoryUse</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#aa86b9870b3eebae2b7518cac62c410ad</field>
    <field name="keywords">OutputMemoryUse QueuedCUDATracker::Stream::OutputMemoryUse QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedCUDATracker::Stream::JobCount</field>
    <field name="args">()</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a3102e3a6fae6fb4d3f515e0f592422cd</field>
    <field name="keywords">JobCount QueuedCUDATracker::Stream::JobCount QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::results</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ab9e7576fe16b9a1f6f24b126bf3a59b3</field>
    <field name="keywords">results QueuedCUDATracker::Stream::results QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::com</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a58594660a26d40c9f5aa81684c247cba</field>
    <field name="keywords">com QueuedCUDATracker::Stream::com QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::imgMeans</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a6e7f0634fe87266d8dd9256746553e8c</field>
    <field name="keywords">imgMeans QueuedCUDATracker::Stream::imgMeans QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::locParams</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a2dd71f898a23fc752d4f4db4c4525412</field>
    <field name="keywords">locParams QueuedCUDATracker::Stream::locParams QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_locParams</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a8dabea26c7edb25a6153e124ee93c0be</field>
    <field name="keywords">d_locParams QueuedCUDATracker::Stream::d_locParams QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::jobs</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ad0df16e9e337079195c343a5ae3b9680</field>
    <field name="keywords">jobs QueuedCUDATracker::Stream::jobs QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::images</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#afde3d4a29b1e6d8074acb7115aee3ee0</field>
    <field name="keywords">images QueuedCUDATracker::Stream::images QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::hostImageBuf</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a407663bf0a868f738c9a1d210858b41b</field>
    <field name="keywords">hostImageBuf QueuedCUDATracker::Stream::hostImageBuf QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::imageBufMutex</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a0365860faedfefd642a608292f43775e</field>
    <field name="keywords">imageBufMutex QueuedCUDATracker::Stream::imageBufMutex QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::stream</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#af5b983f7fe37fab223588226b8cee4f3</field>
    <field name="keywords">stream QueuedCUDATracker::Stream::stream QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::localizationDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ad478bc8507024424451506aa1b28108a</field>
    <field name="keywords">localizationDone QueuedCUDATracker::Stream::localizationDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::imageCopyDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#aca5f13276c563f05d5bf931de3fadc37</field>
    <field name="keywords">imageCopyDone QueuedCUDATracker::Stream::imageCopyDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::comDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a00f82cbaf986970a7a37ab1b667f9d70</field>
    <field name="keywords">comDone QueuedCUDATracker::Stream::comDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::qiDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a3bf78dd2104f2b82ecd8f1bc6697c818</field>
    <field name="keywords">qiDone QueuedCUDATracker::Stream::qiDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::qalignDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#acfa8afce2f50edaab1379f929f250533</field>
    <field name="keywords">qalignDone QueuedCUDATracker::Stream::qalignDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::zcomputeDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#aa61e1ea38a74c9bd32435bd1ba0eb4d4</field>
    <field name="keywords">zcomputeDone QueuedCUDATracker::Stream::zcomputeDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::imapDone</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a0a1e98ff17e435f2a4febdef69481cd0</field>
    <field name="keywords">imapDone QueuedCUDATracker::Stream::imapDone QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::batchStart</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ae3b2a9742d05cd5fc60233c8db8e0230</field>
    <field name="keywords">batchStart QueuedCUDATracker::Stream::batchStart QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_resultpos</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a1dc9a73b31e5bcef0003932f6ca84a65</field>
    <field name="keywords">d_resultpos QueuedCUDATracker::Stream::d_resultpos QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_com</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#aed4fcb91ae993d720cbb4662afa4f644</field>
    <field name="keywords">d_com QueuedCUDATracker::Stream::d_com QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::qi_instance</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a16cdaac6b5c2739e950d7255fe5aa1a2</field>
    <field name="keywords">qi_instance QueuedCUDATracker::Stream::qi_instance QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::qalign_instance</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a72be2c83d41fce0530463c07bf37e853</field>
    <field name="keywords">qalign_instance QueuedCUDATracker::Stream::qalign_instance QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_imgmeans</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a70ec8174f1c4c547c6c8b315c70a5514</field>
    <field name="keywords">d_imgmeans QueuedCUDATracker::Stream::d_imgmeans QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_radialprofiles</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a16050b06d8a08c292fc06c292efa8a16</field>
    <field name="keywords">d_radialprofiles QueuedCUDATracker::Stream::d_radialprofiles QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::d_zlutcmpscores</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#af740f229b42580b873f59ad5cd0b641a</field>
    <field name="keywords">d_zlutcmpscores QueuedCUDATracker::Stream::d_zlutcmpscores QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::localizeFlags</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a70663b3059a1d37466919dfa495c8f62</field>
    <field name="keywords">localizeFlags QueuedCUDATracker::Stream::localizeFlags QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::device</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#a91f103ae49b436de6aab96d34d7d0204</field>
    <field name="keywords">device QueuedCUDATracker::Stream::device QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">QueuedCUDATracker::Stream::state</field>
    <field name="url">struct_queued_c_u_d_a_tracker_1_1_stream.html#ab609f91457378960151e374bd3d4f8c2</field>
    <field name="keywords">state QueuedCUDATracker::Stream::state QueuedCUDATracker::Stream</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">QueuedTracker</field>
    <field name="url">class_queued_tracker.html</field>
    <field name="keywords">QueuedTracker</field>
    <field name="text">Abstract tracker interface implemented by QueuedCUDATracker and QueuedCPUTracker</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetLocalizationMode</field>
    <field name="args">(LocMode_t locType)=0</field>
    <field name="url">class_queued_tracker.html#aed430b5578d7a3e75f4d4d6c6dbb7e45</field>
    <field name="keywords">SetLocalizationMode QueuedTracker::SetLocalizationMode QueuedTracker</field>
    <field name="text">Select which algorithm is to be used locType An integer used as a bitmask for settings based on LocalizeModeEnum</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetPixelCalibrationImages</field>
    <field name="args">(float *offset, float *gain)=0</field>
    <field name="url">class_queued_tracker.html#ae1fa56f8629d8d4ad621889fbd9e4a46</field>
    <field name="keywords">SetPixelCalibrationImages QueuedTracker::SetPixelCalibrationImages QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetPixelCalibrationFactors</field>
    <field name="args">(float offsetFactor, float gainFactor)=0</field>
    <field name="url">class_queued_tracker.html#ab9dd540b5c8452718944b47520fda402</field>
    <field name="keywords">SetPixelCalibrationFactors QueuedTracker::SetPixelCalibrationFactors QueuedTracker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ScheduleLocalization</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, const LocalizationJob *jobInfo)=0</field>
    <field name="url">class_queued_tracker.html#a233dffd15fe3cef8a53c698bba9befb4</field>
    <field name="keywords">ScheduleLocalization QueuedTracker::ScheduleLocalization QueuedTracker</field>
    <field name="text">Add a job to the queue to be processed A job entails running the required algorithms on a single region of interest data Pointer to the data Type specified by pdt pitch Distance in bytes between two successive rows of pixels e.g address of 0 0 address of 0 1 pdt Type of data specified by QTRK_PixelDataType jobInfo Structure with metadata for the ROI to be handled See LocalizationJob</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::ClearResults</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#a5e46c8ce4bd3b965bedd8aac095304c2</field>
    <field name="keywords">ClearResults QueuedTracker::ClearResults QueuedTracker</field>
    <field name="text">Clear results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::Flush</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#a97cf826c17ab9b3e55d8ecd513d58098</field>
    <field name="keywords">Flush QueuedTracker::Flush QueuedTracker</field>
    <field name="text">Stop waiting for more jobs to do and just process the current batch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetRadialZLUT</field>
    <field name="args">(float *data, int count, int planes)=0</field>
    <field name="url">class_queued_tracker.html#a77c3d8414993d2aa3ddfca4c8b40e71d</field>
    <field name="keywords">SetRadialZLUT QueuedTracker::SetRadialZLUT QueuedTracker</field>
    <field name="text">Set the radial lookup tables to be used for z tracking Data can be zero to allocate ZLUT data LUTs should have been created before by BuildLUT but not necessarily by the current instance as long as setting match data Pointer to the start of the ZLUT data count Number of ZLUTs in the dataset planes Number of planes per ZLUT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetRadialZLUT</field>
    <field name="args">(float *dst)=0</field>
    <field name="url">class_queued_tracker.html#a7e92adfa46401d802eaff7687e43dad7</field>
    <field name="keywords">GetRadialZLUT QueuedTracker::GetRadialZLUT QueuedTracker</field>
    <field name="text">Get the radial lookup tables used for z tracking dst Pointer to the pre-allocated memory in which to save the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetRadialZLUTSize</field>
    <field name="args">(int &amp;count, int &amp;planes, int &amp;radialsteps)=0</field>
    <field name="url">class_queued_tracker.html#a95e19cdbbaa59eb676a24aaf95058b27</field>
    <field name="keywords">GetRadialZLUTSize QueuedTracker::GetRadialZLUTSize QueuedTracker</field>
    <field name="text">Get the dimensions of the radial lookup table data count Reference to pre-allocated int Returns number of lookup tables planes Reference to pre-allocated int Returns number of planes per lookup table radialsteps Reference to pre-allocated int Returns number of steps per plane</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetRadialWeights</field>
    <field name="args">(float *zcmp)=0</field>
    <field name="url">class_queued_tracker.html#aaf4a1a0f17e2df7bc6dded2729d920f4</field>
    <field name="keywords">SetRadialWeights QueuedTracker::SetRadialWeights QueuedTracker</field>
    <field name="text">Set radial weights used for comparing LUT profiles zcmp Array of radial weights to use zcmp has to have zlut_radialsteps elements</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::EnableRadialZLUTCompareProfile</field>
    <field name="args">(bool enabled)=0</field>
    <field name="url">class_queued_tracker.html#a53791fa740351a32ff707be9688aa99d</field>
    <field name="keywords">EnableRadialZLUTCompareProfile QueuedTracker::EnableRadialZLUTCompareProfile QueuedTracker</field>
    <field name="text">Set a flag to enable saving of error curves Errors obtained by comparing a radial profile to a ZLUT will be kept in memory rather than destroyed Only saves for one localization Error curve can be retreived by GetRadialZLUTCompareProfile Not implemented for CUDA enabled Flag boolean to save error curves Default is false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetRadialZLUTCompareProfile</field>
    <field name="args">(float *dst)=0</field>
    <field name="url">class_queued_tracker.html#ae6cc12f988a4f99d03a9783b4f978e7e</field>
    <field name="keywords">GetRadialZLUTCompareProfile QueuedTracker::GetRadialZLUTCompareProfile QueuedTracker</field>
    <field name="text">Get saved error curve See EnableRadialZLUTCompareProfile Not implemented for CUDA dst Pointer to the pre-allocated memory in which to save the error curve Size is count planes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::BeginLUT</field>
    <field name="args">(uint flags)=0</field>
    <field name="url">class_queued_tracker.html#aee4863d19778314cd30499cb85bd5251</field>
    <field name="keywords">BeginLUT QueuedTracker::BeginLUT QueuedTracker</field>
    <field name="text">Setup to begin building a lookup table Sets the flags by which the lookup table is built Flags are defined in a uint bitmask format as Name Value Description 0 Default no special flags BUILDLUT_IMAGELUT 1 2^0 Build an image LUT BUILDLUT_FOURIER 2 2^1 Build a fourier LUT BUILDLUT_NORMALIZE 4 2^2 Normalize radial profiles Irrelevant since FinalizeLUT always normalizes BUILDLUT_BIASCORRECT 8 2^3 Enable bias correction Currently only partly implemented don t use flags UINT interpreted as a series of bits to set settings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::BuildLUT</field>
    <field name="args">(void *data, int pitch, QTRK_PixelDataType pdt, int plane, vector2f *known_pos=0)=0</field>
    <field name="url">class_queued_tracker.html#aaeb04a5a2a4fe47ef48b8aefabc1bdb7</field>
    <field name="keywords">BuildLUT QueuedTracker::BuildLUT QueuedTracker</field>
    <field name="text">Add a new lookup table plane Takes a stack of ROI images through data Determines and adds the profile for each ROI to its respective LUT data Pointer to the start of an image stack pitch Width of the data in memory so offsets can be calculated pdt Pixel data type for the data See QTRK_PixelDataType plane The plane number the ROIs are taken for known_pos Center position from which to start making the radial profile A standard QI localization with applied settings is performed if 0 default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::FinalizeLUT</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#aa856650c99d15216ad3246d3485b9d9e</field>
    <field name="keywords">FinalizeLUT QueuedTracker::FinalizeLUT QueuedTracker</field>
    <field name="text">Finalize the lookup tables in memory Normalizes the profiles for radial lookup tables and calculates derivates and adds boundary conditions for image LUTs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetResultCount</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#a362a26027dc6bd40864e59de1ac32de2</field>
    <field name="keywords">GetResultCount QueuedTracker::GetResultCount QueuedTracker</field>
    <field name="text">Get the number of finished localization jobs results available in memory The number of available results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::FetchResults</field>
    <field name="args">(LocalizationResult *results, int maxResults)=0</field>
    <field name="url">class_queued_tracker.html#a171688832558d40838790c90ba9f8fc0</field>
    <field name="keywords">FetchResults QueuedTracker::FetchResults QueuedTracker</field>
    <field name="text">Fetch available results Removes results from internal QueuedTracker memory results Array of pre-allocated LocalizationResult to which to add the results maxResults Maximum number of results to fetch Corresponds to maximum size of dstResult Number of fetched results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetQueueLength</field>
    <field name="args">(int *maxQueueLen=0)=0</field>
    <field name="url">class_queued_tracker.html#a7109701fb33a1eb1f4a5512205cb7bde</field>
    <field name="keywords">GetQueueLength QueuedTracker::GetQueueLength QueuedTracker</field>
    <field name="text">Get the lengths of the queue of jobs to be handled maxQueueLen Pre-allocated integer that returns the maximum size of the queue if nonzero Number of jobs currently being handled and in the queue</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::IsIdle</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#a8b879a9359f4e2081e69b0932f8e9908</field>
    <field name="keywords">IsIdle QueuedTracker::IsIdle QueuedTracker</field>
    <field name="text">Test to see if the tracker is idle That is GetQueueLength 0 Boolean indicating if the tracker is idle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetConfigValues</field>
    <field name="args">()=0</field>
    <field name="url">class_queued_tracker.html#afdb95cbf31f14716b3872e15a2319d62</field>
    <field name="keywords">GetConfigValues QueuedTracker::GetConfigValues QueuedTracker</field>
    <field name="text">Get the used additional configurations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::SetConfigValue</field>
    <field name="args">(std::string name, std::string value)=0</field>
    <field name="url">class_queued_tracker.html#a0d96ad4feea320c3ba90d196b4690d3b</field>
    <field name="keywords">SetConfigValue QueuedTracker::SetConfigValue QueuedTracker</field>
    <field name="text">Set an additional setting name Name of the setting value Value of the setting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">QueuedTracker::GetProfileReport</field>
    <field name="args">()</field>
    <field name="url">class_queued_tracker.html#afb595aa118f6cd87b4502d2cdfe53215</field>
    <field name="keywords">GetProfileReport QueuedTracker::GetProfileReport QueuedTracker</field>
    <field name="text">Get the output of performance profiling Only implemented in CUDA at the moment String with the parsed profiling output</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ResultFile</field>
    <field name="url">class_result_file.html</field>
    <field name="keywords">ResultFile</field>
    <field name="text">Placeholder Abstract template for an output file Used to generalize output to different types of datafiles Implemented by TextResultFile and BinaryResultFile Actually make the implementation Rewrite resultmanager to use these classes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultFile::LoadRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)=0</field>
    <field name="url">class_result_file.html#aeeb1227765bbf018ffe648b14c8b606e</field>
    <field name="keywords">LoadRow ResultFile::LoadRow ResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultFile::SaveRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)=0</field>
    <field name="url">class_result_file.html#ab9f7315f014b72d11c80f28e41f4671c</field>
    <field name="keywords">SaveRow ResultFile::SaveRow ResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ResultManager</field>
    <field name="url">class_result_manager.html</field>
    <field name="keywords">ResultManager</field>
    <field name="text">Class that handles data gathering and saving from QueuedTracker instances Creates a separate thread to check a linked QTrk instance for new data Gathers data and saves to the disk at regular intervals Mutexes used to ensure thread safety Results from QueuedTracker are sorted as frame bead to enable saving data on a frame-per-line basis</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::ResultManager</field>
    <field name="args">(const char *outfile, const char *frameinfo, ResultManagerConfig *cfg, std::vector&lt; std::string &gt; colnames)</field>
    <field name="url">class_result_manager.html#a44c51e60829a40eb9d12d50dd7157cff</field>
    <field name="keywords">ResultManager ResultManager::ResultManager ResultManager</field>
    <field name="text">Create an instance of ResultManager outfile String char array with full path and filename of desired output file for data frameinfo String char array with full path and filename of desired output file for frame metadata cfg Pointer to structure ResultManagerConfig with settings to use colnames Vector of names for the columns in the frame info file Size must equal ResultManagerConfig::numFrameInfoColumns Only used for binary files</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::~ResultManager</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#ab74fc12f867b0e890d2aec3e0a935293</field>
    <field name="keywords">ResultManager::~ResultManager ResultManager</field>
    <field name="text">Destroy an instance of ResultManager Sets a flag to stop the thread and frees all results from memory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::SaveSection</field>
    <field name="args">(int start, int end, const char *beadposfile, const char *infofile)</field>
    <field name="url">class_result_manager.html#ab744ccc8dd33fc3b1880bd24e3981fcc</field>
    <field name="keywords">SaveSection ResultManager::SaveSection ResultManager</field>
    <field name="text">Save an interval of frames to a file Unimplemented start Framenumber of the start of the interval to save end Framenumber of the end of the interval to save beadposfile String char array with full path and filename of desired output file for data infofile String char array with full path and filename of desired output file for frame metadata</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::SetTracker</field>
    <field name="args">(QueuedTracker *qtrk)</field>
    <field name="url">class_result_manager.html#a415bd4a67729b4347866be136dd413b5</field>
    <field name="keywords">SetTracker ResultManager::SetTracker ResultManager</field>
    <field name="text">Set the tracker from which to fetch results qtrk Pointer to the QueuedTracker instance to fetch results from</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::GetTracker</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#aafc624688ed2b4ef158299935ba3f043</field>
    <field name="keywords">GetTracker ResultManager::GetTracker ResultManager</field>
    <field name="text">Get the tracker from which results are fetched Pointer to the current QueuedTracker instance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::GetBeadPositions</field>
    <field name="args">(int startFrame, int endFrame, int bead, LocalizationResult *r)</field>
    <field name="url">class_result_manager.html#aa258efc5ddd5e737fd6a00bf3372dd81</field>
    <field name="keywords">GetBeadPositions ResultManager::GetBeadPositions ResultManager</field>
    <field name="text">Get the positions of a single bead over an interval of frames startFrame Framenumber of the start of the interval to save endFrame Framenumber of the end of the interval to save bead Beadnumber of the bead for which the results are requested r Array of LocalizationResult in which to store the data Has to be initialized before calling this function Size has to be equal to endFrame startFrame Number of results obtained</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::GetResults</field>
    <field name="args">(LocalizationResult *results, int startFrame, int numResults)</field>
    <field name="url">class_result_manager.html#a8baf4f5befea704f8e63ef24af2b7c2f</field>
    <field name="keywords">GetResults ResultManager::GetResults ResultManager</field>
    <field name="text">Get the positions of all beads over an interval of frames startFrame Framenumber of the start of the interval to save numResults Number of frames to save results Array of LocalizationResult in which to store the data Has to be initialized before calling this function Size has to be equal to numResults Number of results obtained</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::Flush</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#af33fd9c1dda86151405a08d826320794</field>
    <field name="keywords">Flush ResultManager::Flush ResultManager</field>
    <field name="text">Write all available data regardless of ResultManagerConfig::writeInterval Use to write unsaved frames from memory when no new ones are expected anymore Writes all leftover data after waiting for the linked QueuedTracker to finish its queued localizations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::GetFrameCounters</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#af0e807e271c8626bcc1a01c498e2ad38</field>
    <field name="keywords">GetFrameCounters ResultManager::GetFrameCounters ResultManager</field>
    <field name="text">Returns a FrameCounters structure with the current counts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::StoreFrameInfo</field>
    <field name="args">(int frame, double timestamp, float *columns)</field>
    <field name="url">class_result_manager.html#a0bbedc935395c1af29f175f81ab063c9</field>
    <field name="keywords">StoreFrameInfo ResultManager::StoreFrameInfo ResultManager</field>
    <field name="text">Store metadata for a frame This data will be saved in the info file frame Frame number for which to store the data timestamp Timestamp for the frame columns Array of float values for the metadata columns Size must equal ResultManagerConfig::numFrameInfoColumns</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::GetFrameCount</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#a473002eab88049c663eab8c97cbf2d34</field>
    <field name="keywords">GetFrameCount ResultManager::GetFrameCount ResultManager</field>
    <field name="text">Returns the number of captured frames Number of captured frames</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::RemoveBeadResults</field>
    <field name="args">(int bead)</field>
    <field name="url">class_result_manager.html#aaa749abf3e879376677dc051745ed665</field>
    <field name="keywords">RemoveBeadResults ResultManager::RemoveBeadResults ResultManager</field>
    <field name="text">Remove all results of a certain bead Currently only removes from memory bead The index of the bead for which to remove the data We need to modify the saved data file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::Config</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#a6a54dc8335c40471d40312f383df178c</field>
    <field name="keywords">Config ResultManager::Config ResultManager</field>
    <field name="text">Returns a reference to the used configuration to review The ResultManagerConfig structure used for this instance of ResultManager Read-only</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::CheckResultSpace</field>
    <field name="args">(int fr)</field>
    <field name="url">class_result_manager.html#ad274290b02aabcaae7cb1052f8aaad14</field>
    <field name="keywords">CheckResultSpace ResultManager::CheckResultSpace ResultManager</field>
    <field name="text">Checks if a frame index is valid Frame index is valid if within bounds of the current frames allowed in memory Initializes the required FrameResult to store data for the frame fr if it is valid fr Frame index to be checked True Index is fine New FrameResult initialized and added to results vector False Index is invalid Can t process this frame index</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::Write</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#a6a43d521555ef47d76c8a7e9bb8ff87e</field>
    <field name="keywords">Write ResultManager::Write ResultManager</field>
    <field name="text">Write available results to output files Chooses between WriteBinaryResults and WriteTextResults depending on settings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::WriteBinaryResults</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#aafdacba27b69bef50732f72053d21845</field>
    <field name="keywords">WriteBinaryResults ResultManager::WriteBinaryResults ResultManager</field>
    <field name="text">Write available data to a binary file Does not update frame counters Use Write and proper settings instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::WriteTextResults</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#a8e0e6fb46d3d512b11663e1f4c7af5f1</field>
    <field name="keywords">WriteTextResults ResultManager::WriteTextResults ResultManager</field>
    <field name="text">Write available data to a text file Does not update frame counters Use Write and proper settings instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::StoreResult</field>
    <field name="args">(LocalizationResult *r)</field>
    <field name="url">class_result_manager.html#aef219e3b0da98522795633ed3e38180c</field>
    <field name="keywords">StoreResult ResultManager::StoreResult ResultManager</field>
    <field name="text">Copies results from QueuedTracker to internal data structures Adds a result to the pre-allocated memory of frame results so it can later be saved on a per-frame basis Results are changed from pixel to physical values here using input given on initialization through ResultManagerConfig r A pointer to a LocalizationResult of a single localization</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::Update</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#a96d36b8b947374edf13ede8e12822f10</field>
    <field name="keywords">Update ResultManager::Update ResultManager</field>
    <field name="text">General worker function called from ThreadLoop Fetches results from QueuedTracker FetchResults sorts them StoreResult and saves them if needed Write</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::WriteBinaryFileHeader</field>
    <field name="args">()</field>
    <field name="url">class_result_manager.html#ad67d6303de94c15cbb8de23cf1837270</field>
    <field name="keywords">WriteBinaryFileHeader ResultManager::WriteBinaryFileHeader ResultManager</field>
    <field name="text">Writes metadata to the header of a binary data file The saved header for file version 3 is Name Description Size bytes version Binary file version 4 int numBead Number of beads in the file 4 int numFrameInfoColumns Number of metadata columns 4 int data_offset File offset to starting point of frame data 8 long frameInfoNames The names/identifiers for the metadata columns variable numFrameInfoColumns strings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::ThreadLoop</field>
    <field name="args">(void *param)</field>
    <field name="url">class_result_manager.html#a0aff477d777703dd9f1e01ba0bd6f2d8</field>
    <field name="keywords">ThreadLoop ResultManager::ThreadLoop ResultManager</field>
    <field name="text">The base loop of the gathering and saving thread Called when initialization is done param Pointer to the instance of ResultManager to work for</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::resultMutex</field>
    <field name="url">class_result_manager.html#a736af7b3783f456fb05aa011bafc5bde</field>
    <field name="keywords">resultMutex ResultManager::resultMutex ResultManager</field>
    <field name="text">Mutex to govern access to frameResults</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::trackerMutex</field>
    <field name="url">class_result_manager.html#ab8b3508ac87e3990b0b6a70c9031719d</field>
    <field name="keywords">trackerMutex ResultManager::trackerMutex ResultManager</field>
    <field name="text">Mutex to govern access to the linked QueuedTracker instance</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::frameInfoNames</field>
    <field name="url">class_result_manager.html#a13591c71dc8de59c119c3a26de681e21</field>
    <field name="keywords">frameInfoNames ResultManager::frameInfoNames ResultManager</field>
    <field name="text">Vector with frame info column names See WriteBinaryFileHeader</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::frameResults</field>
    <field name="url">class_result_manager.html#a2b7ba6801c7d9cfff0b4f8ee5ffc7569</field>
    <field name="keywords">frameResults ResultManager::frameResults ResultManager</field>
    <field name="text">Vector to hold the results for all frames</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::cnt</field>
    <field name="url">class_result_manager.html#ad5f8491ff6c6f2e1e78f04c537c9474d</field>
    <field name="keywords">cnt ResultManager::cnt ResultManager</field>
    <field name="text">Local instance of FrameCounters to maintain counts accross functions</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::config</field>
    <field name="url">class_result_manager.html#a23c07e2966ffb6b48c5c043418b4c748</field>
    <field name="keywords">config ResultManager::config ResultManager</field>
    <field name="text">Local instance of ResultManagerConfig with the settings used by this instance of ResultManager</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::resultFile</field>
    <field name="url">class_result_manager.html#a886e75626ba90bb4aff4dcf661733b30</field>
    <field name="keywords">resultFile ResultManager::resultFile ResultManager</field>
    <field name="text">Local instance of ResultFile to generalize output to text or binary files Not used</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::qtrk</field>
    <field name="url">class_result_manager.html#a782d776e818e9be737c418d2151402ed</field>
    <field name="keywords">qtrk ResultManager::qtrk ResultManager</field>
    <field name="text">Pointer to the QueuedTracker instance to check</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::outputFile</field>
    <field name="url">class_result_manager.html#aa882de00c45911638edda0705fb54f36</field>
    <field name="keywords">outputFile ResultManager::outputFile ResultManager</field>
    <field name="text">Path and filename of the main data output file</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::frameInfoFile</field>
    <field name="url">class_result_manager.html#a204b1725be212dbad21eea374420270f</field>
    <field name="keywords">frameInfoFile ResultManager::frameInfoFile ResultManager</field>
    <field name="text">Path and filename of the frame info metadata file</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::thread</field>
    <field name="url">class_result_manager.html#ab3ef361e61d16ef54726cd7b78f03cd5</field>
    <field name="keywords">thread ResultManager::thread ResultManager</field>
    <field name="text">Handle to the thread running the ThreadLoop</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::quit</field>
    <field name="url">class_result_manager.html#a2e8af4e9f24aff29025adb24032d788e</field>
    <field name="keywords">quit ResultManager::quit ResultManager</field>
    <field name="text">Flag to exit the threads</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ResultManager::FrameCounters</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html</field>
    <field name="keywords">FrameCounters</field>
    <field name="text">Structure to keep track of frame counts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::FrameCounters::FrameCounters</field>
    <field name="args">()</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a1297cf822a66ec485d2cc70ec801098a</field>
    <field name="keywords">FrameCounters ResultManager::FrameCounters::FrameCounters ResultManager::FrameCounters</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::startFrame</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a91cdacd9e2418fc49cdebabc171a1aa6</field>
    <field name="keywords">startFrame ResultManager::FrameCounters::startFrame ResultManager::FrameCounters</field>
    <field name="text">Index of the first frame for which results are available</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::processedFrames</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a9170beb3735c4d08f00050377eeebef5</field>
    <field name="keywords">processedFrames ResultManager::FrameCounters::processedFrames ResultManager::FrameCounters</field>
    <field name="text">Number of frames processed by the ResultManager</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::lastSaveFrame</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a529d0916bd3925ce9b60de516875ae2e</field>
    <field name="keywords">lastSaveFrame ResultManager::FrameCounters::lastSaveFrame ResultManager::FrameCounters</field>
    <field name="text">Index of the last frame saved to the output file</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::capturedFrames</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#ae9b12ed92f9c0a9e72a51beaf9cca61f</field>
    <field name="keywords">capturedFrames ResultManager::FrameCounters::capturedFrames ResultManager::FrameCounters</field>
    <field name="text">Number of frames captured Counted through calls to StoreFrameInfo</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::localizationsDone</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a9ab895a45863f01089a4fa47629e3998</field>
    <field name="keywords">localizationsDone ResultManager::FrameCounters::localizationsDone ResultManager::FrameCounters</field>
    <field name="text">Amount of localizations finished by the linked QueuedTracker instance</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::lostFrames</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a843774dd839c1edc8c0245b830b9f469</field>
    <field name="keywords">lostFrames ResultManager::FrameCounters::lostFrames ResultManager::FrameCounters</field>
    <field name="text">Number of frames deleted from memory before results were finished and/or saved</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameCounters::fileError</field>
    <field name="url">struct_result_manager_1_1_frame_counters.html#a524c00c33ddf14ff4f3e467f4daaf7f8</field>
    <field name="keywords">fileError ResultManager::FrameCounters::fileError ResultManager::FrameCounters</field>
    <field name="text">Count of reported errors while handling output files Currently only counts on error when opening binary files</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ResultManager::FrameResult</field>
    <field name="url">struct_result_manager_1_1_frame_result.html</field>
    <field name="keywords">FrameResult</field>
    <field name="text">Structure to save all bead results of a single frame in memory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ResultManager::FrameResult::FrameResult</field>
    <field name="args">(int nResult, int nFrameInfo)</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#a2d8d206f9a774cd500cb3a3c5301b0e6</field>
    <field name="keywords">FrameResult ResultManager::FrameResult::FrameResult ResultManager::FrameResult</field>
    <field name="text">Initialize a new frame nResult Number of beads in the frame Used to initialize results vector nFrameInfo Number of frame info columns Used to initialize frameInfo vector</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameResult::results</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#a090e9b69a382702cb7d551566d3bee76</field>
    <field name="keywords">results ResultManager::FrameResult::results ResultManager::FrameResult</field>
    <field name="text">Vector of LocalizationResult To be filled with tracking results</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameResult::frameInfo</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#a8ad3ac9ceb60b928bffae4e978b87eb0</field>
    <field name="keywords">frameInfo ResultManager::FrameResult::frameInfo ResultManager::FrameResult</field>
    <field name="text">Vector of frame info values To be filled through StoreFrameInfo</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameResult::count</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#a0f8a4a4c5ba0eb70faa74b2074d1d7d1</field>
    <field name="keywords">count ResultManager::FrameResult::count ResultManager::FrameResult</field>
    <field name="text">Number of completed localizations for this frame</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameResult::timestamp</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#a6ed8062b8120c1bb853f6d14d8b904e7</field>
    <field name="keywords">timestamp ResultManager::FrameResult::timestamp ResultManager::FrameResult</field>
    <field name="text">Timestamp at which the frame was taken Set through StoreFrameInfo</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManager::FrameResult::hasFrameInfo</field>
    <field name="url">struct_result_manager_1_1_frame_result.html#ac2f96ff6a7017bd7dd4a6e9ab14dbd0b</field>
    <field name="keywords">hasFrameInfo ResultManager::FrameResult::hasFrameInfo ResultManager::FrameResult</field>
    <field name="text">Flag boolean indicating whether frame info columns exist</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ResultManagerConfig</field>
    <field name="url">struct_result_manager_config.html</field>
    <field name="keywords">ResultManagerConfig</field>
    <field name="text">Structure for settings used by ResultManager Compiled without padding to line up with LabVIEW alignment Changing this requires changing of the linked LabVIEW cluster QTrkSettings.ctl</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::numBeads</field>
    <field name="url">struct_result_manager_config.html#a790ecadd32a0c0242cb002752af806af</field>
    <field name="keywords">numBeads ResultManagerConfig::numBeads ResultManagerConfig</field>
    <field name="text">Number of beads for which to grab results Should always equal the amount of beads in a single frame</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::numFrameInfoColumns</field>
    <field name="url">struct_result_manager_config.html#a97e9e26724a91e3a6757957f18b8f8b7</field>
    <field name="keywords">numFrameInfoColumns ResultManagerConfig::numFrameInfoColumns ResultManagerConfig</field>
    <field name="text">Number of columns in the frame info metadata file Additional columns can be added to save more data on a per-frame basis</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::scaling</field>
    <field name="url">struct_result_manager_config.html#abb553f047043e2bd16b27ba6221f358e</field>
    <field name="keywords">scaling ResultManagerConfig::scaling ResultManagerConfig</field>
    <field name="text">Scaling factor for each of the three dimensions Used to calculate from pixel/plane output from QueuedTracker to physical values Output will be position offset scaling</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::offset</field>
    <field name="url">struct_result_manager_config.html#ac7b28e680c90bc2a882a6e064d919a40</field>
    <field name="keywords">offset ResultManagerConfig::offset ResultManagerConfig</field>
    <field name="text">Offset value for each of the three dimensions Used to calculate from pixel/plane output from QueuedTracker to physical values Output will be position offset scaling</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::writeInterval</field>
    <field name="url">struct_result_manager_config.html#a24c57e2403e5012fc5900924db770611</field>
    <field name="keywords">writeInterval ResultManagerConfig::writeInterval ResultManagerConfig</field>
    <field name="text">Interval of number of gathered frames at which to write the data</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::maxFramesInMemory</field>
    <field name="url">struct_result_manager_config.html#a11b7dd434bb6477aad45198b76593f59</field>
    <field name="keywords">maxFramesInMemory ResultManagerConfig::maxFramesInMemory ResultManagerConfig</field>
    <field name="text">Number of frames for which to keep the data in memory 0 for infinite</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ResultManagerConfig::binaryOutput</field>
    <field name="url">struct_result_manager_config.html#a292ca1e5db1a9599d5dc52e14e83c2eb</field>
    <field name="keywords">binaryOutput ResultManagerConfig::binaryOutput ResultManagerConfig</field>
    <field name="text">Flag boolean to output a binary file instead of a text file</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ROIPosition</field>
    <field name="url">struct_r_o_i_position.html</field>
    <field name="keywords">ROIPosition</field>
    <field name="text">Struct used to define the top-left corner position of an ROI within a frame ROI is x x+w y y+h</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ROIPosition::x</field>
    <field name="url">struct_r_o_i_position.html#a7ec9344e32faa05e10a72705ed24e9f5</field>
    <field name="keywords">x ROIPosition::x ROIPosition</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ROIPosition::y</field>
    <field name="url">struct_r_o_i_position.html#aa790f0665220dffa8d196003f6c01b47</field>
    <field name="keywords">y ROIPosition::y ROIPosition</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">RunTrackerResults</field>
    <field name="url">struct_run_tracker_results.html</field>
    <field name="keywords">RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">RunTrackerResults::computeStats</field>
    <field name="args">()</field>
    <field name="url">struct_run_tracker_results.html#af1b623cdd914d29f356a39beacac2c22</field>
    <field name="keywords">computeStats RunTrackerResults::computeStats RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">RunTrackerResults::output</field>
    <field name="url">struct_run_tracker_results.html#a60eded57e24f569a9f09647eb85242bb</field>
    <field name="keywords">output RunTrackerResults::output RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">RunTrackerResults::truepos</field>
    <field name="url">struct_run_tracker_results.html#a3dea14e81b2d19737fbb8037e5416dfd</field>
    <field name="keywords">truepos RunTrackerResults::truepos RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">RunTrackerResults::meanErr</field>
    <field name="url">struct_run_tracker_results.html#aa54cf183d9405dec524ea3fbc9175763</field>
    <field name="keywords">meanErr RunTrackerResults::meanErr RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">RunTrackerResults::stdev</field>
    <field name="url">struct_run_tracker_results.html#a655e8e8fc33c59f9341ea0fc8979fec6</field>
    <field name="keywords">stdev RunTrackerResults::stdev RunTrackerResults</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">SampleFisherMatrix</field>
    <field name="url">class_sample_fisher_matrix.html</field>
    <field name="keywords">SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::SampleFisherMatrix</field>
    <field name="args">(float maxValue)</field>
    <field name="url">class_sample_fisher_matrix.html#a13d1f746d50cd96be39d289e4879664a</field>
    <field name="keywords">SampleFisherMatrix SampleFisherMatrix::SampleFisherMatrix SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::Compute</field>
    <field name="args">(vector3f pos, vector3f delta, ImageData &amp;lut, int w, int h, float zlutMinRadius, float zlutMaxRadius)</field>
    <field name="url">class_sample_fisher_matrix.html#abbb7a270019b9a81012d101a8327c434</field>
    <field name="keywords">Compute SampleFisherMatrix::Compute SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::Compute</field>
    <field name="args">(vector3f pos, vector3f delta, int w, int h, std::function&lt; void(ImageData &amp;out, vector3f pos)&gt; imageGenerator)</field>
    <field name="url">class_sample_fisher_matrix.html#a9af139862dc76bd4fd5d5e8e0a397eef</field>
    <field name="keywords">Compute SampleFisherMatrix::Compute SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::ComputeAverageFisher</field>
    <field name="args">(vector3f pos, int Nsamples, vector3f sampleRange, vector3f delta, int w, int h, std::function&lt; void(ImageData &amp;out, vector3f pos)&gt; imggen)</field>
    <field name="url">class_sample_fisher_matrix.html#a6082b4660ccbcd84b95103a66c008ce4</field>
    <field name="keywords">ComputeAverageFisher SampleFisherMatrix::ComputeAverageFisher SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::ImgDeriv</field>
    <field name="args">(TImageData&lt; T &gt; &amp;imgpx, TImageData&lt; T &gt; &amp;imgmx, T delta)</field>
    <field name="url">class_sample_fisher_matrix.html#a31071a3417d174b2ba6f6709f08a703b</field>
    <field name="keywords">ImgDeriv SampleFisherMatrix::ImgDeriv SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SampleFisherMatrix::FisherElem</field>
    <field name="args">(TImageData&lt; T &gt; &amp;mu, TImageData&lt; T &gt; &amp;muderiv1, TImageData&lt; T &gt; &amp;muderiv2)</field>
    <field name="url">class_sample_fisher_matrix.html#a8e84433c5ee7277d9f99b4dea8537b15</field>
    <field name="keywords">FisherElem SampleFisherMatrix::FisherElem SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SampleFisherMatrix::maxValue</field>
    <field name="url">class_sample_fisher_matrix.html#a0d6faf2b816bcdaa5e85b78a9731b8d0</field>
    <field name="keywords">maxValue SampleFisherMatrix::maxValue SampleFisherMatrix</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ScopedCPUProfiler</field>
    <field name="url">class_scoped_c_p_u_profiler.html</field>
    <field name="keywords">ScopedCPUProfiler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ScopedCPUProfiler::ScopedCPUProfiler</field>
    <field name="args">(double *time)</field>
    <field name="url">class_scoped_c_p_u_profiler.html#aa8bb23afe81908734ee51e5970f894ce</field>
    <field name="keywords">ScopedCPUProfiler ScopedCPUProfiler::ScopedCPUProfiler ScopedCPUProfiler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ScopedCPUProfiler::~ScopedCPUProfiler</field>
    <field name="args">()</field>
    <field name="url">class_scoped_c_p_u_profiler.html#a7349df81239e367a611633671c67d8d4</field>
    <field name="keywords">ScopedCPUProfiler::~ScopedCPUProfiler ScopedCPUProfiler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ScopedCPUProfiler::time</field>
    <field name="url">class_scoped_c_p_u_profiler.html#a36bc384b645ebc7dfbe14ae90ad12c0a</field>
    <field name="keywords">time ScopedCPUProfiler::time ScopedCPUProfiler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ScopedCPUProfiler::start</field>
    <field name="url">class_scoped_c_p_u_profiler.html#a8faf698c2f3bd4538d9f8acb61e82d1e</field>
    <field name="keywords">start ScopedCPUProfiler::start ScopedCPUProfiler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">SpeedAccResult</field>
    <field name="url">struct_speed_acc_result.html</field>
    <field name="keywords">SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SpeedAccResult::Compute</field>
    <field name="args">(const std::vector&lt; vector3f &gt; &amp;results, std::function&lt; vector3f(int x) &gt; truepos)</field>
    <field name="url">struct_speed_acc_result.html#a1dcba172a9a9d2974ee41278aeb6e7d6</field>
    <field name="keywords">Compute SpeedAccResult::Compute SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedAccResult::acc</field>
    <field name="url">struct_speed_acc_result.html#a3126444f87be7af1cfa4e8667d2074ca</field>
    <field name="keywords">acc SpeedAccResult::acc SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedAccResult::bias</field>
    <field name="url">struct_speed_acc_result.html#a5a85287067db300e2205507b8c67cd5a</field>
    <field name="keywords">bias SpeedAccResult::bias SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedAccResult::crlb</field>
    <field name="url">struct_speed_acc_result.html#aec7bafb1d6f5fa5022115857bbca5094</field>
    <field name="keywords">crlb SpeedAccResult::crlb SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedAccResult::speed</field>
    <field name="url">struct_speed_acc_result.html#acff2d93f39aef032dfb530636ca78463</field>
    <field name="keywords">speed SpeedAccResult::speed SpeedAccResult</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">SpeedInfo</field>
    <field name="url">struct_speed_info.html</field>
    <field name="keywords">SpeedInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedInfo::speed_cpu</field>
    <field name="url">struct_speed_info.html#a083482c754c5ab95f6f25238610f803c</field>
    <field name="keywords">speed_cpu SpeedInfo::speed_cpu SpeedInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedInfo::speed_gpu</field>
    <field name="url">struct_speed_info.html#aaa8f95513c3132d321801bfff20f11a4</field>
    <field name="keywords">speed_gpu SpeedInfo::speed_gpu SpeedInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedInfo::sched_cpu</field>
    <field name="url">struct_speed_info.html#a847cb8b35291af8f0f3bfa1b1bd888d0</field>
    <field name="keywords">sched_cpu SpeedInfo::sched_cpu SpeedInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">SpeedInfo::sched_gpu</field>
    <field name="url">struct_speed_info.html#a9703e36873f697d0157eb318c1316fba</field>
    <field name="keywords">sched_gpu SpeedInfo::sched_gpu SpeedInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">TextResultFile</field>
    <field name="url">class_text_result_file.html</field>
    <field name="keywords">TextResultFile</field>
    <field name="text">Placeholder Handler for a text output file Currently empty shell</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TextResultFile::TextResultFile</field>
    <field name="args">(const char *fn, bool write)</field>
    <field name="url">class_text_result_file.html#abeb889d9b521bf84cb9243fe48b285b9</field>
    <field name="keywords">TextResultFile TextResultFile::TextResultFile TextResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TextResultFile::LoadRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)</field>
    <field name="url">class_text_result_file.html#af71ce9c554ce7541343c36f0be7fc905</field>
    <field name="keywords">LoadRow TextResultFile::LoadRow TextResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TextResultFile::SaveRow</field>
    <field name="args">(std::vector&lt; vector3f &gt; &amp;pos)</field>
    <field name="url">class_text_result_file.html#a844e136d4324ce46f374f995c2074d7a</field>
    <field name="keywords">SaveRow TextResultFile::SaveRow TextResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">TextResultFile::f</field>
    <field name="url">class_text_result_file.html#a47f9fe9269ce091f44368108c39e3022</field>
    <field name="keywords">f TextResultFile::f TextResultFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ThreadPool</field>
    <field name="url">class_thread_pool.html</field>
    <field name="keywords">ThreadPool</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::ThreadPool</field>
    <field name="args">(TFunctor f, int Nthreads=-1)</field>
    <field name="url">class_thread_pool.html#a4bf2c70dcc87ba357f2027946646c07c</field>
    <field name="keywords">ThreadPool ThreadPool::ThreadPool ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::~ThreadPool</field>
    <field name="args">()</field>
    <field name="url">class_thread_pool.html#a67d508c151b2248a01aee26ad3409fc2</field>
    <field name="keywords">ThreadPool::~ThreadPool ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::ProcessArray</field>
    <field name="args">(TWorkItem *items, int n)</field>
    <field name="url">class_thread_pool.html#aa690b8055c0183d5a058b22b5a62bb74</field>
    <field name="keywords">ProcessArray ThreadPool::ProcessArray ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::AddWork</field>
    <field name="args">(TWorkItem w)</field>
    <field name="url">class_thread_pool.html#aef1a04d9ec3eef39a43cc45f471611d7</field>
    <field name="keywords">AddWork ThreadPool::AddWork ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::WaitUntilDone</field>
    <field name="args">()</field>
    <field name="url">class_thread_pool.html#a12e588b81c0cf6bf93f4ac2f0c50b4e8</field>
    <field name="keywords">WaitUntilDone ThreadPool::WaitUntilDone ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::IsDone</field>
    <field name="args">()</field>
    <field name="url">class_thread_pool.html#aa77d821a3c6a448256da4fd61e6c8fb2</field>
    <field name="keywords">IsDone ThreadPool::IsDone ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::Quit</field>
    <field name="args">()</field>
    <field name="url">class_thread_pool.html#a91bfc016ba30df063ef0b5e0f1448e02</field>
    <field name="keywords">Quit ThreadPool::Quit ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::ItemDone</field>
    <field name="args">()</field>
    <field name="url">class_thread_pool.html#ac3ba2c63821d18d21f3face879fbf9a4</field>
    <field name="keywords">ItemDone ThreadPool::ItemDone ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::GetNewItem</field>
    <field name="args">(TWorkItem &amp;item)</field>
    <field name="url">class_thread_pool.html#a3e9222d0af2a9b55bdb6102014ec28f3</field>
    <field name="keywords">GetNewItem ThreadPool::GetNewItem ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ThreadPool::ThreadEntryPoint</field>
    <field name="args">(void *param)</field>
    <field name="url">class_thread_pool.html#a21a711c365a2fb1dcd34b7a2271512d6</field>
    <field name="keywords">ThreadEntryPoint ThreadPool::ThreadEntryPoint ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::threads</field>
    <field name="url">class_thread_pool.html#ab0f1d51386c0070f4752a256ca2534ff</field>
    <field name="keywords">threads ThreadPool::threads ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::workMutex</field>
    <field name="url">class_thread_pool.html#ae889b134298a051739ae1bdfa211f6c9</field>
    <field name="keywords">workMutex ThreadPool::workMutex ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::work</field>
    <field name="url">class_thread_pool.html#a65b1014672bad573aa4b161e9258f121</field>
    <field name="keywords">work ThreadPool::work ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::inProgress</field>
    <field name="url">class_thread_pool.html#a0caf4cf7d4057f9550989b09b9ba65ad</field>
    <field name="keywords">inProgress ThreadPool::inProgress ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::quit</field>
    <field name="url">class_thread_pool.html#adb492ef4e81a157c98302daea9aeb737</field>
    <field name="keywords">quit ThreadPool::quit ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ThreadPool::worker</field>
    <field name="url">class_thread_pool.html#acf21a97033a7a3dc8852c2621dc10e7f</field>
    <field name="keywords">worker ThreadPool::worker ThreadPool&lt; TWorkItem, TFunctor &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Threads</field>
    <field name="url">struct_threads.html</field>
    <field name="keywords">Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Threads::ThreadEntryPoint</field>
    <field name="args">)(void *param)</field>
    <field name="url">struct_threads.html#a96d14421067bf938cfee477e206b9022</field>
    <field name="keywords">ThreadEntryPoint Threads::ThreadEntryPoint Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::ThreadCaller</field>
    <field name="args">(void *param)</field>
    <field name="url">struct_threads.html#a35cf4a0021c66092e4947a867c2a0fc8</field>
    <field name="keywords">ThreadCaller Threads::ThreadCaller Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Create</field>
    <field name="args">(ThreadEntryPoint method, void *param)</field>
    <field name="url">struct_threads.html#ab6aa79b1b2c148b8d384916d58e2443e</field>
    <field name="keywords">Create Threads::Create Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::RunningVistaOrBetter</field>
    <field name="args">()</field>
    <field name="url">struct_threads.html#aa2200fb0ef6f3664863e72b05849c8cb</field>
    <field name="keywords">RunningVistaOrBetter Threads::RunningVistaOrBetter Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::SetBackgroundPriority</field>
    <field name="args">(Handle *thread, bool bg)</field>
    <field name="url">struct_threads.html#a3649871bed9522101859b446986e1a2e</field>
    <field name="keywords">SetBackgroundPriority Threads::SetBackgroundPriority Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::WaitAndClose</field>
    <field name="args">(Handle *h)</field>
    <field name="url">struct_threads.html#a66c81807dee0d29c5ae6d254860e94d2</field>
    <field name="keywords">WaitAndClose Threads::WaitAndClose Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Sleep</field>
    <field name="args">(int ms)</field>
    <field name="url">struct_threads.html#a803a0b6899fb5e09ee7f56bd1986a287</field>
    <field name="keywords">Sleep Threads::Sleep Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::GetCPUCount</field>
    <field name="args">()</field>
    <field name="url">struct_threads.html#acb1d9a14cf18f2fcbc1bf07f51b4ba81</field>
    <field name="keywords">GetCPUCount Threads::GetCPUCount Threads</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Threads::Handle</field>
    <field name="url">struct_threads_1_1_handle.html</field>
    <field name="keywords">Handle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Handle::threadID</field>
    <field name="url">struct_threads_1_1_handle.html#a5e2757013c0abb756250e817a4e69317</field>
    <field name="keywords">threadID Threads::Handle::threadID Threads::Handle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Handle::callback</field>
    <field name="url">struct_threads_1_1_handle.html#a6ce8ea9aa439295782f770c96f41ff21</field>
    <field name="keywords">callback Threads::Handle::callback Threads::Handle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Handle::winhdl</field>
    <field name="url">struct_threads_1_1_handle.html#ae96b38f14dd31c440d926bd664e3e950</field>
    <field name="keywords">winhdl Threads::Handle::winhdl Threads::Handle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Handle::param</field>
    <field name="url">struct_threads_1_1_handle.html#a3fb6decb772694d8060c39573c3ea933</field>
    <field name="keywords">param Threads::Handle::param Threads::Handle</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">Threads::Mutex</field>
    <field name="url">struct_threads_1_1_mutex.html</field>
    <field name="keywords">Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Mutex::Mutex</field>
    <field name="args">(const char *name=0)</field>
    <field name="url">struct_threads_1_1_mutex.html#ad6a21c572100a6241fa34f1d265a2725</field>
    <field name="keywords">Mutex Threads::Mutex::Mutex Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Mutex::~Mutex</field>
    <field name="args">()</field>
    <field name="url">struct_threads_1_1_mutex.html#a34047e15c1aa45873ff56120d6c4d091</field>
    <field name="keywords">Threads::Mutex::~Mutex Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Mutex::lock</field>
    <field name="args">()</field>
    <field name="url">struct_threads_1_1_mutex.html#af3cb09072ecd935be502deb78f4519d5</field>
    <field name="keywords">lock Threads::Mutex::lock Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Mutex::unlock</field>
    <field name="args">()</field>
    <field name="url">struct_threads_1_1_mutex.html#ad78fadce2239c6d359986e443822f6f6</field>
    <field name="keywords">unlock Threads::Mutex::unlock Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Threads::Mutex::msg</field>
    <field name="args">(const char *m)</field>
    <field name="url">struct_threads_1_1_mutex.html#a55226184bf80652bf23cf8790edd4b86</field>
    <field name="keywords">msg Threads::Mutex::msg Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Mutex::h</field>
    <field name="url">struct_threads_1_1_mutex.html#a688cb7e044c7c8dc87e898bf88ff04d4</field>
    <field name="keywords">h Threads::Mutex::h Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Mutex::name</field>
    <field name="url">struct_threads_1_1_mutex.html#aaf5798d7b45f171dbfa965e0508b884f</field>
    <field name="keywords">name Threads::Mutex::name Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Mutex::trace</field>
    <field name="url">struct_threads_1_1_mutex.html#af7d136f3d4aadf1a23fc72e93b8a98a3</field>
    <field name="keywords">trace Threads::Mutex::trace Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Threads::Mutex::lockCount</field>
    <field name="url">struct_threads_1_1_mutex.html#a6bb290194be3b4d7668a743cb9398276</field>
    <field name="keywords">lockCount Threads::Mutex::lockCount Threads::Mutex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">TImageData</field>
    <field name="url">struct_t_image_data.html</field>
    <field name="keywords">TImageData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">vector2</field>
    <field name="url">structvector2.html</field>
    <field name="keywords">vector2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector2::vector2</field>
    <field name="args">()</field>
    <field name="url">structvector2.html#a6e939afd4c849f78ff033065b778d4e0</field>
    <field name="keywords">vector2 vector2::vector2 vector2&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector2::vector2</field>
    <field name="args">(Tx X, Ty Y)</field>
    <field name="url">structvector2.html#a224182db524d6395270aab145a678f33</field>
    <field name="keywords">vector2 vector2::vector2 vector2&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector2::random</field>
    <field name="args">(vector2 center, T R)</field>
    <field name="url">structvector2.html#a23c7eca20e87c5224954ff8c918cb259</field>
    <field name="keywords">random vector2::random vector2&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">vector2::x</field>
    <field name="url">structvector2.html#a22b63498d8e4abf9a2da054a247965b9</field>
    <field name="keywords">x vector2::x vector2&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">vector2::y</field>
    <field name="url">structvector2.html#a00b3268bc895adddf0b72d6acd8274a7</field>
    <field name="keywords">y vector2::y vector2&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">vector3</field>
    <field name="url">structvector3.html</field>
    <field name="keywords">vector3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::vector3</field>
    <field name="args">()</field>
    <field name="url">structvector3.html#ad2d29b21c4b3d1d03c3d37ec3c11f035</field>
    <field name="keywords">vector3 vector3::vector3 vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::vector3</field>
    <field name="args">(Tx X, Ty Y, Tz Z)</field>
    <field name="url">structvector3.html#a6186c133e4cbec341fe0f2860e40cc07</field>
    <field name="keywords">vector3 vector3::vector3 vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::vector3</field>
    <field name="args">(const vector3&lt; Tc &gt; &amp;o)</field>
    <field name="url">structvector3.html#a6e767e6ee53e894826d7e132765a5212</field>
    <field name="keywords">vector3 vector3::vector3 vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator*</field>
    <field name="args">(const vector3 &amp;o) const </field>
    <field name="url">structvector3.html#ae7c27003a1fd4e4965d86e9933ff6dd2</field>
    <field name="keywords">operator* vector3::operator* vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator*</field>
    <field name="args">(T a) const </field>
    <field name="url">structvector3.html#adb80a78a3b5d4e2997a4ac54bd44dfd9</field>
    <field name="keywords">operator* vector3::operator* vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator+</field>
    <field name="args">(const vector3 &amp;o) const </field>
    <field name="url">structvector3.html#aac13c3909b52664d7aa578315f2834da</field>
    <field name="keywords">operator+ vector3::operator+ vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator+=</field>
    <field name="args">(const vector3 &amp;o)</field>
    <field name="url">structvector3.html#a036d656692b4443a429469d3f9343fea</field>
    <field name="keywords">operator+= vector3::operator+= vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator-=</field>
    <field name="args">(const vector3 &amp;o)</field>
    <field name="url">structvector3.html#a5b4028d79ff347fe896a7a1f0339a494</field>
    <field name="keywords">operator-= vector3::operator-= vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator-</field>
    <field name="args">(const vector3 &amp;o) const </field>
    <field name="url">structvector3.html#a5acc31dfddfa1039f7405c9fcfd8f6ed</field>
    <field name="keywords">operator- vector3::operator- vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator-</field>
    <field name="args">(float a) const </field>
    <field name="url">structvector3.html#abb7276f5bed82c39c21d8322b43ab94e</field>
    <field name="keywords">operator- vector3::operator- vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator+</field>
    <field name="args">(float a) const </field>
    <field name="url">structvector3.html#a52ca9e8004e4785b29514d1f37104af1</field>
    <field name="keywords">operator+ vector3::operator+ vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator-</field>
    <field name="args">() const </field>
    <field name="url">structvector3.html#a68652fed6430d08fb7cf7c69f9012217</field>
    <field name="keywords">operator- vector3::operator- vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator*=</field>
    <field name="args">(const vector3 &amp;o)</field>
    <field name="url">structvector3.html#a995b6f52dc3a705cef8d52ddd486ba3c</field>
    <field name="keywords">operator*= vector3::operator*= vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator*=</field>
    <field name="args">(T a)</field>
    <field name="url">structvector3.html#a8ef9bc555fdedf081514841da31ba049</field>
    <field name="keywords">operator*= vector3::operator*= vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator/=</field>
    <field name="args">(T a)</field>
    <field name="url">structvector3.html#a85b98bbf3c4b2bea6c453732ee0856fc</field>
    <field name="keywords">operator/= vector3::operator/= vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::operator/</field>
    <field name="args">(T a)</field>
    <field name="url">structvector3.html#a1839b846d469f82fc1cf8e57e37f3e41</field>
    <field name="keywords">operator/ vector3::operator/ vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::length</field>
    <field name="args">()</field>
    <field name="url">structvector3.html#a3fc5ca7592aadf2aca643bbfe9190be6</field>
    <field name="keywords">length vector3::length vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">vector3::xy</field>
    <field name="args">()</field>
    <field name="url">structvector3.html#a08becc53916249d8c8bf6eb5a83ac21e</field>
    <field name="keywords">xy vector3::xy vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">vector3::x</field>
    <field name="url">structvector3.html#a5b466692e9550284d17a1bee6a6b8518</field>
    <field name="keywords">x vector3::x vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">vector3::y</field>
    <field name="url">structvector3.html#a1faa20a703bae3d1a673856466758383</field>
    <field name="keywords">y vector3::y vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">vector3::z</field>
    <field name="url">structvector3.html#a90c50e80a32423d5cc76f40e5f53ffbe</field>
    <field name="keywords">z vector3::z vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">friend</field>
    <field name="name">vector3::operator*</field>
    <field name="args">(T a, const vector3 &amp;b)</field>
    <field name="url">structvector3.html#a83c6ad5edd87abb65a597739d00e4e4a</field>
    <field name="keywords">operator* vector3::operator* vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">friend</field>
    <field name="name">vector3::operator/</field>
    <field name="args">(T a, vector3&lt; T &gt; b)</field>
    <field name="url">structvector3.html#a6a9df656c3922224500ee48266593abe</field>
    <field name="keywords">operator/ vector3::operator/ vector3&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">XCor1DBuffer</field>
    <field name="url">class_x_cor1_d_buffer.html</field>
    <field name="keywords">XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XCor1DBuffer::XCor1DBuffer</field>
    <field name="args">(int xcorw)</field>
    <field name="url">class_x_cor1_d_buffer.html#a9b53783159f4a512cc5c4713d436a76c</field>
    <field name="keywords">XCor1DBuffer XCor1DBuffer::XCor1DBuffer XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XCor1DBuffer::XCorFFTHelper</field>
    <field name="args">(complex_t *xc, complex_t *xcr, scalar_t *result)</field>
    <field name="url">class_x_cor1_d_buffer.html#a4c14e7a041865cb0405f460881d738b6</field>
    <field name="keywords">XCorFFTHelper XCor1DBuffer::XCorFFTHelper XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">XCor1DBuffer::fft_forward</field>
    <field name="url">class_x_cor1_d_buffer.html#ab7aa1608417f91f44fdc4acc963e6d3b</field>
    <field name="keywords">fft_forward XCor1DBuffer::fft_forward XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">XCor1DBuffer::fft_backward</field>
    <field name="url">class_x_cor1_d_buffer.html#afc27a4abe914d01397a98e174983916a</field>
    <field name="keywords">fft_backward XCor1DBuffer::fft_backward XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">XCor1DBuffer::xcorw</field>
    <field name="url">class_x_cor1_d_buffer.html#a3a5d68c065a62d412b4d615647b30788</field>
    <field name="keywords">xcorw XCor1DBuffer::xcorw XCor1DBuffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ZLUTParams</field>
    <field name="url">struct_z_l_u_t_params.html</field>
    <field name="keywords">ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUTParams::GetRadialZLUT</field>
    <field name="args">(int bead, int plane)</field>
    <field name="url">struct_z_l_u_t_params.html#a2a35427b775e56a0079b9029d1afbb9e</field>
    <field name="keywords">GetRadialZLUT ZLUTParams::GetRadialZLUT ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ZLUTParams::radialSteps</field>
    <field name="args">()</field>
    <field name="url">struct_z_l_u_t_params.html#a9579a1f453fa4966bbd7ca5c04a389d9</field>
    <field name="keywords">radialSteps ZLUTParams::radialSteps ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::minRadius</field>
    <field name="url">struct_z_l_u_t_params.html#a1e53b221a353b5543b95ab8472c0e27f</field>
    <field name="keywords">minRadius ZLUTParams::minRadius ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::maxRadius</field>
    <field name="url">struct_z_l_u_t_params.html#a828d7befc2a73cbe77d5fead8987b916</field>
    <field name="keywords">maxRadius ZLUTParams::maxRadius ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::zcmpwindow</field>
    <field name="url">struct_z_l_u_t_params.html#a5e4fca6a1f41e9dee7ba0614ab4c202d</field>
    <field name="keywords">zcmpwindow ZLUTParams::zcmpwindow ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::angularSteps</field>
    <field name="url">struct_z_l_u_t_params.html#a01c4d68849034d30553c2bbb353b9376</field>
    <field name="keywords">angularSteps ZLUTParams::angularSteps ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::planes</field>
    <field name="url">struct_z_l_u_t_params.html#ab00dffe1d70415e23bbf989d664495ab</field>
    <field name="keywords">planes ZLUTParams::planes ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::img</field>
    <field name="url">struct_z_l_u_t_params.html#a14a59385e3d76c6e50dd1d97ef5f3cac</field>
    <field name="keywords">img ZLUTParams::img ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ZLUTParams::trigtable</field>
    <field name="url">struct_z_l_u_t_params.html#a18e5051a3a4b118b45854c69977e2dbe</field>
    <field name="keywords">trigtable ZLUTParams::trigtable ZLUTParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">BeadFinder</field>
    <field name="url">namespace_bead_finder.html</field>
    <field name="keywords">BeadFinder</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">BeadFinder::Config</field>
    <field name="url">struct_bead_finder_1_1_config.html</field>
    <field name="keywords">Config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BeadFinder::Config::MinPixelDistance</field>
    <field name="args">()</field>
    <field name="url">struct_bead_finder_1_1_config.html#acb90a601bdb1ca9547d7e1948c0ea9f6</field>
    <field name="keywords">MinPixelDistance BeadFinder::Config::MinPixelDistance BeadFinder::Config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BeadFinder::Config::roi</field>
    <field name="url">struct_bead_finder_1_1_config.html#afd0fcc1cea252dc5c64d98d3df23887e</field>
    <field name="keywords">roi BeadFinder::Config::roi BeadFinder::Config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BeadFinder::Config::img_distance</field>
    <field name="url">struct_bead_finder_1_1_config.html#ad00f5cda73407df2aafe3a15c528a771</field>
    <field name="keywords">img_distance BeadFinder::Config::img_distance BeadFinder::Config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BeadFinder::Config::similarity</field>
    <field name="url">struct_bead_finder_1_1_config.html#ace5e499578ca57df89b304adab763a3e</field>
    <field name="keywords">similarity BeadFinder::Config::similarity BeadFinder::Config</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">BeadFinder::Position</field>
    <field name="url">struct_bead_finder_1_1_position.html</field>
    <field name="keywords">Position</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">BeadFinder::Position::Position</field>
    <field name="args">(int x=0, int y=0)</field>
    <field name="url">struct_bead_finder_1_1_position.html#a5655bb8d696a86c3ce1d3a2ec37d8281</field>
    <field name="keywords">Position BeadFinder::Position::Position BeadFinder::Position</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BeadFinder::Position::x</field>
    <field name="url">struct_bead_finder_1_1_position.html#a47ada55a5d19ee4090ca76f701c5f20a</field>
    <field name="keywords">x BeadFinder::Position::x BeadFinder::Position</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">BeadFinder::Position::y</field>
    <field name="url">struct_bead_finder_1_1_position.html#ad45fb2f56e63c82fba43e12b5e16eeec</field>
    <field name="keywords">y BeadFinder::Position::y BeadFinder::Position</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">kissfft_utils</field>
    <field name="url">namespacekissfft__utils.html</field>
    <field name="keywords">kissfft_utils</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">kissfft_utils::traits</field>
    <field name="url">structkissfft__utils_1_1traits.html</field>
    <field name="keywords">traits</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">kissfft_utils::traits::scalar_type</field>
    <field name="url">structkissfft__utils_1_1traits.html#ac60e3850ace9adc525d8f4008f13a190</field>
    <field name="keywords">scalar_type kissfft_utils::traits::scalar_type kissfft_utils::traits&lt; T_scalar &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">kissfft_utils::traits::cpx_type</field>
    <field name="url">structkissfft__utils_1_1traits.html#aa5947bb96077231ba1f1870b1c947034</field>
    <field name="keywords">cpx_type kissfft_utils::traits::cpx_type kissfft_utils::traits&lt; T_scalar &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft_utils::traits::fill_twiddles</field>
    <field name="args">(std::complex&lt; T_scalar &gt; *dst, int nfft, bool inverse) const </field>
    <field name="url">structkissfft__utils_1_1traits.html#a963aa6e0faf253b4db8cf348e1853c0c</field>
    <field name="keywords">fill_twiddles kissfft_utils::traits::fill_twiddles kissfft_utils::traits&lt; T_scalar &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">kissfft_utils::traits::prepare</field>
    <field name="args">(std::vector&lt; std::complex&lt; T_scalar &gt; &gt; &amp;dst, int nfft, bool inverse, std::vector&lt; int &gt; &amp;stageRadix, std::vector&lt; int &gt; &amp;stageRemainder) const </field>
    <field name="url">structkissfft__utils_1_1traits.html#aba3bcc9f5ad48851acc458711852d74c</field>
    <field name="keywords">prepare kissfft_utils::traits::prepare kissfft_utils::traits&lt; T_scalar &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">qtrk</field>
    <field name="url">namespaceqtrk.html</field>
    <field name="keywords">qtrk</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">qtrk::hash_map</field>
    <field name="url">classqtrk_1_1hash__map.html</field>
    <field name="keywords">hash_map</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">qtrk::hash_set</field>
    <field name="url">classqtrk_1_1hash__set.html</field>
    <field name="keywords">hash_set</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">sfft</field>
    <field name="url">namespacesfft.html</field>
    <field name="keywords">sfft</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">sfft::complex</field>
    <field name="url">structsfft_1_1complex.html</field>
    <field name="keywords">complex</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::imag</field>
    <field name="args">()</field>
    <field name="url">structsfft_1_1complex.html#a5009deeeef4a74a8f75db6e78d832fcc</field>
    <field name="keywords">imag sfft::complex::imag sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::real</field>
    <field name="args">()</field>
    <field name="url">structsfft_1_1complex.html#ab7b8596da4ba20a31758a4c0a103d011</field>
    <field name="keywords">real sfft::complex::real sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::imag</field>
    <field name="args">() const </field>
    <field name="url">structsfft_1_1complex.html#a7902faacfb7ac78d69a9ce5859943e01</field>
    <field name="keywords">imag sfft::complex::imag sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::real</field>
    <field name="args">() const </field>
    <field name="url">structsfft_1_1complex.html#a2a5ad98469d109a88b115419dab31ef6</field>
    <field name="keywords">real sfft::complex::real sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::complex</field>
    <field name="args">()</field>
    <field name="url">structsfft_1_1complex.html#a5e2144a0d2a2723cbfa187c6e2371d77</field>
    <field name="keywords">complex sfft::complex::complex sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::complex</field>
    <field name="args">(T a, T b=0.0)</field>
    <field name="url">structsfft_1_1complex.html#ac01adbfd40a3b613df13daaac0710aec</field>
    <field name="keywords">complex sfft::complex::complex sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::conjugate</field>
    <field name="args">()</field>
    <field name="url">structsfft_1_1complex.html#a3913662ea68490650bb3c076853d6928</field>
    <field name="keywords">conjugate sfft::complex::conjugate sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator*</field>
    <field name="args">(const T &amp;b) const </field>
    <field name="url">structsfft_1_1complex.html#a87df52644b5b53af4d2e65f5bd528fe3</field>
    <field name="keywords">operator* sfft::complex::operator* sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator*=</field>
    <field name="args">(const T &amp;b)</field>
    <field name="url">structsfft_1_1complex.html#a4c35e8763f5fddfb6bf0529e00d25860</field>
    <field name="keywords">operator*= sfft::complex::operator*= sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator*</field>
    <field name="args">(const complex &amp;b) const </field>
    <field name="url">structsfft_1_1complex.html#a47e6dfd07151ebf89d2bea45e4bc8589</field>
    <field name="keywords">operator* sfft::complex::operator* sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator-</field>
    <field name="args">(const complex &amp;b) const </field>
    <field name="url">structsfft_1_1complex.html#a6b6b1333eab666441255bd2d64dcaf0c</field>
    <field name="keywords">operator- sfft::complex::operator- sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator+</field>
    <field name="args">(const complex &amp;b) const </field>
    <field name="url">structsfft_1_1complex.html#a36befb2eed269d8171b33bde285539e4</field>
    <field name="keywords">operator+ sfft::complex::operator+ sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::operator+=</field>
    <field name="args">(const complex &amp;b)</field>
    <field name="url">structsfft_1_1complex.html#a590d66355d3fd085e594e47339f02d06</field>
    <field name="keywords">operator+= sfft::complex::operator+= sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">sfft::complex::complex</field>
    <field name="args">(const std::complex&lt; T &gt; &amp;a)</field>
    <field name="url">structsfft_1_1complex.html#a13433f4d6bd5aa2a5609b2877b5b1d7f</field>
    <field name="keywords">complex sfft::complex::complex sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">sfft::complex::x</field>
    <field name="url">structsfft_1_1complex.html#abce667bde1aace2b50483797715d92f5</field>
    <field name="keywords">x sfft::complex::x sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">sfft::complex::y</field>
    <field name="url">structsfft_1_1complex.html#adf9d36505422dd34ae49c7051d4404ec</field>
    <field name="keywords">y sfft::complex::y sfft::complex&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">Queued Tracker software QueuedTracker or QTrk in short is an API that facilitates the 3 dimensional subpixel tracking of a magnetic bead in a Magnetic Tweezers MT setup The code found here generates a general purpose library in the form of a DLL that can be used from either NET applications or LabVIEW The LabVIEW GUI and hardware control which is not included in this documentation has been created very specifically for the setups as designed and used in the Nynke Dekker lab The MT setups are homebuilt devices for biological single molecule measurements They have evolved over the years and so has the need for the related software Considering the framerate and number of pixels of state of the art cameras involved in the setups the requirements with regards to data handling are now very steep A measurement running for a few hours generates hundreds of gigabytes worth of image data As such the need arose to do the image analysis fast in real-time This software was created to do precisely that To ensure high speed data analysis multiple algorithms have been implemented in multithreaded CPU and GPU through CUDA implementations with a scheduling shell QueuedCPUTracker and QueuedCUDATracker and separate data gathering and saving thread ResultManager The goal is to find a 3 dimensional position of a bead from a microscopic image A typical image of a single bead is displayed below To perform the tracking specific algorithms exist and have been implemented Currently the available options are Algorithm Dimensions CPU CUDA Reference Notes Starting point QueuedCPUTracker::ProcessJob QueuedCUDATracker::ExecuteBatch Functions from which the algorithms are called dependent on settings Center of Mass COM x y CPUTracker::ComputeMeanAndCOM BgCorrectedCOM Always executed for first guess 1D Cross Correlation XCor1D x y CPUTracker::ComputeXCorInterpolated Not implemented Quadrant Interpolation QI x y CPUTracker::ComputeQI QI QI::Execute Recommended algorithm Optimized for speed and accuracy 2D Gaussian fit x y CPUTracker::Compute2DGaussianMLE G2MLE_Compute Lookup table LUT z CPUTracker::ComputeRadialProfile CPUTracker::LUTProfileCompare ZLUT_RadialProfileKernel ZLUT_ComputeZ Only available method for z localization To be able to compile the DLLs you need Visual Studio 2010 CUDA 6.5 To be able to use the CUDA DLLs the cudart32_65.dll and cufft32_65.dll or 64 bit versions if compiled with that need to be known and accessible by the system i.e they need to be in the same folder We are currently limited to CUDA 6.5 at the highest due to the fact that we have a 32 bit LabVIEW version on setups and 32 bit cuFFT has been deprecated in newer CUDA versions Original work by Jelmer Cnossen Maintenance testing documentation and improvements by Jordi Wassenburg</field>
  </doc>
</add>
